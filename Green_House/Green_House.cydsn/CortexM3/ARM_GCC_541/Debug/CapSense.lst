ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	CapSense_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	CapSense_Enable, %function
  25              	CapSense_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\CapSense.c"
   1:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CapSense.c **** * File Name: CapSense.c
   3:Generated_Source\PSoC5/CapSense.c **** * Version 3.50
   4:Generated_Source\PSoC5/CapSense.c **** *
   5:Generated_Source\PSoC5/CapSense.c **** * Description:
   6:Generated_Source\PSoC5/CapSense.c **** *  This file provides the source code of scanning APIs for the CapSense CSD 
   7:Generated_Source\PSoC5/CapSense.c **** *  component.
   8:Generated_Source\PSoC5/CapSense.c **** *
   9:Generated_Source\PSoC5/CapSense.c **** * Note:
  10:Generated_Source\PSoC5/CapSense.c **** *
  11:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
  12:Generated_Source\PSoC5/CapSense.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/CapSense.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/CapSense.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/CapSense.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/CapSense.c **** 
  18:Generated_Source\PSoC5/CapSense.c **** #include "CapSense.h"
  19:Generated_Source\PSoC5/CapSense.c **** #include "cyapicallbacks.h"
  20:Generated_Source\PSoC5/CapSense.c **** 
  21:Generated_Source\PSoC5/CapSense.c **** 
  22:Generated_Source\PSoC5/CapSense.c **** static uint8 CapSense_initVar = 0u;
  23:Generated_Source\PSoC5/CapSense.c ****             
  24:Generated_Source\PSoC5/CapSense.c **** /* Global software variables */
  25:Generated_Source\PSoC5/CapSense.c **** volatile uint8 CapSense_csv;            /* CapSense CSD status, control variable */
  26:Generated_Source\PSoC5/CapSense.c **** volatile uint8 CapSense_sensorIndex;    /* Index of scannig sensor */
  27:Generated_Source\PSoC5/CapSense.c **** 
  28:Generated_Source\PSoC5/CapSense.c **** /* AutoTunning start */
  29:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
  30:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_lowLevelTuningDone = 1u;
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 2


  31:Generated_Source\PSoC5/CapSense.c **** #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
  32:Generated_Source\PSoC5/CapSense.c **** 
  33:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
  34:Generated_Source\PSoC5/CapSense.c ****     uint8  CapSense_extRbCh0Cur = CapSense_RBLEED1;
  35:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
  36:Generated_Source\PSoC5/CapSense.c ****         uint8  CapSense_extRbCh1Cur = (CapSense_RBLEED1 + CapSense_TOTAL_RB_NUMBER__CH0);
  37:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)*/ 
  38:Generated_Source\PSoC5/CapSense.c **** #endif /* (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB) */ 
  39:Generated_Source\PSoC5/CapSense.c ****         
  40:Generated_Source\PSoC5/CapSense.c **** /* Global array of Raw Counts */
  41:Generated_Source\PSoC5/CapSense.c **** uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT]; 
  42:Generated_Source\PSoC5/CapSense.c **** 
  43:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_sensorEnableMask[(((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)] = {
  44:Generated_Source\PSoC5/CapSense.c **** 0x1u, };
  45:Generated_Source\PSoC5/CapSense.c **** 
  46:Generated_Source\PSoC5/CapSense.c **** uint8 CYXDATA * const CYCODE CapSense_pcTable[] = {
  47:Generated_Source\PSoC5/CapSense.c **** 0,
  48:Generated_Source\PSoC5/CapSense.c **** };
  49:Generated_Source\PSoC5/CapSense.c **** 
  50:Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_portTable[] = {
  51:Generated_Source\PSoC5/CapSense.c **** 0,
  52:Generated_Source\PSoC5/CapSense.c **** };
  53:Generated_Source\PSoC5/CapSense.c **** 
  54:Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_maskTable[] = {
  55:Generated_Source\PSoC5/CapSense.c **** 0,
  56:Generated_Source\PSoC5/CapSense.c **** };
  57:Generated_Source\PSoC5/CapSense.c **** 
  58:Generated_Source\PSoC5/CapSense.c **** uint8 CYXDATA * const CYCODE CapSense_csTable[] = {
  59:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT0_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT1_CAPS_SEL, (uint8 CYXDATA *)CY
  60:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT3_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT4_CAPS_SEL, (uint8 CYXDATA *)CY
  61:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT6_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT15_CAPS_SEL,
  62:Generated_Source\PSoC5/CapSense.c **** };
  63:Generated_Source\PSoC5/CapSense.c **** 
  64:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_idacSettings[] = {
  65:Generated_Source\PSoC5/CapSense.c ****     200u,
  66:Generated_Source\PSoC5/CapSense.c **** };
  67:Generated_Source\PSoC5/CapSense.c **** 
  68:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_widgetResolution[] = {
  69:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
  70:Generated_Source\PSoC5/CapSense.c **** };
  71:Generated_Source\PSoC5/CapSense.c **** 
  72:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_analogSwitchDivider[CapSense_TOTAL_SCANSLOT_COUNT];
  73:Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_widgetNumber[] = {
  74:Generated_Source\PSoC5/CapSense.c ****     0u, /* DummyWidget__BTN */
  75:Generated_Source\PSoC5/CapSense.c ****     
  76:Generated_Source\PSoC5/CapSense.c **** };
  77:Generated_Source\PSoC5/CapSense.c **** 
  78:Generated_Source\PSoC5/CapSense.c **** 
  79:Generated_Source\PSoC5/CapSense.c **** 
  80:Generated_Source\PSoC5/CapSense.c **** 
  81:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
  82:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Init
  83:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
  84:Generated_Source\PSoC5/CapSense.c **** *
  85:Generated_Source\PSoC5/CapSense.c **** * Summary:
  86:Generated_Source\PSoC5/CapSense.c **** *  Inits default CapSense configuration provided with customizer that defines 
  87:Generated_Source\PSoC5/CapSense.c **** *  mode of component operations and resets all sensors to an inactive state.
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 3


  88:Generated_Source\PSoC5/CapSense.c **** *
  89:Generated_Source\PSoC5/CapSense.c **** * Parameters:
  90:Generated_Source\PSoC5/CapSense.c **** *  None
  91:Generated_Source\PSoC5/CapSense.c **** *
  92:Generated_Source\PSoC5/CapSense.c **** * Return:
  93:Generated_Source\PSoC5/CapSense.c **** *  None
  94:Generated_Source\PSoC5/CapSense.c **** *
  95:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
  96:Generated_Source\PSoC5/CapSense.c **** void CapSense_Init(void) 
  97:Generated_Source\PSoC5/CapSense.c **** {
  98:Generated_Source\PSoC5/CapSense.c ****     #if ( (CapSense_PRS_OPTIONS) || \
  99:Generated_Source\PSoC5/CapSense.c ****           (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_UDB) || \
 100:Generated_Source\PSoC5/CapSense.c ****           ( (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
 101:Generated_Source\PSoC5/CapSense.c ****             (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_UDB)) )
 102:Generated_Source\PSoC5/CapSense.c ****         
 103:Generated_Source\PSoC5/CapSense.c ****         uint8 enableInterrupts;
 104:Generated_Source\PSoC5/CapSense.c ****     #endif /* ( (CapSense_PRS_OPTIONS) || \
 105:Generated_Source\PSoC5/CapSense.c ****            * (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_UDB) || \
 106:Generated_Source\PSoC5/CapSense.c ****            * ( (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
 107:Generated_Source\PSoC5/CapSense.c ****            * (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_UDB)) ) 
 108:Generated_Source\PSoC5/CapSense.c ****            */
 109:Generated_Source\PSoC5/CapSense.c ****     
 110:Generated_Source\PSoC5/CapSense.c ****     /* Clear all sensors */
 111:Generated_Source\PSoC5/CapSense.c ****     CapSense_ClearSensors();
 112:Generated_Source\PSoC5/CapSense.c **** 
 113:Generated_Source\PSoC5/CapSense.c ****     /* Set Prescaler */
 114:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 115:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 116:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
 117:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_CONTROL_REG   = (CapSense_PRESCALER_CTRL_ENABLE |
 118:Generated_Source\PSoC5/CapSense.c ****                                                     CapSense_PRESCALER_CTRL_MODE_CMP);
 119:Generated_Source\PSoC5/CapSense.c ****                                                
 120:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_CONTROL2_REG |= CapSense_PRESCALER_CTRL_CMP_LESS_EQ;
 121:Generated_Source\PSoC5/CapSense.c ****     #else
 122:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 123:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 124:Generated_Source\PSoC5/CapSense.c **** 
 125:Generated_Source\PSoC5/CapSense.c ****     /* Set PRS */
 126:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRS_OPTIONS)
 127:Generated_Source\PSoC5/CapSense.c ****         CapSense_SetAnalogSwitchesSource(CapSense_ANALOG_SWITCHES_SRC_PRS);
 128:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_PRS_OPTIONS) */
 129:Generated_Source\PSoC5/CapSense.c **** 
 130:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRS_OPTIONS == CapSense_PRS_8BITS)
 131:Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */
 132:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 133:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 134:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 135:Generated_Source\PSoC5/CapSense.c ****         
 136:Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 137:Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_REG   = CapSense_PRS8_DEFAULT_POLYNOM;
 138:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 139:Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_REG = CapSense_MEASURE_FULL_RANGE_LOW;
 140:Generated_Source\PSoC5/CapSense.c ****         
 141:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRS_OPTIONS == CapSense_PRS_16BITS)
 142:Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */ 
 143:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();  
 144:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 4


 145:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_B_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 146:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 147:Generated_Source\PSoC5/CapSense.c ****         
 148:Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 149:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_POLYNOM_PTR, CapSense_PRS16_DEFAULT_POLYNOM);
 150:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 151:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_SEED_COPY_PTR, CapSense_MEASURE_FULL_RANGE);
 152:Generated_Source\PSoC5/CapSense.c ****                 
 153:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRS_OPTIONS == CapSense_PRS_16BITS_4X)
 154:Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */
 155:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 156:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG  |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 157:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 158:Generated_Source\PSoC5/CapSense.c ****         
 159:Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 160:Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_A__D1_REG   = HI8(CapSense_PRS16_DEFAULT_POLYNOM);
 161:Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_A__D0_REG   = LO8(CapSense_PRS16_DEFAULT_POLYNOM);
 162:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 163:Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_A__F1_REG = CapSense_MEASURE_FULL_RANGE_LOW;
 164:Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_A__F0_REG = CapSense_MEASURE_FULL_RANGE_LOW; 
 165:Generated_Source\PSoC5/CapSense.c ****         
 166:Generated_Source\PSoC5/CapSense.c ****     #else
 167:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without PRS */
 168:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRS_OPTIONS == CapSense_PRS_8BITS) */ 
 169:Generated_Source\PSoC5/CapSense.c ****     
 170:Generated_Source\PSoC5/CapSense.c ****     /* Set ScanSpeed */
 171:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_PERIOD_REG = CapSense_SCANSPEED_VALUE;
 172:Generated_Source\PSoC5/CapSense.c ****     
 173:Generated_Source\PSoC5/CapSense.c ****     /* Set the Measure */
 174:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 175:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 176:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 177:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 178:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_PWM_CH0_COUNTER_PTR, CapSense_MEASURE_FULL_RANGE);
 179:Generated_Source\PSoC5/CapSense.c ****         
 180:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 181:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 182:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 183:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_RAW_CH0_PERIOD_PTR, CapSense_MEASURE_FULL_RANGE);
 184:Generated_Source\PSoC5/CapSense.c ****     
 185:Generated_Source\PSoC5/CapSense.c ****     #else
 186:Generated_Source\PSoC5/CapSense.c ****         /*Window PWM and Raw Counter AUX set */
 187:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 188:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 189:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 190:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 191:Generated_Source\PSoC5/CapSense.c ****         
 192:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 193:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 194:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 195:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 196:Generated_Source\PSoC5/CapSense.c ****         
 197:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 198:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 199:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 200:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 201:Generated_Source\PSoC5/CapSense.c ****         
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 5


 202:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 203:Generated_Source\PSoC5/CapSense.c ****     
 204:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 205:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 206:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 207:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 208:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 209:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PWM_CH1_COUNTER_PTR, CapSense_MEASURE_FULL_RANGE);
 210:Generated_Source\PSoC5/CapSense.c ****             
 211:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 212:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 213:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 214:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_RAW_CH1_PERIOD_PTR, CapSense_MEASURE_FULL_RANGE);
 215:Generated_Source\PSoC5/CapSense.c ****            
 216:Generated_Source\PSoC5/CapSense.c ****         #else
 217:Generated_Source\PSoC5/CapSense.c ****             /*Window PWM and Raw Counter AUX set */
 218:Generated_Source\PSoC5/CapSense.c ****             enableInterrupts = CyEnterCriticalSection();
 219:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 220:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 221:Generated_Source\PSoC5/CapSense.c ****             CyExitCriticalSection(enableInterrupts);
 222:Generated_Source\PSoC5/CapSense.c ****             
 223:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 224:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 225:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 226:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 227:Generated_Source\PSoC5/CapSense.c ****             
 228:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 229:Generated_Source\PSoC5/CapSense.c ****             
 230:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 231:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 232:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 233:Generated_Source\PSoC5/CapSense.c ****             
 234:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 235:Generated_Source\PSoC5/CapSense.c ****     
 236:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN) */
 237:Generated_Source\PSoC5/CapSense.c ****     
 238:Generated_Source\PSoC5/CapSense.c ****     /* Setup ISR */
 239:Generated_Source\PSoC5/CapSense.c ****     CyIntDisable(CapSense_IsrCH0_ISR_NUMBER);
 240:Generated_Source\PSoC5/CapSense.c ****     (void)CyIntSetVector(CapSense_IsrCH0_ISR_NUMBER, &CapSense_IsrCH0_ISR);
 241:Generated_Source\PSoC5/CapSense.c ****     CyIntSetPriority(CapSense_IsrCH0_ISR_NUMBER, CapSense_IsrCH0_ISR_PRIORITY);
 242:Generated_Source\PSoC5/CapSense.c ****     
 243:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 244:Generated_Source\PSoC5/CapSense.c ****         CyIntDisable(CapSense_IsrCH1_ISR_NUMBER);
 245:Generated_Source\PSoC5/CapSense.c ****         CyIntSetVector(CapSense_IsrCH1_ISR_NUMBER, CapSense_IsrCH1_ISR);
 246:Generated_Source\PSoC5/CapSense.c ****         CyIntSetPriority(CapSense_IsrCH1_ISR_NUMBER, CapSense_IsrCH1_ISR_PRIORITY);
 247:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 248:Generated_Source\PSoC5/CapSense.c ****     
 249:Generated_Source\PSoC5/CapSense.c ****     /* Setup AMux Bus: Connect Cmod, Cmp, Idac */
 250:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Init();
 251:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMOD_CHANNEL);
 252:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMP_VP_CHANNEL);
 253:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 254:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
 255:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 256:Generated_Source\PSoC5/CapSense.c ****     
 257:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 258:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Init();
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 6


 259:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_CMOD_CHANNEL);
 260:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_CMP_VP_CHANNEL);
 261:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 262:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_IDAC_CHANNEL);
 263:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 264:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 265:Generated_Source\PSoC5/CapSense.c ****     
 266:Generated_Source\PSoC5/CapSense.c ****     /* Int Rb */
 267:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
 268:Generated_Source\PSoC5/CapSense.c ****         CapSense_InitRb();
 269:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB) */
 270:Generated_Source\PSoC5/CapSense.c ****     
 271:Generated_Source\PSoC5/CapSense.c ****     /* Enable window generation */
 272:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH0;
 273:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 274:Generated_Source\PSoC5/CapSense.c ****         CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH1;
 275:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 276:Generated_Source\PSoC5/CapSense.c ****     
 277:Generated_Source\PSoC5/CapSense.c ****     /* Initialize Cmp and Idac */
 278:Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Init();
 279:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 280:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Init();
 281:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetPolarity(CapSense_IdacCH0_IDIR);
 282:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetRange(CapSense_IDAC_RANGE_VALUE);
 283:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 284:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 285:Generated_Source\PSoC5/CapSense.c ****     
 286:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 287:Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Init();
 288:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 289:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Init();
 290:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetPolarity(CapSense_IdacCH1_IDIR);
 291:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetRange(CapSense_IDAC_RANGE_VALUE);
 292:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetValue(CapSense_TURN_OFF_IDAC);
 293:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 294:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 295:Generated_Source\PSoC5/CapSense.c ****     
 296:Generated_Source\PSoC5/CapSense.c ****     /* Initialize Vref if as VDAC */
 297:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 298:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Init();
 299:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 300:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Init();
 301:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE */
 302:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_VREF_OPTIONS */
 303:Generated_Source\PSoC5/CapSense.c **** }
 304:Generated_Source\PSoC5/CapSense.c **** 
 305:Generated_Source\PSoC5/CapSense.c **** 
 306:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 307:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Enable
 308:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 309:Generated_Source\PSoC5/CapSense.c **** *
 310:Generated_Source\PSoC5/CapSense.c **** * Summary:
 311:Generated_Source\PSoC5/CapSense.c **** *  Enables active mode power template bits for number of component used within 
 312:Generated_Source\PSoC5/CapSense.c **** *  CapSense.
 313:Generated_Source\PSoC5/CapSense.c **** *
 314:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 315:Generated_Source\PSoC5/CapSense.c **** *  None
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 7


 316:Generated_Source\PSoC5/CapSense.c **** *
 317:Generated_Source\PSoC5/CapSense.c **** * Return:
 318:Generated_Source\PSoC5/CapSense.c **** *  None
 319:Generated_Source\PSoC5/CapSense.c **** *
 320:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 321:Generated_Source\PSoC5/CapSense.c **** void CapSense_Enable(void) 
 322:Generated_Source\PSoC5/CapSense.c **** {
  28              		.loc 1 322 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 323:Generated_Source\PSoC5/CapSense.c ****     uint8 enableInterrupts;
 324:Generated_Source\PSoC5/CapSense.c ****     
 325:Generated_Source\PSoC5/CapSense.c ****     enableInterrupts = CyEnterCriticalSection();
  36              		.loc 1 325 0
  37 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  38              	.LVL0:
  39 0006 0446     		mov	r4, r0
  40              	.LVL1:
 326:Generated_Source\PSoC5/CapSense.c ****     
 327:Generated_Source\PSoC5/CapSense.c ****     /* Enable Prescaler */
 328:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 329:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing  for UDB */
 330:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
 331:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_ACT_PWRMGR_REG  |= CapSense_PRESCALER_ACT_PWR_EN;
 332:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_STBY_PWRMGR_REG |= CapSense_PRESCALER_STBY_PWR_EN;
 333:Generated_Source\PSoC5/CapSense.c ****         
 334:Generated_Source\PSoC5/CapSense.c ****     #else
 335:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 336:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 337:Generated_Source\PSoC5/CapSense.c ****     
 338:Generated_Source\PSoC5/CapSense.c ****     /* Enable ScanSpeed */
 339:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_AUX_CONTROL_REG |= CapSense_SCANSPEED_CTRL_ENABLE;
  41              		.loc 1 339 0
  42 0008 134A     		ldr	r2, .L3
  43 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  44 000c 43F02003 		orr	r3, r3, #32
  45 0010 1370     		strb	r3, [r2]
 340:Generated_Source\PSoC5/CapSense.c ****     
 341:Generated_Source\PSoC5/CapSense.c ****     /* Enable Measure CH0 */
 342:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 343:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 344:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ACT_PWRMGR_REG  |= CapSense_PWM_CH0_ACT_PWR_EN;
 345:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_STBY_PWRMGR_REG |= CapSense_PWM_CH0_STBY_PWR_EN;
 346:Generated_Source\PSoC5/CapSense.c ****         
 347:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 348:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ACT_PWRMGR_REG  |= CapSense_RAW_CH0_ACT_PWR_EN;
 349:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_STBY_PWRMGR_REG |= CapSense_RAW_CH0_STBY_PWR_EN;
 350:Generated_Source\PSoC5/CapSense.c ****         
 351:Generated_Source\PSoC5/CapSense.c ****     #else
 352:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 353:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 354:Generated_Source\PSoC5/CapSense.c ****         
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 8


 355:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 356:Generated_Source\PSoC5/CapSense.c ****     
 357:Generated_Source\PSoC5/CapSense.c ****     /* Enable Measure CH1*/
 358:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 359:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 360:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 361:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ACT_PWRMGR_REG  |= CapSense_PWM_CH1_ACT_PWR_EN;
 362:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_STBY_PWRMGR_REG |= CapSense_PWM_CH1_STBY_PWR_EN;
 363:Generated_Source\PSoC5/CapSense.c ****             
 364:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 365:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ACT_PWRMGR_REG  |= CapSense_RAW_CH1_ACT_PWR_EN;
 366:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_STBY_PWRMGR_REG |= CapSense_RAW_CH1_STBY_PWR_EN;
 367:Generated_Source\PSoC5/CapSense.c ****            
 368:Generated_Source\PSoC5/CapSense.c ****         #else
 369:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 370:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 371:Generated_Source\PSoC5/CapSense.c ****         
 372:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 373:Generated_Source\PSoC5/CapSense.c ****     
 374:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 375:Generated_Source\PSoC5/CapSense.c ****     
 376:Generated_Source\PSoC5/CapSense.c ****     /* Enable the Clock */
 377:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CLOCK_SOURCE == CapSense_INTERNAL_CLOCK)
 378:Generated_Source\PSoC5/CapSense.c ****        CapSense_IntClock_Enable();
  46              		.loc 1 378 0
  47 0012 FFF7FEFF 		bl	CapSense_IntClock_Start
  48              	.LVL2:
 379:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 380:Generated_Source\PSoC5/CapSense.c ****     
 381:Generated_Source\PSoC5/CapSense.c ****     /* Setup Cmp and Idac */
 382:Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Enable();
  49              		.loc 1 382 0
  50 0016 FFF7FEFF 		bl	CapSense_CompCH0_Enable
  51              	.LVL3:
 383:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 384:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Enable();
  52              		.loc 1 384 0
  53 001a FFF7FEFF 		bl	CapSense_IdacCH0_Enable
  54              	.LVL4:
 385:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 386:Generated_Source\PSoC5/CapSense.c ****     
 387:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 388:Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Enable();
 389:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 390:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Enable();
 391:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 392:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 393:Generated_Source\PSoC5/CapSense.c ****     
 394:Generated_Source\PSoC5/CapSense.c ****     /* Enable Vref */
 395:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 396:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Enable();
 397:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_SetValue(CapSense_VdacRefCH0_DEFAULT_DATA);
 398:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 399:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Enable();
 400:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_SetValue(CapSense_VdacRefCH1_DEFAULT_DATA);
 401:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 402:Generated_Source\PSoC5/CapSense.c ****     #else
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 9


 403:Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 404:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG |= CapSense_BufCH0_STBY_PWR_EN;
  55              		.loc 1 404 0
  56 001e 0F4A     		ldr	r2, .L3+4
  57 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  58 0022 43F02003 		orr	r3, r3, #32
  59 0026 1370     		strb	r3, [r2]
 405:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG  |= CapSense_BufCH0_ACT_PWR_EN;
  60              		.loc 1 405 0
  61 0028 103A     		subs	r2, r2, #16
  62 002a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  63 002c 43F02003 		orr	r3, r3, #32
  64 0030 1370     		strb	r3, [r2]
 406:Generated_Source\PSoC5/CapSense.c ****         
 407:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 408:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_STBY_PWRMGR_REG |= CapSense_BufCH1_STBY_PWR_EN;
 409:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_ACT_PWRMGR_REG  |= CapSense_BufCH1_ACT_PWR_EN;
 410:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 411:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
 412:Generated_Source\PSoC5/CapSense.c ****     
 413:Generated_Source\PSoC5/CapSense.c ****     /* Set reference on AMux Bus */
 414:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 415:Generated_Source\PSoC5/CapSense.c ****         /* Connect Vdac to AMux Bus */
 416:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
 417:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 418:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_VREF_CHANNEL);
 419:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 420:Generated_Source\PSoC5/CapSense.c ****         
 421:Generated_Source\PSoC5/CapSense.c ****     #else
 422:Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 423:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
  65              		.loc 1 423 0
  66 0032 02F5A652 		add	r2, r2, #5312
  67 0036 0732     		adds	r2, r2, #7
  68 0038 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  69 003a 43F00103 		orr	r3, r3, #1
  70 003e 1370     		strb	r3, [r2]
 424:Generated_Source\PSoC5/CapSense.c ****         
 425:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 426:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 427:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 428:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)*/
 429:Generated_Source\PSoC5/CapSense.c ****     
 430:Generated_Source\PSoC5/CapSense.c ****     CyExitCriticalSection(enableInterrupts);
  71              		.loc 1 430 0
  72 0040 2046     		mov	r0, r4
  73 0042 FFF7FEFF 		bl	CyExitCriticalSection
  74              	.LVL5:
 431:Generated_Source\PSoC5/CapSense.c ****     
 432:Generated_Source\PSoC5/CapSense.c ****     /* Enable interrupt */
 433:Generated_Source\PSoC5/CapSense.c ****     CyIntEnable(CapSense_IsrCH0_ISR_NUMBER);
  75              		.loc 1 433 0
  76 0046 0122     		movs	r2, #1
  77 0048 054B     		ldr	r3, .L3+8
  78 004a 1A60     		str	r2, [r3]
 434:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 435:Generated_Source\PSoC5/CapSense.c ****         CyIntEnable(CapSense_IsrCH1_ISR_NUMBER);
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 10


 436:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 437:Generated_Source\PSoC5/CapSense.c ****     
 438:Generated_Source\PSoC5/CapSense.c ****     /* Set CapSense Enable state */
 439:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_CAPSENSE_EN;
  79              		.loc 1 439 0
  80 004c 054A     		ldr	r2, .L3+12
  81 004e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  82 0050 43F08003 		orr	r3, r3, #128
  83 0054 1370     		strb	r3, [r2]
  84 0056 10BD     		pop	{r4, pc}
  85              	.LVL6:
  86              	.L4:
  87              		.align	2
  88              	.L3:
  89 0058 9D640040 		.word	1073767581
  90 005c BB430040 		.word	1073759163
  91 0060 00E100E0 		.word	-536813312
  92 0064 7E640040 		.word	1073767550
  93              		.cfi_endproc
  94              	.LFE1:
  95              		.size	CapSense_Enable, .-CapSense_Enable
  96              		.section	.text.CapSense_FindNextSensor,"ax",%progbits
  97              		.align	2
  98              		.global	CapSense_FindNextSensor
  99              		.thumb
 100              		.thumb_func
 101              		.type	CapSense_FindNextSensor, %function
 102              	CapSense_FindNextSensor:
 103              	.LFB4:
 440:Generated_Source\PSoC5/CapSense.c **** }
 441:Generated_Source\PSoC5/CapSense.c **** 
 442:Generated_Source\PSoC5/CapSense.c **** 
 443:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 444:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Start
 445:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 446:Generated_Source\PSoC5/CapSense.c **** *
 447:Generated_Source\PSoC5/CapSense.c **** * Summary:
 448:Generated_Source\PSoC5/CapSense.c **** *  Initializes registers and starts the CSD method of CapSense component. Reset 
 449:Generated_Source\PSoC5/CapSense.c **** *  all sensors to an inactive state. Enables interrupts for sensors scanning.
 450:Generated_Source\PSoC5/CapSense.c **** *  When Auto Tuning (SmartSense) mode is selected the tuning procedure is 
 451:Generated_Source\PSoC5/CapSense.c **** *  applied for all sensors.
 452:Generated_Source\PSoC5/CapSense.c **** *
 453:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 454:Generated_Source\PSoC5/CapSense.c **** *  None
 455:Generated_Source\PSoC5/CapSense.c **** *
 456:Generated_Source\PSoC5/CapSense.c **** * Return:
 457:Generated_Source\PSoC5/CapSense.c **** *  None
 458:Generated_Source\PSoC5/CapSense.c **** *
 459:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 460:Generated_Source\PSoC5/CapSense.c **** *  CapSense_initVar - used to check initial configuration, modified on 
 461:Generated_Source\PSoC5/CapSense.c **** *  first function call.
 462:Generated_Source\PSoC5/CapSense.c **** *  CapSense_lowLevelTuningDone - used to notify the Tuner GUI that 
 463:Generated_Source\PSoC5/CapSense.c **** *  tuning of scanning parameters are done.
 464:Generated_Source\PSoC5/CapSense.c **** *
 465:Generated_Source\PSoC5/CapSense.c **** * Reentrant:
 466:Generated_Source\PSoC5/CapSense.c **** *  No
 467:Generated_Source\PSoC5/CapSense.c **** *
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 11


 468:Generated_Source\PSoC5/CapSense.c **** * Note:
 469:Generated_Source\PSoC5/CapSense.c **** *  All widgets are enabled by default except proximity widgets. Proximity widgets 
 470:Generated_Source\PSoC5/CapSense.c **** *  must be manually enabled as their long scan time is incompatible 
 471:Generated_Source\PSoC5/CapSense.c **** *  with the fast response required of other widget types. 
 472:Generated_Source\PSoC5/CapSense.c **** *
 473:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 474:Generated_Source\PSoC5/CapSense.c **** void CapSense_Start(void)  
 475:Generated_Source\PSoC5/CapSense.c **** {
 476:Generated_Source\PSoC5/CapSense.c ****     if (CapSense_initVar == 0u)
 477:Generated_Source\PSoC5/CapSense.c ****     {
 478:Generated_Source\PSoC5/CapSense.c ****         CapSense_Init();
 479:Generated_Source\PSoC5/CapSense.c ****         CapSense_initVar = 1u;
 480:Generated_Source\PSoC5/CapSense.c ****     }
 481:Generated_Source\PSoC5/CapSense.c ****     CapSense_Enable();
 482:Generated_Source\PSoC5/CapSense.c ****     
 483:Generated_Source\PSoC5/CapSense.c ****     /* AutoTunning start */
 484:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
 485:Generated_Source\PSoC5/CapSense.c ****         /* AutoTune by sensor or pair of sensor basis */
 486:Generated_Source\PSoC5/CapSense.c ****         CapSense_AutoTune();
 487:Generated_Source\PSoC5/CapSense.c ****         CapSense_lowLevelTuningDone = 1u;
 488:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
 489:Generated_Source\PSoC5/CapSense.c **** }
 490:Generated_Source\PSoC5/CapSense.c **** 
 491:Generated_Source\PSoC5/CapSense.c **** 
 492:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 493:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Stop
 494:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 495:Generated_Source\PSoC5/CapSense.c **** *
 496:Generated_Source\PSoC5/CapSense.c **** * Summary:
 497:Generated_Source\PSoC5/CapSense.c **** *  Stops the sensors scanner, disables internal interrupts, and resets all 
 498:Generated_Source\PSoC5/CapSense.c **** *  sensors to an inactive state. Disables Active mode power template bits for 
 499:Generated_Source\PSoC5/CapSense.c **** *  number of component used within CapSense.
 500:Generated_Source\PSoC5/CapSense.c **** *
 501:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 502:Generated_Source\PSoC5/CapSense.c **** *  None
 503:Generated_Source\PSoC5/CapSense.c **** *
 504:Generated_Source\PSoC5/CapSense.c **** * Return:
 505:Generated_Source\PSoC5/CapSense.c **** *  None
 506:Generated_Source\PSoC5/CapSense.c **** *
 507:Generated_Source\PSoC5/CapSense.c **** * Side Effects:
 508:Generated_Source\PSoC5/CapSense.c **** *  This function should be called after scans will be completed.
 509:Generated_Source\PSoC5/CapSense.c **** *
 510:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 511:Generated_Source\PSoC5/CapSense.c **** void CapSense_Stop(void) 
 512:Generated_Source\PSoC5/CapSense.c **** {
 513:Generated_Source\PSoC5/CapSense.c ****     /* Stop Capsensing */
 514:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG &= (uint8)(~CapSense_CTRL_START);
 515:Generated_Source\PSoC5/CapSense.c ****     
 516:Generated_Source\PSoC5/CapSense.c ****     /* Disable interrupt */
 517:Generated_Source\PSoC5/CapSense.c ****     CyIntDisable(CapSense_IsrCH0_ISR_NUMBER);
 518:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 519:Generated_Source\PSoC5/CapSense.c ****         CyIntDisable(CapSense_IsrCH1_ISR_NUMBER);
 520:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 521:Generated_Source\PSoC5/CapSense.c ****     
 522:Generated_Source\PSoC5/CapSense.c ****     /* Clear all sensors */
 523:Generated_Source\PSoC5/CapSense.c ****     CapSense_ClearSensors();
 524:Generated_Source\PSoC5/CapSense.c ****     
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 12


 525:Generated_Source\PSoC5/CapSense.c ****     /* Disable Prescaler */
 526:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 527:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing  for UDB */
 528:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)        
 529:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_ACT_PWRMGR_REG  &= ~CapSense_PRESCALER_ACT_PWR_EN;
 530:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_STBY_PWRMGR_REG &= ~CapSense_PRESCALER_STBY_PWR_EN;
 531:Generated_Source\PSoC5/CapSense.c ****         
 532:Generated_Source\PSoC5/CapSense.c ****     #else
 533:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 534:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 535:Generated_Source\PSoC5/CapSense.c ****     
 536:Generated_Source\PSoC5/CapSense.c ****     /* Disable ScanSpeed */
 537:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_AUX_CONTROL_REG &= (uint8)(~CapSense_SCANSPEED_CTRL_ENABLE);
 538:Generated_Source\PSoC5/CapSense.c ****     
 539:Generated_Source\PSoC5/CapSense.c ****     /* Disable Measure CH0 */
 540:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 541:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 542:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ACT_PWRMGR_REG  &= ~CapSense_PWM_CH0_ACT_PWR_EN;
 543:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_STBY_PWRMGR_REG &= ~CapSense_PWM_CH0_STBY_PWR_EN;
 544:Generated_Source\PSoC5/CapSense.c **** 
 545:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 546:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ACT_PWRMGR_REG  &= ~CapSense_RAW_CH0_ACT_PWR_EN;
 547:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_STBY_PWRMGR_REG &= ~CapSense_RAW_CH0_STBY_PWR_EN;
 548:Generated_Source\PSoC5/CapSense.c **** 
 549:Generated_Source\PSoC5/CapSense.c ****     #else
 550:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 551:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 552:Generated_Source\PSoC5/CapSense.c ****         
 553:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 554:Generated_Source\PSoC5/CapSense.c ****     
 555:Generated_Source\PSoC5/CapSense.c ****     /* Disable Measure CH1 */
 556:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 557:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 558:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 559:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ACT_PWRMGR_REG  &= ~CapSense_PWM_CH1_ACT_PWR_EN;
 560:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_STBY_PWRMGR_REG &= ~CapSense_PWM_CH1_STBY_PWR_EN;
 561:Generated_Source\PSoC5/CapSense.c ****     
 562:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 563:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ACT_PWRMGR_REG  &= ~CapSense_RAW_CH1_ACT_PWR_EN;
 564:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_STBY_PWRMGR_REG &= ~CapSense_RAW_CH1_STBY_PWR_EN;
 565:Generated_Source\PSoC5/CapSense.c ****            
 566:Generated_Source\PSoC5/CapSense.c ****         #else
 567:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 568:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 569:Generated_Source\PSoC5/CapSense.c ****         
 570:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 571:Generated_Source\PSoC5/CapSense.c ****     
 572:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 573:Generated_Source\PSoC5/CapSense.c ****     
 574:Generated_Source\PSoC5/CapSense.c ****     /* Disable the Clock */
 575:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CLOCK_SOURCE == CapSense_INTERNAL_CLOCK)
 576:Generated_Source\PSoC5/CapSense.c ****        CapSense_IntClock_Stop();
 577:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 578:Generated_Source\PSoC5/CapSense.c ****     
 579:Generated_Source\PSoC5/CapSense.c ****     /* Disable power from Cmp and Idac */
 580:Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Stop();
 581:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 13


 582:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Stop();
 583:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 584:Generated_Source\PSoC5/CapSense.c ****     
 585:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 586:Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Stop();
 587:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 588:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Stop();
 589:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 590:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */    
 591:Generated_Source\PSoC5/CapSense.c ****     
 592:Generated_Source\PSoC5/CapSense.c ****     /* Disable Vref if as VDAC */
 593:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 594:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Stop();
 595:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 596:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Stop();
 597:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE */
 598:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_VREF_OPTIONS */
 599:Generated_Source\PSoC5/CapSense.c **** 
 600:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
 601:Generated_Source\PSoC5/CapSense.c ****         /* The Idac turn off before */
 602:Generated_Source\PSoC5/CapSense.c ****     #else
 603:Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 604:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_CAPS_CFG0_REG &= (uint8)(~CapSense_CSBUF_ENABLE);
 605:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_ACT_PWR_EN);
 606:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_STBY_PWR_EN);
 607:Generated_Source\PSoC5/CapSense.c ****         
 608:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 609:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG &= (uint8)(~CapSense_CSBUF_ENABLE);
 610:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH1_ACT_PWR_EN);
 611:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH1_STBY_PWR_EN);
 612:Generated_Source\PSoC5/CapSense.c ****         #endif  /*(CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 613:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
 614:Generated_Source\PSoC5/CapSense.c ****     
 615:Generated_Source\PSoC5/CapSense.c ****     /* Set CapSense Disable state */
 616:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG &= (uint8)(~CapSense_CTRL_CAPSENSE_EN);
 617:Generated_Source\PSoC5/CapSense.c **** }
 618:Generated_Source\PSoC5/CapSense.c **** 
 619:Generated_Source\PSoC5/CapSense.c **** 
 620:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 621:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
 622:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_FindNextSensor
 623:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
 624:Generated_Source\PSoC5/CapSense.c ****     *
 625:Generated_Source\PSoC5/CapSense.c ****     * Summary:
 626:Generated_Source\PSoC5/CapSense.c ****     *  Finds next sensor to scan. 
 627:Generated_Source\PSoC5/CapSense.c ****     *
 628:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
 629:Generated_Source\PSoC5/CapSense.c ****     *  snsIndex:  Current index of sensor.
 630:Generated_Source\PSoC5/CapSense.c ****     *
 631:Generated_Source\PSoC5/CapSense.c ****     * Return:
 632:Generated_Source\PSoC5/CapSense.c ****     *  Returns the next sensor index to scan.
 633:Generated_Source\PSoC5/CapSense.c ****     *
 634:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
 635:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[ ] - used to store bit masks of enabled 
 636:Generated_Source\PSoC5/CapSense.c ****     *  sensors.
 637:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 0
 638:Generated_Source\PSoC5/CapSense.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 14


 639:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[1] contains the masked bits for sensors 
 640:Generated_Source\PSoC5/CapSense.c ****     *  8 through 15 (if needed), and so on.
 641:Generated_Source\PSoC5/CapSense.c ****     *    0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 642:Generated_Source\PSoC5/CapSense.c ****     *    1 - sensor scans by CapSense_ScanEnabledWidgets().
 643:Generated_Source\PSoC5/CapSense.c ****     *
 644:Generated_Source\PSoC5/CapSense.c ****     * Note: 
 645:Generated_Source\PSoC5/CapSense.c ****     *  This function has effect on current scanning scanning and should not
 646:Generated_Source\PSoC5/CapSense.c ****     *  be used outisde of component.
 647:Generated_Source\PSoC5/CapSense.c ****     *
 648:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
 649:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_FindNextSensor(uint8 snsIndex) CYREENTRANT
 650:Generated_Source\PSoC5/CapSense.c ****     {
 104              		.loc 1 650 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 109              	.LVL7:
 110              	.L7:
 651:Generated_Source\PSoC5/CapSense.c ****         uint8 pos;
 652:Generated_Source\PSoC5/CapSense.c ****         uint8 enMask;
 653:Generated_Source\PSoC5/CapSense.c ****         
 654:Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor enabled */
 655:Generated_Source\PSoC5/CapSense.c ****         do
 656:Generated_Source\PSoC5/CapSense.c ****         {
 657:Generated_Source\PSoC5/CapSense.c ****             /* Proceed with the next sensor */
 658:Generated_Source\PSoC5/CapSense.c ****             snsIndex++;
 111              		.loc 1 658 0
 112 0000 0130     		adds	r0, r0, #1
 113 0002 C0B2     		uxtb	r0, r0
 114              	.LVL8:
 659:Generated_Source\PSoC5/CapSense.c ****             if(snsIndex == CapSense_TOTAL_SENSOR_COUNT)
 115              		.loc 1 659 0
 116 0004 0128     		cmp	r0, #1
 117 0006 08D0     		beq	.L6
 660:Generated_Source\PSoC5/CapSense.c ****             {
 661:Generated_Source\PSoC5/CapSense.c ****                 break;
 662:Generated_Source\PSoC5/CapSense.c ****             }
 663:Generated_Source\PSoC5/CapSense.c ****             pos = (snsIndex >> 3u);
 118              		.loc 1 663 0
 119 0008 C208     		lsrs	r2, r0, #3
 664:Generated_Source\PSoC5/CapSense.c ****             enMask = 0x01u << (snsIndex & 0x07u);
 120              		.loc 1 664 0
 121 000a 00F00701 		and	r1, r0, #7
 122 000e 0123     		movs	r3, #1
 123 0010 8B40     		lsls	r3, r3, r1
 124              	.LVL9:
 665:Generated_Source\PSoC5/CapSense.c ****         }    
 666:Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[pos] & enMask) == 0u);
 125              		.loc 1 666 0
 126 0012 0249     		ldr	r1, .L8
 127 0014 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 128 0016 1342     		tst	r3, r2
 129 0018 F2D0     		beq	.L7
 130              	.LVL10:
 131              	.L6:
 667:Generated_Source\PSoC5/CapSense.c ****         
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 15


 668:Generated_Source\PSoC5/CapSense.c ****         return snsIndex;
 669:Generated_Source\PSoC5/CapSense.c ****     }
 132              		.loc 1 669 0
 133 001a 7047     		bx	lr
 134              	.L9:
 135              		.align	2
 136              	.L8:
 137 001c 00000000 		.word	.LANCHOR0
 138              		.cfi_endproc
 139              	.LFE4:
 140              		.size	CapSense_FindNextSensor, .-CapSense_FindNextSensor
 141              		.section	.text.CapSense_IsBusy,"ax",%progbits
 142              		.align	2
 143              		.global	CapSense_IsBusy
 144              		.thumb
 145              		.thumb_func
 146              		.type	CapSense_IsBusy, %function
 147              	CapSense_IsBusy:
 148              	.LFB8:
 670:Generated_Source\PSoC5/CapSense.c ****  #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */
 671:Generated_Source\PSoC5/CapSense.c ****  
 672:Generated_Source\PSoC5/CapSense.c ****  
 673:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 674:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
 675:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_FindNextPair
 676:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
 677:Generated_Source\PSoC5/CapSense.c ****     *
 678:Generated_Source\PSoC5/CapSense.c ****     * Summary:
 679:Generated_Source\PSoC5/CapSense.c ****     *  Finds next pair or sensor to scan. Sets condition bits to skip scanning.
 680:Generated_Source\PSoC5/CapSense.c ****     *  
 681:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
 682:Generated_Source\PSoC5/CapSense.c ****     *  snsIndex:  Current index pair of sensors.
 683:Generated_Source\PSoC5/CapSense.c ****     *
 684:Generated_Source\PSoC5/CapSense.c ****     * Return:
 685:Generated_Source\PSoC5/CapSense.c ****     *  Returns the next pair of sensors index to scan.
 686:Generated_Source\PSoC5/CapSense.c ****     *
 687:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
 688:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[ ] - used to store bit masks of enabled 
 689:Generated_Source\PSoC5/CapSense.c ****     *  sensors.
 690:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 0
 691:Generated_Source\PSoC5/CapSense.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 692:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[1] contains the masked bits for sensors 
 693:Generated_Source\PSoC5/CapSense.c ****     *  8 through 15 (if needed), and so on.
 694:Generated_Source\PSoC5/CapSense.c ****     *    0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 695:Generated_Source\PSoC5/CapSense.c ****     *    1 - sensor scans by CapSense_ScanEnabledWidgets().
 696:Generated_Source\PSoC5/CapSense.c ****     *
 697:Generated_Source\PSoC5/CapSense.c ****     * Note: 
 698:Generated_Source\PSoC5/CapSense.c ****     *  This function has effect on control signals set for scanning and should not
 699:Generated_Source\PSoC5/CapSense.c ****     *  be used outisde of component.
 700:Generated_Source\PSoC5/CapSense.c ****     *
 701:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
 702:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_FindNextPair(uint8 snsIndex) CYREENTRANT
 703:Generated_Source\PSoC5/CapSense.c ****     {
 704:Generated_Source\PSoC5/CapSense.c ****         uint8 posCh;
 705:Generated_Source\PSoC5/CapSense.c ****         uint8 enMaskCh;
 706:Generated_Source\PSoC5/CapSense.c ****         uint8 newRegValue;
 707:Generated_Source\PSoC5/CapSense.c ****         uint8 indexCh0 = snsIndex;
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 16


 708:Generated_Source\PSoC5/CapSense.c ****         uint8 indexCh1 = snsIndex + CapSense_TOTAL_SENSOR_COUNT__CH0;
 709:Generated_Source\PSoC5/CapSense.c ****         
 710:Generated_Source\PSoC5/CapSense.c ****         /* Find enabled sensor on channel 0 */
 711:Generated_Source\PSoC5/CapSense.c ****         do
 712:Generated_Source\PSoC5/CapSense.c ****         {
 713:Generated_Source\PSoC5/CapSense.c ****             /* Procced the scanning */
 714:Generated_Source\PSoC5/CapSense.c ****             indexCh0++;
 715:Generated_Source\PSoC5/CapSense.c ****             if (indexCh0 >= CapSense_TOTAL_SENSOR_COUNT__CH0)
 716:Generated_Source\PSoC5/CapSense.c ****             {
 717:Generated_Source\PSoC5/CapSense.c ****                 /* Lets hadle now all from CH1 */
 718:Generated_Source\PSoC5/CapSense.c ****                 indexCh0 = CapSense_END_OF_SCAN__CH0;
 719:Generated_Source\PSoC5/CapSense.c ****                 break;
 720:Generated_Source\PSoC5/CapSense.c ****             }
 721:Generated_Source\PSoC5/CapSense.c ****             
 722:Generated_Source\PSoC5/CapSense.c ****             posCh = (indexCh0 >> 3u);
 723:Generated_Source\PSoC5/CapSense.c ****             enMaskCh = 0x01u << (indexCh0 & 0x07u);
 724:Generated_Source\PSoC5/CapSense.c ****         }
 725:Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[posCh] & enMaskCh) == 0u);
 726:Generated_Source\PSoC5/CapSense.c ****         
 727:Generated_Source\PSoC5/CapSense.c ****         /* Find enabled sensor on channel 1 */
 728:Generated_Source\PSoC5/CapSense.c ****         do
 729:Generated_Source\PSoC5/CapSense.c ****         {
 730:Generated_Source\PSoC5/CapSense.c ****             /* Procced the scanning */
 731:Generated_Source\PSoC5/CapSense.c ****             indexCh1++;        
 732:Generated_Source\PSoC5/CapSense.c ****             if (indexCh1 >= CapSense_TOTAL_SENSOR_COUNT)
 733:Generated_Source\PSoC5/CapSense.c ****             {
 734:Generated_Source\PSoC5/CapSense.c ****                 /* Lets hadle now all from CH0 */
 735:Generated_Source\PSoC5/CapSense.c ****                 indexCh1 = CapSense_END_OF_SCAN__CH1;
 736:Generated_Source\PSoC5/CapSense.c ****                 break;
 737:Generated_Source\PSoC5/CapSense.c ****             }
 738:Generated_Source\PSoC5/CapSense.c ****             
 739:Generated_Source\PSoC5/CapSense.c ****             posCh = (indexCh1 >> 3u);
 740:Generated_Source\PSoC5/CapSense.c ****             enMaskCh = 0x01u << (indexCh1 & 0x07u);
 741:Generated_Source\PSoC5/CapSense.c ****         } 
 742:Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[posCh] & enMaskCh) == 0u);
 743:Generated_Source\PSoC5/CapSense.c ****         
 744:Generated_Source\PSoC5/CapSense.c ****         indexCh1 -= CapSense_TOTAL_SENSOR_COUNT__CH0;
 745:Generated_Source\PSoC5/CapSense.c ****         
 746:Generated_Source\PSoC5/CapSense.c ****         /* Find the pair to scan */
 747:Generated_Source\PSoC5/CapSense.c ****         if(indexCh0 == indexCh1)
 748:Generated_Source\PSoC5/CapSense.c ****         {
 749:Generated_Source\PSoC5/CapSense.c ****             /* Scans TWO Channels */
 750:Generated_Source\PSoC5/CapSense.c ****             snsIndex = indexCh0;
 751:Generated_Source\PSoC5/CapSense.c ****             
 752:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= (CapSense_CTRL_WINDOW_EN__CH0 | 
 753:Generated_Source\PSoC5/CapSense.c ****                                              CapSense_CTRL_WINDOW_EN__CH1);
 754:Generated_Source\PSoC5/CapSense.c ****         }
 755:Generated_Source\PSoC5/CapSense.c ****         else if(indexCh0 < indexCh1)
 756:Generated_Source\PSoC5/CapSense.c ****         {
 757:Generated_Source\PSoC5/CapSense.c ****            /* Scans Channel ONE only */
 758:Generated_Source\PSoC5/CapSense.c ****            snsIndex = indexCh0;
 759:Generated_Source\PSoC5/CapSense.c ****            
 760:Generated_Source\PSoC5/CapSense.c ****             newRegValue = CapSense_CONTROL_REG;
 761:Generated_Source\PSoC5/CapSense.c ****             newRegValue |= CapSense_CTRL_WINDOW_EN__CH0;
 762:Generated_Source\PSoC5/CapSense.c ****             newRegValue &= ~CapSense_CTRL_WINDOW_EN__CH1;
 763:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG = newRegValue;
 764:Generated_Source\PSoC5/CapSense.c ****         }
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 17


 765:Generated_Source\PSoC5/CapSense.c ****         else
 766:Generated_Source\PSoC5/CapSense.c ****         {
 767:Generated_Source\PSoC5/CapSense.c ****             /* Scans Channel TWO only */
 768:Generated_Source\PSoC5/CapSense.c ****             snsIndex = indexCh1;
 769:Generated_Source\PSoC5/CapSense.c ****             
 770:Generated_Source\PSoC5/CapSense.c ****             newRegValue = CapSense_CONTROL_REG;
 771:Generated_Source\PSoC5/CapSense.c ****             newRegValue |= CapSense_CTRL_WINDOW_EN__CH1;
 772:Generated_Source\PSoC5/CapSense.c ****             newRegValue &= ~CapSense_CTRL_WINDOW_EN__CH0;
 773:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG = newRegValue;
 774:Generated_Source\PSoC5/CapSense.c ****         }
 775:Generated_Source\PSoC5/CapSense.c ****         
 776:Generated_Source\PSoC5/CapSense.c ****         return (snsIndex);
 777:Generated_Source\PSoC5/CapSense.c ****     }
 778:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN */
 779:Generated_Source\PSoC5/CapSense.c **** 
 780:Generated_Source\PSoC5/CapSense.c **** 
 781:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 782:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_SetScanSlotSettings
 783:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 784:Generated_Source\PSoC5/CapSense.c **** *
 785:Generated_Source\PSoC5/CapSense.c **** * Summary:
 786:Generated_Source\PSoC5/CapSense.c **** *  Sets the scan settings of the selected scan slot (sensor or pair of sensors). 
 787:Generated_Source\PSoC5/CapSense.c **** *  The scan settings incorporate IDAC value (for IDAC configurations) for every 
 788:Generated_Source\PSoC5/CapSense.c **** *  sensor and resolution. The resolution is the same for all sensors within 
 789:Generated_Source\PSoC5/CapSense.c **** *  widget.
 790:Generated_Source\PSoC5/CapSense.c **** *
 791:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 792:Generated_Source\PSoC5/CapSense.c **** *  slot:  Scan slot number (sensor or pair of sensors).
 793:Generated_Source\PSoC5/CapSense.c **** *
 794:Generated_Source\PSoC5/CapSense.c **** * Return:
 795:Generated_Source\PSoC5/CapSense.c **** *  None
 796:Generated_Source\PSoC5/CapSense.c **** *
 797:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 798:Generated_Source\PSoC5/CapSense.c **** *  CapSense_idacSettings[] - used to store idac value for every sensor.
 799:Generated_Source\PSoC5/CapSense.c **** *  CapSense_widgetResolution[] - used to store scan resolution of every 
 800:Generated_Source\PSoC5/CapSense.c **** *  widget.
 801:Generated_Source\PSoC5/CapSense.c **** *
 802:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 803:Generated_Source\PSoC5/CapSense.c **** void CapSense_SetScanSlotSettings(uint8 slot) CYREENTRANT
 804:Generated_Source\PSoC5/CapSense.c **** {
 805:Generated_Source\PSoC5/CapSense.c ****     uint8 widget;
 806:Generated_Source\PSoC5/CapSense.c ****     
 807:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 808:Generated_Source\PSoC5/CapSense.c ****         /* Define widget sensor belongs to */
 809:Generated_Source\PSoC5/CapSense.c ****         widget = CapSense_widgetNumber[slot];
 810:Generated_Source\PSoC5/CapSense.c ****         
 811:Generated_Source\PSoC5/CapSense.c ****         /* Set Idac Value */
 812:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 813:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_idacSettings[slot]);
 814:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 815:Generated_Source\PSoC5/CapSense.c ****         
 816:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 817:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 818:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PWM_CH0_PERIOD_PTR,
 819:Generated_Source\PSoC5/CapSense.c ****                 ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_LO
 820:Generated_Source\PSoC5/CapSense.c ****         #else
 821:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH0_PERIOD_HI_REG = CapSense_widgetResolution[widget];
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 18


 822:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 823:Generated_Source\PSoC5/CapSense.c **** 
 824:Generated_Source\PSoC5/CapSense.c ****         #if ( (CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 825:Generated_Source\PSoC5/CapSense.c ****               (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) )
 826:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider[slot]);
 827:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
 828:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider);
 829:Generated_Source\PSoC5/CapSense.c ****         #endif /* ((CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 830:Generated_Source\PSoC5/CapSense.c ****                *   (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING))
 831:Generated_Source\PSoC5/CapSense.c ****                */
 832:Generated_Source\PSoC5/CapSense.c **** 
 833:Generated_Source\PSoC5/CapSense.c ****     #else
 834:Generated_Source\PSoC5/CapSense.c ****         if(slot < CapSense_TOTAL_SENSOR_COUNT__CH0)
 835:Generated_Source\PSoC5/CapSense.c ****         {
 836:Generated_Source\PSoC5/CapSense.c ****             /* Define widget sensor belongs to */
 837:Generated_Source\PSoC5/CapSense.c ****             widget = CapSense_widgetNumber[slot];
 838:Generated_Source\PSoC5/CapSense.c ****             
 839:Generated_Source\PSoC5/CapSense.c ****             /* Set Idac Value */
 840:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE)
 841:Generated_Source\PSoC5/CapSense.c ****                 CapSense_IdacCH0_SetValue(CapSense_idacSettings[slot]);
 842:Generated_Source\PSoC5/CapSense.c ****             #endif  /* CapSense_CURRENT_SOURCE */
 843:Generated_Source\PSoC5/CapSense.c ****             
 844:Generated_Source\PSoC5/CapSense.c ****             /* Set Pwm Resolution */
 845:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 846:Generated_Source\PSoC5/CapSense.c ****                 CY_SET_REG16(CapSense_PWM_CH0_PERIOD_PTR,
 847:Generated_Source\PSoC5/CapSense.c ****                   ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_
 848:Generated_Source\PSoC5/CapSense.c ****             #else
 849:Generated_Source\PSoC5/CapSense.c ****                 CapSense_PWM_CH0_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 850:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)*/ 
 851:Generated_Source\PSoC5/CapSense.c ****         }
 852:Generated_Source\PSoC5/CapSense.c ****         
 853:Generated_Source\PSoC5/CapSense.c ****         if(slot < CapSense_TOTAL_SENSOR_COUNT__CH1)
 854:Generated_Source\PSoC5/CapSense.c ****         {
 855:Generated_Source\PSoC5/CapSense.c ****             widget = CapSense_widgetNumber[slot+CapSense_TOTAL_SENSOR_COUNT__CH0];
 856:Generated_Source\PSoC5/CapSense.c ****         
 857:Generated_Source\PSoC5/CapSense.c ****             /* Set Idac Value */
 858:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE)
 859:Generated_Source\PSoC5/CapSense.c ****                 CapSense_IdacCH1_SetValue(CapSense_idacSettings[slot+
 860:Generated_Source\PSoC5/CapSense.c ****                                                                              CapSense_TOTAL_SENSOR_
 861:Generated_Source\PSoC5/CapSense.c ****             #endif  /* CapSense_CURRENT_SOURCE */
 862:Generated_Source\PSoC5/CapSense.c ****             
 863:Generated_Source\PSoC5/CapSense.c ****             /* Set Pwm Resolution */
 864:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 865:Generated_Source\PSoC5/CapSense.c ****                 CY_SET_REG16(CapSense_PWM_CH1_PERIOD_PTR,
 866:Generated_Source\PSoC5/CapSense.c ****                   ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_
 867:Generated_Source\PSoC5/CapSense.c ****             #else
 868:Generated_Source\PSoC5/CapSense.c ****                 CapSense_PWM_CH1_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 869:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)*/ 
 870:Generated_Source\PSoC5/CapSense.c ****         }
 871:Generated_Source\PSoC5/CapSense.c **** 
 872:Generated_Source\PSoC5/CapSense.c ****         #if ( (CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 873:Generated_Source\PSoC5/CapSense.c ****               (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) )
 874:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider[slot]);
 875:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
 876:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider);
 877:Generated_Source\PSoC5/CapSense.c ****         #endif /* ((CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 878:Generated_Source\PSoC5/CapSense.c ****                *   (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING))
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 19


 879:Generated_Source\PSoC5/CapSense.c ****                */
 880:Generated_Source\PSoC5/CapSense.c **** 
 881:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 882:Generated_Source\PSoC5/CapSense.c **** }
 883:Generated_Source\PSoC5/CapSense.c **** 
 884:Generated_Source\PSoC5/CapSense.c **** 
 885:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 886:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ScanSensor
 887:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 888:Generated_Source\PSoC5/CapSense.c **** *
 889:Generated_Source\PSoC5/CapSense.c **** * Summary:
 890:Generated_Source\PSoC5/CapSense.c **** *  Sets scan settings and starts scanning a sensor or pair of combined sensors
 891:Generated_Source\PSoC5/CapSense.c **** *  on each channel. If two channels are configured, two sensors may be scanned 
 892:Generated_Source\PSoC5/CapSense.c **** *  at the same time. After scanning is complete the isr copies the measured 
 893:Generated_Source\PSoC5/CapSense.c **** *  sensor raw data to the global array. Use of the isr ensures this function 
 894:Generated_Source\PSoC5/CapSense.c **** *  is non-blocking. Each sensor has a unique number within the sensor array. 
 895:Generated_Source\PSoC5/CapSense.c **** *  This number is assigned by the CapSense customizer in sequence.
 896:Generated_Source\PSoC5/CapSense.c **** *
 897:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 898:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
 899:Generated_Source\PSoC5/CapSense.c **** *
 900:Generated_Source\PSoC5/CapSense.c **** * Return:
 901:Generated_Source\PSoC5/CapSense.c **** *  None
 902:Generated_Source\PSoC5/CapSense.c **** *
 903:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 904:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
 905:Generated_Source\PSoC5/CapSense.c **** *  Sets busy status(scan in progress) and mode of scan as single scan.
 906:Generated_Source\PSoC5/CapSense.c **** *  For two channel design the additional bits are set to define if scan a 
 907:Generated_Source\PSoC5/CapSense.c **** *  pair of sensors or single one.
 908:Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorIndex - used to store sensor scanning sensor number.
 909:Generated_Source\PSoC5/CapSense.c **** *  Sets to provided sensor argument.
 910:Generated_Source\PSoC5/CapSense.c **** *
 911:Generated_Source\PSoC5/CapSense.c **** * Reentrant:
 912:Generated_Source\PSoC5/CapSense.c **** *  No
 913:Generated_Source\PSoC5/CapSense.c **** *
 914:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 915:Generated_Source\PSoC5/CapSense.c **** void CapSense_ScanSensor(uint8 sensor)  
 916:Generated_Source\PSoC5/CapSense.c **** {
 917:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 918:Generated_Source\PSoC5/CapSense.c ****     CapSense_csv = 0u;
 919:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = sensor;
 920:Generated_Source\PSoC5/CapSense.c ****     
 921:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 922:Generated_Source\PSoC5/CapSense.c ****         /* Start of sensor scan */
 923:Generated_Source\PSoC5/CapSense.c ****         CapSense_csv = (CapSense_SW_STS_BUSY | CapSense_SW_CTRL_SINGLE_SCAN);
 924:Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan(sensor);
 925:Generated_Source\PSoC5/CapSense.c ****         
 926:Generated_Source\PSoC5/CapSense.c ****     #else
 927:Generated_Source\PSoC5/CapSense.c ****         /* CH0: check end of scan conditions */
 928:Generated_Source\PSoC5/CapSense.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH0)
 929:Generated_Source\PSoC5/CapSense.c ****         {
 930:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH0;
 931:Generated_Source\PSoC5/CapSense.c ****         }
 932:Generated_Source\PSoC5/CapSense.c ****         else
 933:Generated_Source\PSoC5/CapSense.c ****         {
 934:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~CapSense_CTRL_WINDOW_EN__CH0;
 935:Generated_Source\PSoC5/CapSense.c ****         }
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 20


 936:Generated_Source\PSoC5/CapSense.c ****         
 937:Generated_Source\PSoC5/CapSense.c ****         /* CH1: check end of scan conditions */
 938:Generated_Source\PSoC5/CapSense.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH1)
 939:Generated_Source\PSoC5/CapSense.c ****         {
 940:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH1;
 941:Generated_Source\PSoC5/CapSense.c ****         }
 942:Generated_Source\PSoC5/CapSense.c ****         else
 943:Generated_Source\PSoC5/CapSense.c ****         {
 944:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~CapSense_CTRL_WINDOW_EN__CH1;
 945:Generated_Source\PSoC5/CapSense.c ****         }
 946:Generated_Source\PSoC5/CapSense.c ****         
 947:Generated_Source\PSoC5/CapSense.c ****         /* Start sensor scan */
 948:Generated_Source\PSoC5/CapSense.c ****         if( ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) != 0u) || 
 949:Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) != 0u) )
 950:Generated_Source\PSoC5/CapSense.c ****         {
 951:Generated_Source\PSoC5/CapSense.c ****         
 952:Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= (CapSense_SW_STS_BUSY | CapSense_SW_CTRL_SINGLE_SCAN);
 953:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(sensor);
 954:Generated_Source\PSoC5/CapSense.c ****         }
 955:Generated_Source\PSoC5/CapSense.c ****         
 956:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 957:Generated_Source\PSoC5/CapSense.c **** }
 958:Generated_Source\PSoC5/CapSense.c **** 
 959:Generated_Source\PSoC5/CapSense.c **** 
 960:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 961:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ScanEnableWidgets
 962:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 963:Generated_Source\PSoC5/CapSense.c **** *
 964:Generated_Source\PSoC5/CapSense.c **** * Summary:
 965:Generated_Source\PSoC5/CapSense.c **** *  Scans all of the enabled widgets. Starts scanning a sensor or pair of sensors 
 966:Generated_Source\PSoC5/CapSense.c **** *  within enabled widget. The isr proceeding scanning next sensor or pair till 
 967:Generated_Source\PSoC5/CapSense.c **** *  all enabled widgets will be scanned. Use of the isr ensures this function is 
 968:Generated_Source\PSoC5/CapSense.c **** *  non-blocking. All widgets are enabled by default except proximity widgets. 
 969:Generated_Source\PSoC5/CapSense.c **** *  Proximity widgets must be manually enabled as their long scan time is 
 970:Generated_Source\PSoC5/CapSense.c **** *  incompatible with fast response desired of other widget types.
 971:Generated_Source\PSoC5/CapSense.c **** *
 972:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 973:Generated_Source\PSoC5/CapSense.c **** *  None
 974:Generated_Source\PSoC5/CapSense.c **** *
 975:Generated_Source\PSoC5/CapSense.c **** * Return:
 976:Generated_Source\PSoC5/CapSense.c **** *  None
 977:Generated_Source\PSoC5/CapSense.c **** *
 978:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 979:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
 980:Generated_Source\PSoC5/CapSense.c **** *  Sets busy status(scan in progress) and clears single scan mode.
 981:Generated_Source\PSoC5/CapSense.c **** *  For two channel design the additional bits are set to define if scan a 
 982:Generated_Source\PSoC5/CapSense.c **** *  pair of sensors or single one. 
 983:Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorIndex - used to store sensor scanning sensor number.
 984:Generated_Source\PSoC5/CapSense.c **** *  Sets to 0xFF and provided to function CapSense_FindNextSensor or
 985:Generated_Source\PSoC5/CapSense.c **** *  CapSense_FindNextPair, these functions starts with sensor index
 986:Generated_Source\PSoC5/CapSense.c **** *  increment and overflow of uint8 gives desired index 0.
 987:Generated_Source\PSoC5/CapSense.c **** *
 988:Generated_Source\PSoC5/CapSense.c **** * Reentrant:
 989:Generated_Source\PSoC5/CapSense.c **** *  No
 990:Generated_Source\PSoC5/CapSense.c **** *
 991:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 992:Generated_Source\PSoC5/CapSense.c **** void CapSense_ScanEnabledWidgets(void) 
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 21


 993:Generated_Source\PSoC5/CapSense.c **** {
 994:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 995:Generated_Source\PSoC5/CapSense.c ****     CapSense_csv = 0u;
 996:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = 0xFFu;
 997:Generated_Source\PSoC5/CapSense.c ****     
 998:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 999:Generated_Source\PSoC5/CapSense.c ****         /* Find next sensor */
1000:Generated_Source\PSoC5/CapSense.c ****         CapSense_sensorIndex = CapSense_FindNextSensor(CapSense_sensorIndex);
1001:Generated_Source\PSoC5/CapSense.c **** 
1002:Generated_Source\PSoC5/CapSense.c ****         /* Check end of scan condition */
1003:Generated_Source\PSoC5/CapSense.c ****         if(CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT)
1004:Generated_Source\PSoC5/CapSense.c ****         {
1005:Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= CapSense_SW_STS_BUSY;
1006:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
1007:Generated_Source\PSoC5/CapSense.c ****         }
1008:Generated_Source\PSoC5/CapSense.c ****         
1009:Generated_Source\PSoC5/CapSense.c ****     #else
1010:Generated_Source\PSoC5/CapSense.c ****         /* Find next sensor and set proper control register */
1011:Generated_Source\PSoC5/CapSense.c ****         CapSense_sensorIndex = CapSense_FindNextPair(CapSense_sensorIndex);
1012:Generated_Source\PSoC5/CapSense.c ****         
1013:Generated_Source\PSoC5/CapSense.c ****         /* Start sensor scan */
1014:Generated_Source\PSoC5/CapSense.c ****         if((CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT__CH0) || 
1015:Generated_Source\PSoC5/CapSense.c ****            (CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT__CH1))
1016:Generated_Source\PSoC5/CapSense.c ****         {
1017:Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= CapSense_SW_STS_BUSY;
1018:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
1019:Generated_Source\PSoC5/CapSense.c ****         }
1020:Generated_Source\PSoC5/CapSense.c ****         
1021:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
1022:Generated_Source\PSoC5/CapSense.c **** }
1023:Generated_Source\PSoC5/CapSense.c **** 
1024:Generated_Source\PSoC5/CapSense.c **** 
1025:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1026:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_IsBusy
1027:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1028:Generated_Source\PSoC5/CapSense.c **** *
1029:Generated_Source\PSoC5/CapSense.c **** * Summary:
1030:Generated_Source\PSoC5/CapSense.c **** *  Returns the state of CapSense component. The 1 means that scanning in 
1031:Generated_Source\PSoC5/CapSense.c **** *  progress and 0 means that scanning is complete.
1032:Generated_Source\PSoC5/CapSense.c **** *
1033:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1034:Generated_Source\PSoC5/CapSense.c **** *  None
1035:Generated_Source\PSoC5/CapSense.c **** *
1036:Generated_Source\PSoC5/CapSense.c **** * Return:
1037:Generated_Source\PSoC5/CapSense.c **** *  Returns the state of scanning. 1 - scanning in progress, 0 - scanning 
1038:Generated_Source\PSoC5/CapSense.c **** *  completed.
1039:Generated_Source\PSoC5/CapSense.c **** *
1040:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1041:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
1042:Generated_Source\PSoC5/CapSense.c **** *  Checks the busy status.
1043:Generated_Source\PSoC5/CapSense.c **** *
1044:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1045:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_IsBusy(void) 
1046:Generated_Source\PSoC5/CapSense.c **** {
 149              		.loc 1 1046 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 22


 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
1047:Generated_Source\PSoC5/CapSense.c ****     return ((0u != (CapSense_csv & CapSense_SW_STS_BUSY)) ? 1u : 0u);
 154              		.loc 1 1047 0
 155 0000 024B     		ldr	r3, .L11
 156 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1048:Generated_Source\PSoC5/CapSense.c **** }
 157              		.loc 1 1048 0
 158 0004 00F00100 		and	r0, r0, #1
 159 0008 7047     		bx	lr
 160              	.L12:
 161 000a 00BF     		.align	2
 162              	.L11:
 163 000c 00000000 		.word	CapSense_csv
 164              		.cfi_endproc
 165              	.LFE8:
 166              		.size	CapSense_IsBusy, .-CapSense_IsBusy
 167              		.section	.text.CapSense_ReadSensorRaw,"ax",%progbits
 168              		.align	2
 169              		.global	CapSense_ReadSensorRaw
 170              		.thumb
 171              		.thumb_func
 172              		.type	CapSense_ReadSensorRaw, %function
 173              	CapSense_ReadSensorRaw:
 174              	.LFB9:
1049:Generated_Source\PSoC5/CapSense.c **** 
1050:Generated_Source\PSoC5/CapSense.c **** 
1051:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1052:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ReadSensorRaw
1053:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1054:Generated_Source\PSoC5/CapSense.c **** *
1055:Generated_Source\PSoC5/CapSense.c **** * Summary:
1056:Generated_Source\PSoC5/CapSense.c **** *  Returns scan sensor raw data from the CapSense_sensorRaw[] array. 
1057:Generated_Source\PSoC5/CapSense.c **** *  Each scan sensor has a unique number within the sensor array. This number 
1058:Generated_Source\PSoC5/CapSense.c **** *  is assigned by the CapSense customizer in sequence.
1059:Generated_Source\PSoC5/CapSense.c **** *
1060:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1061:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1062:Generated_Source\PSoC5/CapSense.c **** *
1063:Generated_Source\PSoC5/CapSense.c **** * Return:
1064:Generated_Source\PSoC5/CapSense.c **** *  Returns current raw data value for defined sensor number.
1065:Generated_Source\PSoC5/CapSense.c **** *
1066:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1067:Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorRaw[] - used to store sensors raw data.
1068:Generated_Source\PSoC5/CapSense.c **** *
1069:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1070:Generated_Source\PSoC5/CapSense.c **** uint16 CapSense_ReadSensorRaw(uint8 sensor) 
1071:Generated_Source\PSoC5/CapSense.c **** {
 175              		.loc 1 1071 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		@ link register save eliminated.
 180              	.LVL11:
1072:Generated_Source\PSoC5/CapSense.c ****     return (CapSense_sensorRaw[sensor]);
1073:Generated_Source\PSoC5/CapSense.c **** }
 181              		.loc 1 1073 0
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 23


 182 0000 014B     		ldr	r3, .L14
 183 0002 33F81000 		ldrh	r0, [r3, r0, lsl #1]
 184              	.LVL12:
 185 0006 7047     		bx	lr
 186              	.L15:
 187              		.align	2
 188              	.L14:
 189 0008 00000000 		.word	CapSense_sensorRaw
 190              		.cfi_endproc
 191              	.LFE9:
 192              		.size	CapSense_ReadSensorRaw, .-CapSense_ReadSensorRaw
 193              		.section	.text.CapSense_EnableSensor,"ax",%progbits
 194              		.align	2
 195              		.global	CapSense_EnableSensor
 196              		.thumb
 197              		.thumb_func
 198              		.type	CapSense_EnableSensor, %function
 199              	CapSense_EnableSensor:
 200              	.LFB11:
1074:Generated_Source\PSoC5/CapSense.c **** 
1075:Generated_Source\PSoC5/CapSense.c **** 
1076:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1077:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ClearSensors
1078:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1079:Generated_Source\PSoC5/CapSense.c **** *
1080:Generated_Source\PSoC5/CapSense.c **** * Summary:
1081:Generated_Source\PSoC5/CapSense.c **** *  Resets all sensors to the non-sampling state by sequentially disconnecting
1082:Generated_Source\PSoC5/CapSense.c **** *  all sensors from Analog MUX Bus and putting them to inactive state.
1083:Generated_Source\PSoC5/CapSense.c **** *
1084:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1085:Generated_Source\PSoC5/CapSense.c **** *  None
1086:Generated_Source\PSoC5/CapSense.c **** *
1087:Generated_Source\PSoC5/CapSense.c **** * Return:
1088:Generated_Source\PSoC5/CapSense.c **** *  None
1089:Generated_Source\PSoC5/CapSense.c **** *
1090:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1091:Generated_Source\PSoC5/CapSense.c **** void CapSense_ClearSensors(void) 
1092:Generated_Source\PSoC5/CapSense.c **** {
1093:Generated_Source\PSoC5/CapSense.c ****     uint8 i;
1094:Generated_Source\PSoC5/CapSense.c ****    
1095:Generated_Source\PSoC5/CapSense.c ****     for (i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
1096:Generated_Source\PSoC5/CapSense.c ****     {
1097:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(i);
1098:Generated_Source\PSoC5/CapSense.c ****     }
1099:Generated_Source\PSoC5/CapSense.c **** }
1100:Generated_Source\PSoC5/CapSense.c **** 
1101:Generated_Source\PSoC5/CapSense.c **** 
1102:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_IS_COMPLEX_SCANSLOTS)
1103:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1104:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_EnableScanSlot
1105:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1106:Generated_Source\PSoC5/CapSense.c ****     *
1107:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1108:Generated_Source\PSoC5/CapSense.c ****     *  Configures the selected slot to measure during the next measurement 
1109:Generated_Source\PSoC5/CapSense.c ****     *  cycle. The corresponding pin/pins are set to Analog High-Z mode and 
1110:Generated_Source\PSoC5/CapSense.c ****     *  connected to the Analog Mux Bus. This also enables the comparator function.
1111:Generated_Source\PSoC5/CapSense.c ****     *
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 24


1112:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1113:Generated_Source\PSoC5/CapSense.c ****     *  slot:  Slot number.
1114:Generated_Source\PSoC5/CapSense.c ****     *
1115:Generated_Source\PSoC5/CapSense.c ****     * Return:
1116:Generated_Source\PSoC5/CapSense.c ****     *  None
1117:Generated_Source\PSoC5/CapSense.c ****     *
1118:Generated_Source\PSoC5/CapSense.c ****     * Global Constants:
1119:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_portTable[]  - used to store the port number that pin 
1120:Generated_Source\PSoC5/CapSense.c ****     *  belongs to for every sensor.
1121:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_maskTable[]  - used to store the pin within the port for 
1122:Generated_Source\PSoC5/CapSense.c ****     *  every sensor.
1123:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_indexTable[] - used to store indexes of complex sensors.
1124:Generated_Source\PSoC5/CapSense.c ****     *  The offset and position in this array are stored in port and mask table for 
1125:Generated_Source\PSoC5/CapSense.c ****     *  complex sensors.
1126:Generated_Source\PSoC5/CapSense.c ****     *  The bit 7 (msb) is used to define the sensor type: single or complex.
1127:Generated_Source\PSoC5/CapSense.c ****     *
1128:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1129:Generated_Source\PSoC5/CapSense.c ****     void CapSense_EnableScanSlot(uint8 slot) CYREENTRANT
1130:Generated_Source\PSoC5/CapSense.c ****     {
1131:Generated_Source\PSoC5/CapSense.c ****         uint8 j;
1132:Generated_Source\PSoC5/CapSense.c ****         uint8 snsNumber;
1133:Generated_Source\PSoC5/CapSense.c ****         const uint8 CYCODE *index;
1134:Generated_Source\PSoC5/CapSense.c ****         /* Read the sensor type: single or complex */
1135:Generated_Source\PSoC5/CapSense.c ****         uint8 snsType = CapSense_portTable[slot];
1136:Generated_Source\PSoC5/CapSense.c ****         
1137:Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor is complex */
1138:Generated_Source\PSoC5/CapSense.c ****         if ((snsType & CapSense_COMPLEX_SS_FLAG) == 0u)
1139:Generated_Source\PSoC5/CapSense.c ****         {
1140:Generated_Source\PSoC5/CapSense.c ****             /* Enable sensor (signle) */
1141:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableSensor(slot);
1142:Generated_Source\PSoC5/CapSense.c ****         }
1143:Generated_Source\PSoC5/CapSense.c ****         else
1144:Generated_Source\PSoC5/CapSense.c ****         {
1145:Generated_Source\PSoC5/CapSense.c ****             /* Enable complex sensor */
1146:Generated_Source\PSoC5/CapSense.c ****             snsType &= ~CapSense_COMPLEX_SS_FLAG;
1147:Generated_Source\PSoC5/CapSense.c ****             index = &CapSense_indexTable[snsType];
1148:Generated_Source\PSoC5/CapSense.c ****             snsNumber = CapSense_maskTable[slot];
1149:Generated_Source\PSoC5/CapSense.c ****                         
1150:Generated_Source\PSoC5/CapSense.c ****             for (j=0u; j < snsNumber; j++)
1151:Generated_Source\PSoC5/CapSense.c ****             {
1152:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableSensor(index[j]);
1153:Generated_Source\PSoC5/CapSense.c ****             }
1154:Generated_Source\PSoC5/CapSense.c ****         } 
1155:Generated_Source\PSoC5/CapSense.c ****     }
1156:Generated_Source\PSoC5/CapSense.c ****     
1157:Generated_Source\PSoC5/CapSense.c ****     
1158:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1159:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_DisableScanSlot
1160:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1161:Generated_Source\PSoC5/CapSense.c ****     *
1162:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1163:Generated_Source\PSoC5/CapSense.c ****     *  Disables the selected slot. The corresponding pin/pis is/are disconnected 
1164:Generated_Source\PSoC5/CapSense.c ****     *  from the Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1165:Generated_Source\PSoC5/CapSense.c ****     *
1166:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1167:Generated_Source\PSoC5/CapSense.c ****     *  slot:  Slot number.
1168:Generated_Source\PSoC5/CapSense.c ****     *
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 25


1169:Generated_Source\PSoC5/CapSense.c ****     * Return:
1170:Generated_Source\PSoC5/CapSense.c ****     *  None
1171:Generated_Source\PSoC5/CapSense.c ****     *
1172:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1173:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_portTable[]  - used to store the port number that pin 
1174:Generated_Source\PSoC5/CapSense.c ****     *  belongs to for every sensor.
1175:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_maskTable[]  - used to store the pin within the port for 
1176:Generated_Source\PSoC5/CapSense.c ****     *  every sensor.
1177:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_indexTable[] - used to store indexes of complex sensors.
1178:Generated_Source\PSoC5/CapSense.c ****     *  The offset and position in this array are stored in port and mask table for 
1179:Generated_Source\PSoC5/CapSense.c ****     *  complex sensors.
1180:Generated_Source\PSoC5/CapSense.c ****     *  The 7bit(msb) is used to define the sensor type: single or complex.
1181:Generated_Source\PSoC5/CapSense.c ****     *
1182:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1183:Generated_Source\PSoC5/CapSense.c ****     void CapSense_DisableScanSlot(uint8 slot) CYREENTRANT
1184:Generated_Source\PSoC5/CapSense.c ****     {
1185:Generated_Source\PSoC5/CapSense.c ****         uint8 j;
1186:Generated_Source\PSoC5/CapSense.c ****         uint8 snsNumber;
1187:Generated_Source\PSoC5/CapSense.c ****         const uint8 CYCODE *index;
1188:Generated_Source\PSoC5/CapSense.c ****         /* Read the sensor type: single or complex */
1189:Generated_Source\PSoC5/CapSense.c ****         uint8 snsType = CapSense_portTable[slot];
1190:Generated_Source\PSoC5/CapSense.c ****         
1191:Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor is complex */
1192:Generated_Source\PSoC5/CapSense.c ****         if ((snsType & CapSense_COMPLEX_SS_FLAG) == 0u)
1193:Generated_Source\PSoC5/CapSense.c ****         {
1194:Generated_Source\PSoC5/CapSense.c ****             /* Disable sensor (signle) */
1195:Generated_Source\PSoC5/CapSense.c ****             CapSense_DisableSensor(slot);
1196:Generated_Source\PSoC5/CapSense.c ****         }
1197:Generated_Source\PSoC5/CapSense.c ****         else
1198:Generated_Source\PSoC5/CapSense.c ****         {
1199:Generated_Source\PSoC5/CapSense.c ****             /* Disable complex sensor */
1200:Generated_Source\PSoC5/CapSense.c ****             snsType &= ~CapSense_COMPLEX_SS_FLAG;
1201:Generated_Source\PSoC5/CapSense.c ****             index = &CapSense_indexTable[snsType];
1202:Generated_Source\PSoC5/CapSense.c ****             snsNumber = CapSense_maskTable[slot];
1203:Generated_Source\PSoC5/CapSense.c ****                         
1204:Generated_Source\PSoC5/CapSense.c ****             for (j=0u; j < snsNumber; j++)
1205:Generated_Source\PSoC5/CapSense.c ****             {
1206:Generated_Source\PSoC5/CapSense.c ****                 CapSense_DisableSensor(index[j]);
1207:Generated_Source\PSoC5/CapSense.c ****             }
1208:Generated_Source\PSoC5/CapSense.c ****         } 
1209:Generated_Source\PSoC5/CapSense.c ****     }
1210:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1211:Generated_Source\PSoC5/CapSense.c **** 
1212:Generated_Source\PSoC5/CapSense.c **** 
1213:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1214:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_EnableSensor
1215:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1216:Generated_Source\PSoC5/CapSense.c **** *
1217:Generated_Source\PSoC5/CapSense.c **** * Summary:
1218:Generated_Source\PSoC5/CapSense.c **** *  Configures the selected sensor to measure during the next measurement cycle.
1219:Generated_Source\PSoC5/CapSense.c **** *  The corresponding pins are set to Analog High-Z mode and connected to the
1220:Generated_Source\PSoC5/CapSense.c **** *  Analog Mux Bus. This also enables the comparator function.
1221:Generated_Source\PSoC5/CapSense.c **** *
1222:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1223:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1224:Generated_Source\PSoC5/CapSense.c **** *
1225:Generated_Source\PSoC5/CapSense.c **** * Return:
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 26


1226:Generated_Source\PSoC5/CapSense.c **** *  None
1227:Generated_Source\PSoC5/CapSense.c **** *
1228:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1229:Generated_Source\PSoC5/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin 
1230:Generated_Source\PSoC5/CapSense.c **** *  belongs to for every sensor.
1231:Generated_Source\PSoC5/CapSense.c **** *  CapSense_maskTable[] - used to store the pin within the port for 
1232:Generated_Source\PSoC5/CapSense.c **** *  every sensor.
1233:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csTable[]   - used to store the pointers to CAPS_SEL 
1234:Generated_Source\PSoC5/CapSense.c **** *  registers for every port.
1235:Generated_Source\PSoC5/CapSense.c **** *  CapSense_pcTable[]   - used to store the pointers to PC pin 
1236:Generated_Source\PSoC5/CapSense.c **** *  register for every sensor.
1237:Generated_Source\PSoC5/CapSense.c **** *  CapSense_amuxIndex[] - used to store corrected AMUX index when 
1238:Generated_Source\PSoC5/CapSense.c **** *  complex sensors are defeined.
1239:Generated_Source\PSoC5/CapSense.c **** *
1240:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1241:Generated_Source\PSoC5/CapSense.c **** void CapSense_EnableSensor(uint8 sensor) CYREENTRANT
1242:Generated_Source\PSoC5/CapSense.c **** {
 201              		.loc 1 1242 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              	.LVL13:
 206 0000 08B5     		push	{r3, lr}
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 3, -8
 209              		.cfi_offset 14, -4
 210              	.LVL14:
1243:Generated_Source\PSoC5/CapSense.c ****     uint8 port = CapSense_portTable[sensor];
1244:Generated_Source\PSoC5/CapSense.c ****     uint8 mask = CapSense_maskTable[sensor];
1245:Generated_Source\PSoC5/CapSense.c ****     
1246:Generated_Source\PSoC5/CapSense.c ****     #if ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1247:Generated_Source\PSoC5/CapSense.c ****          (CapSense_IS_COMPLEX_SCANSLOTS))
1248:Generated_Source\PSoC5/CapSense.c ****         uint8 amuxCh = CapSense_amuxIndex[sensor];
1249:Generated_Source\PSoC5/CapSense.c ****     #endif  /* ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1250:Generated_Source\PSoC5/CapSense.c ****             *   (CapSense_IS_COMPLEX_SCANSLOTS))
1251:Generated_Source\PSoC5/CapSense.c ****             */
1252:Generated_Source\PSoC5/CapSense.c ****     
1253:Generated_Source\PSoC5/CapSense.c ****     /* Make sensor High-Z */
1254:Generated_Source\PSoC5/CapSense.c ****     *CapSense_pcTable[sensor] = CapSense_PRT_PC_HIGHZ;
 211              		.loc 1 1254 0
 212 0002 0922     		movs	r2, #9
 213 0004 0023     		movs	r3, #0
 214 0006 1A70     		strb	r2, [r3]
1255:Generated_Source\PSoC5/CapSense.c ****     
1256:Generated_Source\PSoC5/CapSense.c ****     /* Connect to DSI output */
1257:Generated_Source\PSoC5/CapSense.c **** 	if(port == 15u)
1258:Generated_Source\PSoC5/CapSense.c **** 	{
1259:Generated_Source\PSoC5/CapSense.c **** 		port = 7u;
1260:Generated_Source\PSoC5/CapSense.c **** 	}
1261:Generated_Source\PSoC5/CapSense.c ****     *CapSense_csTable[port] |= mask;
1262:Generated_Source\PSoC5/CapSense.c ****     
1263:Generated_Source\PSoC5/CapSense.c ****     /* Connect to AMUX */
1264:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1265:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1266:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_amuxIndex[sensor]);
1267:Generated_Source\PSoC5/CapSense.c ****         #else
1268:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(sensor);
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 27


 215              		.loc 1 1268 0
 216 0008 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 217              	.LVL15:
 218 000c 08BD     		pop	{r3, pc}
 219              		.cfi_endproc
 220              	.LFE11:
 221              		.size	CapSense_EnableSensor, .-CapSense_EnableSensor
 222 000e 00BF     		.section	.text.CapSense_DisableSensor,"ax",%progbits
 223              		.align	2
 224              		.global	CapSense_DisableSensor
 225              		.thumb
 226              		.thumb_func
 227              		.type	CapSense_DisableSensor, %function
 228              	CapSense_DisableSensor:
 229              	.LFB12:
1269:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1270:Generated_Source\PSoC5/CapSense.c ****                 
1271:Generated_Source\PSoC5/CapSense.c ****     #else
1272:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1273:Generated_Source\PSoC5/CapSense.c ****             if ((amuxCh & CapSense_CHANNEL1_FLAG) == 0u)
1274:Generated_Source\PSoC5/CapSense.c ****             {
1275:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(amuxCh);
1276:Generated_Source\PSoC5/CapSense.c ****             } 
1277:Generated_Source\PSoC5/CapSense.c ****             else
1278:Generated_Source\PSoC5/CapSense.c ****             {
1279:Generated_Source\PSoC5/CapSense.c ****                 amuxCh &= ~ CapSense_CHANNEL1_FLAG;
1280:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(amuxCh);
1281:Generated_Source\PSoC5/CapSense.c ****             }
1282:Generated_Source\PSoC5/CapSense.c ****             
1283:Generated_Source\PSoC5/CapSense.c ****         #else
1284:Generated_Source\PSoC5/CapSense.c ****             if (sensor < CapSense_TOTAL_SENSOR_COUNT__CH0) 
1285:Generated_Source\PSoC5/CapSense.c ****             {
1286:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(sensor);
1287:Generated_Source\PSoC5/CapSense.c ****             } 
1288:Generated_Source\PSoC5/CapSense.c ****             else
1289:Generated_Source\PSoC5/CapSense.c ****             {
1290:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(sensor - CapSense_TOTAL_SENSOR_COUNT__CH0);
1291:Generated_Source\PSoC5/CapSense.c ****             }
1292:Generated_Source\PSoC5/CapSense.c ****             
1293:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1294:Generated_Source\PSoC5/CapSense.c ****         
1295:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */
1296:Generated_Source\PSoC5/CapSense.c **** }
1297:Generated_Source\PSoC5/CapSense.c **** 
1298:Generated_Source\PSoC5/CapSense.c **** 
1299:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1300:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_DisableSensor
1301:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1302:Generated_Source\PSoC5/CapSense.c **** *
1303:Generated_Source\PSoC5/CapSense.c **** * Summary:
1304:Generated_Source\PSoC5/CapSense.c **** *  Disables the selected sensor. The corresponding pin is disconnected from the
1305:Generated_Source\PSoC5/CapSense.c **** *  Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1306:Generated_Source\PSoC5/CapSense.c **** *
1307:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1308:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number
1309:Generated_Source\PSoC5/CapSense.c **** *
1310:Generated_Source\PSoC5/CapSense.c **** * Return:
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 28


1311:Generated_Source\PSoC5/CapSense.c **** *  None
1312:Generated_Source\PSoC5/CapSense.c **** *
1313:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1314:Generated_Source\PSoC5/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin 
1315:Generated_Source\PSoC5/CapSense.c **** *  belongs to for every sensor.
1316:Generated_Source\PSoC5/CapSense.c **** *  CapSense_maskTable[] - used to store the pin within the port for 
1317:Generated_Source\PSoC5/CapSense.c **** *  every sensor.
1318:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csTable[]   - used to store the pointers to CAPS_SEL 
1319:Generated_Source\PSoC5/CapSense.c **** *  registers for every port.
1320:Generated_Source\PSoC5/CapSense.c **** *  CapSense_pcTable[]   - used to store the pointers to PC pin 
1321:Generated_Source\PSoC5/CapSense.c **** *  register for every sensor.
1322:Generated_Source\PSoC5/CapSense.c **** *  CapSense_amuxIndex[] - used to store corrected AMUX index when 
1323:Generated_Source\PSoC5/CapSense.c **** *  complex sensors are defeined.
1324:Generated_Source\PSoC5/CapSense.c **** *
1325:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1326:Generated_Source\PSoC5/CapSense.c **** void CapSense_DisableSensor(uint8 sensor) CYREENTRANT
1327:Generated_Source\PSoC5/CapSense.c **** {
 230              		.loc 1 1327 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234              	.LVL16:
 235 0000 08B5     		push	{r3, lr}
 236              		.cfi_def_cfa_offset 8
 237              		.cfi_offset 3, -8
 238              		.cfi_offset 14, -4
 239              	.LVL17:
1328:Generated_Source\PSoC5/CapSense.c ****     uint8 port = CapSense_portTable[sensor];
1329:Generated_Source\PSoC5/CapSense.c ****     uint8 mask = CapSense_maskTable[sensor];
1330:Generated_Source\PSoC5/CapSense.c ****     
1331:Generated_Source\PSoC5/CapSense.c ****     #if ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1332:Generated_Source\PSoC5/CapSense.c ****          (CapSense_IS_COMPLEX_SCANSLOTS))
1333:Generated_Source\PSoC5/CapSense.c ****         uint8 amuxCh = CapSense_amuxIndex[sensor];
1334:Generated_Source\PSoC5/CapSense.c ****     #endif  /* ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1335:Generated_Source\PSoC5/CapSense.c ****             *   (CapSense_IS_COMPLEX_SCANSLOTS))
1336:Generated_Source\PSoC5/CapSense.c ****             */
1337:Generated_Source\PSoC5/CapSense.c ****     
1338:Generated_Source\PSoC5/CapSense.c ****     /* Disconnect from AMUX */
1339:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1340:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1341:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Disconnect(CapSense_amuxIndex[sensor]);
1342:Generated_Source\PSoC5/CapSense.c ****         #else
1343:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Disconnect(sensor);
 240              		.loc 1 1343 0
 241 0002 FFF7FEFF 		bl	CapSense_AMuxCH0_Unset
 242              	.LVL18:
1344:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1345:Generated_Source\PSoC5/CapSense.c ****                 
1346:Generated_Source\PSoC5/CapSense.c ****     #else
1347:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1348:Generated_Source\PSoC5/CapSense.c ****             if ((amuxCh & CapSense_CHANNEL1_FLAG) == 0u)
1349:Generated_Source\PSoC5/CapSense.c ****             {
1350:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(amuxCh);
1351:Generated_Source\PSoC5/CapSense.c ****             } 
1352:Generated_Source\PSoC5/CapSense.c ****             else
1353:Generated_Source\PSoC5/CapSense.c ****             {
1354:Generated_Source\PSoC5/CapSense.c ****                 amuxCh &= ~ CapSense_CHANNEL1_FLAG;
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 29


1355:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(amuxCh);
1356:Generated_Source\PSoC5/CapSense.c ****             }
1357:Generated_Source\PSoC5/CapSense.c ****             
1358:Generated_Source\PSoC5/CapSense.c ****         #else
1359:Generated_Source\PSoC5/CapSense.c ****             if (sensor < CapSense_TOTAL_SENSOR_COUNT__CH0) 
1360:Generated_Source\PSoC5/CapSense.c ****             {
1361:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(sensor);
1362:Generated_Source\PSoC5/CapSense.c ****             } 
1363:Generated_Source\PSoC5/CapSense.c ****             else
1364:Generated_Source\PSoC5/CapSense.c ****             {
1365:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(sensor - CapSense_TOTAL_SENSOR_COUNT__CH0);
1366:Generated_Source\PSoC5/CapSense.c ****             }
1367:Generated_Source\PSoC5/CapSense.c ****             
1368:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1369:Generated_Source\PSoC5/CapSense.c ****         
1370:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
1371:Generated_Source\PSoC5/CapSense.c ****     
1372:Generated_Source\PSoC5/CapSense.c ****     /* Disconnect from DSI output */
1373:Generated_Source\PSoC5/CapSense.c **** 	if(port == 15u)
1374:Generated_Source\PSoC5/CapSense.c **** 	{
1375:Generated_Source\PSoC5/CapSense.c **** 		port = 7u;
1376:Generated_Source\PSoC5/CapSense.c **** 	}
1377:Generated_Source\PSoC5/CapSense.c ****     *CapSense_csTable[port] &= (uint8)~mask;
1378:Generated_Source\PSoC5/CapSense.c ****     
1379:Generated_Source\PSoC5/CapSense.c ****     /* Set sensor to inactive state */
1380:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_GND)
1381:Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_GND;
 243              		.loc 1 1381 0
 244 0006 0822     		movs	r2, #8
 245 0008 0023     		movs	r3, #0
 246 000a 1A70     		strb	r2, [r3]
 247 000c 08BD     		pop	{r3, pc}
 248              		.cfi_endproc
 249              	.LFE12:
 250              		.size	CapSense_DisableSensor, .-CapSense_DisableSensor
 251 000e 00BF     		.section	.text.CapSense_ClearSensors,"ax",%progbits
 252              		.align	2
 253              		.global	CapSense_ClearSensors
 254              		.thumb
 255              		.thumb_func
 256              		.type	CapSense_ClearSensors, %function
 257              	CapSense_ClearSensors:
 258              	.LFB10:
1092:Generated_Source\PSoC5/CapSense.c ****     uint8 i;
 259              		.loc 1 1092 0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263 0000 10B5     		push	{r4, lr}
 264              		.cfi_def_cfa_offset 8
 265              		.cfi_offset 4, -8
 266              		.cfi_offset 14, -4
 267              	.LVL19:
1095:Generated_Source\PSoC5/CapSense.c ****     {
 268              		.loc 1 1095 0
 269 0002 0024     		movs	r4, #0
 270 0004 04E0     		b	.L21
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 30


 271              	.LVL20:
 272              	.L22:
1097:Generated_Source\PSoC5/CapSense.c ****     }
 273              		.loc 1 1097 0 discriminator 3
 274 0006 2046     		mov	r0, r4
 275 0008 FFF7FEFF 		bl	CapSense_DisableSensor
 276              	.LVL21:
1095:Generated_Source\PSoC5/CapSense.c ****     {
 277              		.loc 1 1095 0 discriminator 3
 278 000c 0134     		adds	r4, r4, #1
 279              	.LVL22:
 280 000e E4B2     		uxtb	r4, r4
 281              	.LVL23:
 282              	.L21:
1095:Generated_Source\PSoC5/CapSense.c ****     {
 283              		.loc 1 1095 0 is_stmt 0 discriminator 1
 284 0010 002C     		cmp	r4, #0
 285 0012 F8D0     		beq	.L22
1099:Generated_Source\PSoC5/CapSense.c **** 
 286              		.loc 1 1099 0 is_stmt 1
 287 0014 10BD     		pop	{r4, pc}
 288              		.cfi_endproc
 289              	.LFE10:
 290              		.size	CapSense_ClearSensors, .-CapSense_ClearSensors
 291 0016 00BF     		.section	.text.CapSense_Stop,"ax",%progbits
 292              		.align	2
 293              		.global	CapSense_Stop
 294              		.thumb
 295              		.thumb_func
 296              		.type	CapSense_Stop, %function
 297              	CapSense_Stop:
 298              	.LFB3:
 512:Generated_Source\PSoC5/CapSense.c ****     /* Stop Capsensing */
 299              		.loc 1 512 0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303 0000 10B5     		push	{r4, lr}
 304              		.cfi_def_cfa_offset 8
 305              		.cfi_offset 4, -8
 306              		.cfi_offset 14, -4
 514:Generated_Source\PSoC5/CapSense.c ****     
 307              		.loc 1 514 0
 308 0002 154C     		ldr	r4, .L26
 309 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 310 0006 03F0FD03 		and	r3, r3, #253
 311 000a 2370     		strb	r3, [r4]
 517:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 312              		.loc 1 517 0
 313 000c 0122     		movs	r2, #1
 314 000e 134B     		ldr	r3, .L26+4
 315 0010 1A60     		str	r2, [r3]
 523:Generated_Source\PSoC5/CapSense.c ****     
 316              		.loc 1 523 0
 317 0012 FFF7FEFF 		bl	CapSense_ClearSensors
 318              	.LVL24:
 537:Generated_Source\PSoC5/CapSense.c ****     
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 31


 319              		.loc 1 537 0
 320 0016 124A     		ldr	r2, .L26+8
 321 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 322 001a 03F0DF03 		and	r3, r3, #223
 323 001e 1370     		strb	r3, [r2]
 576:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 324              		.loc 1 576 0
 325 0020 FFF7FEFF 		bl	CapSense_IntClock_Stop
 326              	.LVL25:
 580:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 327              		.loc 1 580 0
 328 0024 FFF7FEFF 		bl	CapSense_CompCH0_Stop
 329              	.LVL26:
 582:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 330              		.loc 1 582 0
 331 0028 FFF7FEFF 		bl	CapSense_IdacCH0_Stop
 332              	.LVL27:
 604:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_ACT_PWR_EN);
 333              		.loc 1 604 0
 334 002c 0D4A     		ldr	r2, .L26+12
 335 002e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 336 0030 03F0FE03 		and	r3, r3, #254
 337 0034 1370     		strb	r3, [r2]
 605:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_STBY_PWR_EN);
 338              		.loc 1 605 0
 339 0036 A2F5A652 		sub	r2, r2, #5312
 340 003a 073A     		subs	r2, r2, #7
 341 003c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 342 003e 03F0DF03 		and	r3, r3, #223
 343 0042 1370     		strb	r3, [r2]
 606:Generated_Source\PSoC5/CapSense.c ****         
 344              		.loc 1 606 0
 345 0044 1032     		adds	r2, r2, #16
 346 0046 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 347 0048 03F0DF03 		and	r3, r3, #223
 348 004c 1370     		strb	r3, [r2]
 616:Generated_Source\PSoC5/CapSense.c **** }
 349              		.loc 1 616 0
 350 004e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 351 0050 03F07F03 		and	r3, r3, #127
 352 0054 2370     		strb	r3, [r4]
 353 0056 10BD     		pop	{r4, pc}
 354              	.L27:
 355              		.align	2
 356              	.L26:
 357 0058 7E640040 		.word	1073767550
 358 005c 80E100E0 		.word	-536813184
 359 0060 9D640040 		.word	1073767581
 360 0064 72580040 		.word	1073764466
 361              		.cfi_endproc
 362              	.LFE3:
 363              		.size	CapSense_Stop, .-CapSense_Stop
 364              		.section	.text.CapSense_PostScan,"ax",%progbits
 365              		.align	2
 366              		.global	CapSense_PostScan
 367              		.thumb
 368              		.thumb_func
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 32


 369              		.type	CapSense_PostScan, %function
 370              	CapSense_PostScan:
 371              	.LFB14:
1382:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_HIGHZ)
1383:Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_HIGHZ;
1384:Generated_Source\PSoC5/CapSense.c ****     #else
1385:Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_SHIELD;
1386:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_GND) */
1387:Generated_Source\PSoC5/CapSense.c **** }
1388:Generated_Source\PSoC5/CapSense.c **** 
1389:Generated_Source\PSoC5/CapSense.c **** 
1390:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1391:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_PreScan
1392:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1393:Generated_Source\PSoC5/CapSense.c **** *
1394:Generated_Source\PSoC5/CapSense.c **** * Summary:
1395:Generated_Source\PSoC5/CapSense.c **** *  Set required settings, enable sensor, remove Vref from AMUX and start the 
1396:Generated_Source\PSoC5/CapSense.c **** *  scanning process of the sensor.
1397:Generated_Source\PSoC5/CapSense.c **** *
1398:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1399:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1400:Generated_Source\PSoC5/CapSense.c **** *
1401:Generated_Source\PSoC5/CapSense.c **** * Return:
1402:Generated_Source\PSoC5/CapSense.c **** *  None
1403:Generated_Source\PSoC5/CapSense.c **** *
1404:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1405:Generated_Source\PSoC5/CapSense.c **** *  CapSense_rbTable[] - used to store pointers to PC pin registers for 
1406:Generated_Source\PSoC5/CapSense.c **** *  every bleed resistor (Rb). Only available when Current Source is External 
1407:Generated_Source\PSoC5/CapSense.c **** *  resistor.
1408:Generated_Source\PSoC5/CapSense.c **** *
1409:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1410:Generated_Source\PSoC5/CapSense.c **** void CapSense_PreScan(uint8 sensor) CYREENTRANT
1411:Generated_Source\PSoC5/CapSense.c **** {
1412:Generated_Source\PSoC5/CapSense.c ****     /* Set Sensor Settings */
1413:Generated_Source\PSoC5/CapSense.c ****     CapSense_SetScanSlotSettings(sensor);
1414:Generated_Source\PSoC5/CapSense.c ****     
1415:Generated_Source\PSoC5/CapSense.c ****     /* Place disable interrupts here to eliminate influence on start of scanning */
1416:Generated_Source\PSoC5/CapSense.c ****     /* `#START CapSense_PreScan_DisableInt` */
1417:Generated_Source\PSoC5/CapSense.c **** 
1418:Generated_Source\PSoC5/CapSense.c ****     /* `#END` */
1419:Generated_Source\PSoC5/CapSense.c ****     
1420:Generated_Source\PSoC5/CapSense.c ****     #ifdef CapSense_PRE_SCAN_DISABLE_INT_CALLBACK
1421:Generated_Source\PSoC5/CapSense.c ****     CapSense_PreScan_DisableInt_Callback();
1422:Generated_Source\PSoC5/CapSense.c ****     #endif /* CapSense_PRE_SCAN_DISABLE_INT_CALLBACK */
1423:Generated_Source\PSoC5/CapSense.c **** 
1424:Generated_Source\PSoC5/CapSense.c ****     /* Resets digital and pre-charge clocks */
1425:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_SYNC_EN;
1426:Generated_Source\PSoC5/CapSense.c ****         
1427:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1428:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1429:Generated_Source\PSoC5/CapSense.c ****             /* Disable Vref from AMux */
1430:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1431:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_VREF_CHANNEL);
1432:Generated_Source\PSoC5/CapSense.c ****             #else
1433:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1434:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
1435:Generated_Source\PSoC5/CapSense.c **** 
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 33


1436:Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1437:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1438:Generated_Source\PSoC5/CapSense.c ****             
1439:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1440:Generated_Source\PSoC5/CapSense.c ****             /* Connect IDAC */
1441:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
1442:Generated_Source\PSoC5/CapSense.c ****             
1443:Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1444:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1445:Generated_Source\PSoC5/CapSense.c ****                 
1446:Generated_Source\PSoC5/CapSense.c ****             /* Disable CapSense Buffer */
1447:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG &= (uint8)~CapSense_CSBUF_ENABLE;
1448:Generated_Source\PSoC5/CapSense.c ****             
1449:Generated_Source\PSoC5/CapSense.c ****         #else
1450:Generated_Source\PSoC5/CapSense.c ****             /* Connect DSI output to Rb */
1451:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] |= CapSense_BYP_MASK;
1452:Generated_Source\PSoC5/CapSense.c ****             
1453:Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1454:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1455:Generated_Source\PSoC5/CapSense.c ****              
1456:Generated_Source\PSoC5/CapSense.c ****             /* Disable CapSense Buffer */
1457:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1458:Generated_Source\PSoC5/CapSense.c ****         
1459:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1460:Generated_Source\PSoC5/CapSense.c ****         
1461:Generated_Source\PSoC5/CapSense.c ****     #else
1462:Generated_Source\PSoC5/CapSense.c **** 
1463:Generated_Source\PSoC5/CapSense.c ****         if((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) != 0u)
1464:Generated_Source\PSoC5/CapSense.c ****         {
1465:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1466:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1467:Generated_Source\PSoC5/CapSense.c ****                 #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1468:Generated_Source\PSoC5/CapSense.c ****                     CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_VREF_CHANNEL);
1469:Generated_Source\PSoC5/CapSense.c ****                 #else
1470:Generated_Source\PSoC5/CapSense.c ****                     CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1471:Generated_Source\PSoC5/CapSense.c ****                 #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
1472:Generated_Source\PSoC5/CapSense.c ****                 
1473:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1474:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1475:Generated_Source\PSoC5/CapSense.c ****                 
1476:Generated_Source\PSoC5/CapSense.c ****             #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1477:Generated_Source\PSoC5/CapSense.c ****                 /* Connect IDAC */
1478:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
1479:Generated_Source\PSoC5/CapSense.c ****                 
1480:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1481:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1482:Generated_Source\PSoC5/CapSense.c ****                     
1483:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1484:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1485:Generated_Source\PSoC5/CapSense.c ****                 
1486:Generated_Source\PSoC5/CapSense.c ****             #else
1487:Generated_Source\PSoC5/CapSense.c ****                 /* Connect DSI output to Rb */
1488:Generated_Source\PSoC5/CapSense.c ****                 *CapSense_rbTable[CapSense_extRbCh0Cur] |= CapSense_BYP_MASK;
1489:Generated_Source\PSoC5/CapSense.c ****                 
1490:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1491:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1492:Generated_Source\PSoC5/CapSense.c ****                     
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 34


1493:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1494:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1495:Generated_Source\PSoC5/CapSense.c ****             
1496:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1497:Generated_Source\PSoC5/CapSense.c ****             
1498:Generated_Source\PSoC5/CapSense.c ****         }
1499:Generated_Source\PSoC5/CapSense.c ****         
1500:Generated_Source\PSoC5/CapSense.c ****         if((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) != 0u)
1501:Generated_Source\PSoC5/CapSense.c ****         {
1502:Generated_Source\PSoC5/CapSense.c ****             sensor += CapSense_TOTAL_SENSOR_COUNT__CH0;
1503:Generated_Source\PSoC5/CapSense.c ****             
1504:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1505:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1506:Generated_Source\PSoC5/CapSense.c ****                 #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1507:Generated_Source\PSoC5/CapSense.c ****                    CapSense_AMuxCH1_Disconnect(CapSense_AMuxCH1_VREF_CHANNEL);
1508:Generated_Source\PSoC5/CapSense.c ****                 #else 
1509:Generated_Source\PSoC5/CapSense.c ****                     CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1510:Generated_Source\PSoC5/CapSense.c ****                 #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1511:Generated_Source\PSoC5/CapSense.c ****                 
1512:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1513:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1514:Generated_Source\PSoC5/CapSense.c ****                 
1515:Generated_Source\PSoC5/CapSense.c ****             #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1516:Generated_Source\PSoC5/CapSense.c ****                 /* Connect IDAC */
1517:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_IDAC_CHANNEL);
1518:Generated_Source\PSoC5/CapSense.c ****                 
1519:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1520:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1521:Generated_Source\PSoC5/CapSense.c ****                     
1522:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1523:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1524:Generated_Source\PSoC5/CapSense.c ****                 
1525:Generated_Source\PSoC5/CapSense.c ****             #else
1526:Generated_Source\PSoC5/CapSense.c ****                 /* Connect DSI output to Rb */
1527:Generated_Source\PSoC5/CapSense.c ****                 *CapSense_rbTable[CapSense_extRbCh1Cur] |= CapSense_BYP_MASK;
1528:Generated_Source\PSoC5/CapSense.c ****                 
1529:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1530:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1531:Generated_Source\PSoC5/CapSense.c ****                 
1532:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1533:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1534:Generated_Source\PSoC5/CapSense.c ****             
1535:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1536:Generated_Source\PSoC5/CapSense.c ****         }
1537:Generated_Source\PSoC5/CapSense.c ****     
1538:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN) */
1539:Generated_Source\PSoC5/CapSense.c ****     
1540:Generated_Source\PSoC5/CapSense.c ****     /* Start measurament, pre-charge clocks are running and PRS as well */
1541:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_START;
1542:Generated_Source\PSoC5/CapSense.c ****     
1543:Generated_Source\PSoC5/CapSense.c ****     /* Place enable interrupts here to eliminate influence on start of scanning */
1544:Generated_Source\PSoC5/CapSense.c ****     /* `#START CapSense_PreScan_EnableInt` */
1545:Generated_Source\PSoC5/CapSense.c **** 
1546:Generated_Source\PSoC5/CapSense.c ****     /* `#END` */
1547:Generated_Source\PSoC5/CapSense.c **** 
1548:Generated_Source\PSoC5/CapSense.c ****     #ifdef CapSense_PRE_SCAN_ENABLE_INT_CALLBACK
1549:Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan_EnableInt_Callback();
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 35


1550:Generated_Source\PSoC5/CapSense.c ****     #endif /* CapSense_PRE_SCAN_ENABLE_INT_CALLBACK */
1551:Generated_Source\PSoC5/CapSense.c **** }
1552:Generated_Source\PSoC5/CapSense.c **** 
1553:Generated_Source\PSoC5/CapSense.c **** 
1554:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1555:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1556:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScan
1557:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1558:Generated_Source\PSoC5/CapSense.c ****     *
1559:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1560:Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1561:Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1562:Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1563:Generated_Source\PSoC5/CapSense.c ****     *  Only one channel designs.
1564:Generated_Source\PSoC5/CapSense.c ****     *
1565:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1566:Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1567:Generated_Source\PSoC5/CapSense.c ****     *
1568:Generated_Source\PSoC5/CapSense.c ****     * Return:
1569:Generated_Source\PSoC5/CapSense.c ****     *  None
1570:Generated_Source\PSoC5/CapSense.c ****     *
1571:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1572:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1573:Generated_Source\PSoC5/CapSense.c ****     *
1574:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1575:Generated_Source\PSoC5/CapSense.c ****     *  No
1576:Generated_Source\PSoC5/CapSense.c ****     *
1577:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1578:Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScan(uint8 sensor) CYREENTRANT
1579:Generated_Source\PSoC5/CapSense.c ****     {
 372              		.loc 1 1579 0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 0
 375              		@ frame_needed = 0, uses_anonymous_args = 0
 376              	.LVL28:
 377 0000 10B5     		push	{r4, lr}
 378              		.cfi_def_cfa_offset 8
 379              		.cfi_offset 4, -8
 380              		.cfi_offset 14, -4
1580:Generated_Source\PSoC5/CapSense.c ****         /* Stop Capsensing and rearm sync */
1581:Generated_Source\PSoC5/CapSense.c ****         CapSense_CONTROL_REG &= (uint8)~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
 381              		.loc 1 1581 0
 382 0002 0E4A     		ldr	r2, .L30
 383 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 384 0006 03F0FC03 		and	r3, r3, #252
 385 000a 1370     		strb	r3, [r2]
1582:Generated_Source\PSoC5/CapSense.c ****         
1583:Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1584:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
1585:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1586:Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH0_COUNTER_PTR);
1587:Generated_Source\PSoC5/CapSense.c ****         #else
1588:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH0_COUNTER_HI_REG << 8u);
 386              		.loc 1 1588 0
 387 000c 0C4B     		ldr	r3, .L30+4
 388 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 389 0010 1B02     		lsls	r3, r3, #8
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 36


 390 0012 0C49     		ldr	r1, .L30+8
 391 0014 21F81030 		strh	r3, [r1, r0, lsl #1]	@ movhi
1589:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH0_COUNTER_LO_REG;
 392              		.loc 1 1589 0
 393 0018 763A     		subs	r2, r2, #118
 394 001a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 395 001c 1343     		orrs	r3, r3, r2
1590:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE -
 396              		.loc 1 1590 0
 397 001e DB43     		mvns	r3, r3
 398 0020 21F81030 		strh	r3, [r1, r0, lsl #1]	@ movhi
1591:Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1592:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION == CapSense_MEASURE_IMPLEMENTATION_FF) */
1593:Generated_Source\PSoC5/CapSense.c ****         
1594:Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1595:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
 399              		.loc 1 1595 0
 400 0024 FFF7FEFF 		bl	CapSense_DisableSensor
 401              	.LVL29:
1596:Generated_Source\PSoC5/CapSense.c ****         
1597:Generated_Source\PSoC5/CapSense.c ****         #if(CapSense_CURRENT_SOURCE)
1598:Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1599:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 402              		.loc 1 1599 0
 403 0028 0020     		movs	r0, #0
 404 002a FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 405              	.LVL30:
1600:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1601:Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1602:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_IDAC_CHANNEL);
1603:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1604:Generated_Source\PSoC5/CapSense.c ****         #else
1605:Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1606:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] &= ~CapSense_BYP_MASK; 
1607:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1608:Generated_Source\PSoC5/CapSense.c ****             
1609:Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1610:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1611:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
1612:Generated_Source\PSoC5/CapSense.c ****         #else
1613:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 406              		.loc 1 1613 0
 407 002e 064A     		ldr	r2, .L30+12
 408 0030 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 409 0032 43F00103 		orr	r3, r3, #1
 410 0036 1370     		strb	r3, [r2]
 411 0038 10BD     		pop	{r4, pc}
 412              	.L31:
 413 003a 00BF     		.align	2
 414              	.L30:
 415 003c 7E640040 		.word	1073767550
 416 0040 18640040 		.word	1073767448
 417 0044 00000000 		.word	CapSense_sensorRaw
 418 0048 72580040 		.word	1073764466
 419              		.cfi_endproc
 420              	.LFE14:
 421              		.size	CapSense_PostScan, .-CapSense_PostScan
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 37


 422              		.section	.text.CapSense_SetPrescaler,"ax",%progbits
 423              		.align	2
 424              		.global	CapSense_SetPrescaler
 425              		.thumb
 426              		.thumb_func
 427              		.type	CapSense_SetPrescaler, %function
 428              	CapSense_SetPrescaler:
 429              	.LFB15:
1614:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1615:Generated_Source\PSoC5/CapSense.c ****     }
1616:Generated_Source\PSoC5/CapSense.c ****     
1617:Generated_Source\PSoC5/CapSense.c **** #else
1618:Generated_Source\PSoC5/CapSense.c **** 
1619:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1620:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScan
1621:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1622:Generated_Source\PSoC5/CapSense.c ****     *
1623:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1624:Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1625:Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1626:Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1627:Generated_Source\PSoC5/CapSense.c ****     *  Only used for channel 0 in two channes designs.
1628:Generated_Source\PSoC5/CapSense.c ****     *
1629:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1630:Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1631:Generated_Source\PSoC5/CapSense.c ****     *
1632:Generated_Source\PSoC5/CapSense.c ****     * Return:
1633:Generated_Source\PSoC5/CapSense.c ****     *  None
1634:Generated_Source\PSoC5/CapSense.c ****     *
1635:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1636:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1637:Generated_Source\PSoC5/CapSense.c ****     *
1638:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1639:Generated_Source\PSoC5/CapSense.c ****     *  No
1640:Generated_Source\PSoC5/CapSense.c ****     *
1641:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1642:Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScanCh0(uint8 sensor) CYREENTRANT
1643:Generated_Source\PSoC5/CapSense.c ****     {
1644:Generated_Source\PSoC5/CapSense.c ****         if (((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) == 0u) && 
1645:Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) == 0u)) 
1646:Generated_Source\PSoC5/CapSense.c ****         {
1647:Generated_Source\PSoC5/CapSense.c ****             /* Stop Capsensing and rearm sync */
1648:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
1649:Generated_Source\PSoC5/CapSense.c ****         }
1650:Generated_Source\PSoC5/CapSense.c ****         
1651:Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1652:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
1653:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1654:Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH0_COUNTER_PTR);
1655:Generated_Source\PSoC5/CapSense.c ****         #else
1656:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH0_COUNTER_HI_REG << 8u);
1657:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH0_COUNTER_LO_REG;
1658:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1659:Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1660:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)*/
1661:Generated_Source\PSoC5/CapSense.c ****         
1662:Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 38


1663:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
1664:Generated_Source\PSoC5/CapSense.c ****         
1665:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
1666:Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1667:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
1668:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1669:Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1670:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_IDAC_CHANNEL);
1671:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1672:Generated_Source\PSoC5/CapSense.c ****         #else
1673:Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1674:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] &= ~CapSense_BYP_MASK; 
1675:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1676:Generated_Source\PSoC5/CapSense.c ****         
1677:Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1678:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1679:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
1680:Generated_Source\PSoC5/CapSense.c ****         #else
1681:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
1682:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1683:Generated_Source\PSoC5/CapSense.c ****     }
1684:Generated_Source\PSoC5/CapSense.c ****     
1685:Generated_Source\PSoC5/CapSense.c ****     
1686:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1687:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScanCh1
1688:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1689:Generated_Source\PSoC5/CapSense.c ****     *
1690:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1691:Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1692:Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC), 
1693:Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1694:Generated_Source\PSoC5/CapSense.c ****     *  Only used for channel 1 in two channes designs.
1695:Generated_Source\PSoC5/CapSense.c ****     *
1696:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1697:Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1698:Generated_Source\PSoC5/CapSense.c ****     *
1699:Generated_Source\PSoC5/CapSense.c ****     * Return:
1700:Generated_Source\PSoC5/CapSense.c ****     *  None
1701:Generated_Source\PSoC5/CapSense.c ****     *
1702:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1703:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1704:Generated_Source\PSoC5/CapSense.c ****     *
1705:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1706:Generated_Source\PSoC5/CapSense.c ****     *  No
1707:Generated_Source\PSoC5/CapSense.c ****     *
1708:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1709:Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScanCh1(uint8 sensor) CYREENTRANT
1710:Generated_Source\PSoC5/CapSense.c ****     {
1711:Generated_Source\PSoC5/CapSense.c ****         if (((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) == 0u) && 
1712:Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) == 0u))
1713:Generated_Source\PSoC5/CapSense.c ****         {
1714:Generated_Source\PSoC5/CapSense.c ****             /* Stop Capsensing and rearm sync */
1715:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
1716:Generated_Source\PSoC5/CapSense.c ****         }
1717:Generated_Source\PSoC5/CapSense.c ****         
1718:Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1719:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 39


1720:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1721:Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH1_COUNTER_PTR);
1722:Generated_Source\PSoC5/CapSense.c ****         #else
1723:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH1_COUNTER_HI_REG << 8u);
1724:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH1_COUNTER_LO_REG;
1725:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1726:Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1727:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)*/
1728:Generated_Source\PSoC5/CapSense.c ****         
1729:Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1730:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
1731:Generated_Source\PSoC5/CapSense.c ****         
1732:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
1733:Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1734:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetValue(CapSense_TURN_OFF_IDAC);
1735:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1736:Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1737:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(CapSense_AMuxCH1_IDAC_CHANNEL);
1738:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1739:Generated_Source\PSoC5/CapSense.c ****         #else
1740:Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1741:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh1Cur] &= ~CapSense_BYP_MASK; 
1742:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1743:Generated_Source\PSoC5/CapSense.c **** 
1744:Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1745:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1746:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_VREF_CHANNEL);
1747:Generated_Source\PSoC5/CapSense.c ****         #else
1748:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
1749:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1750:Generated_Source\PSoC5/CapSense.c ****     }
1751:Generated_Source\PSoC5/CapSense.c ****     
1752:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_DESIGN_TYPE */
1753:Generated_Source\PSoC5/CapSense.c **** 
1754:Generated_Source\PSoC5/CapSense.c **** 
1755:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
1756:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1757:Generated_Source\PSoC5/CapSense.c ****     * Function Name:  CapSense_InitRb
1758:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1759:Generated_Source\PSoC5/CapSense.c ****     *
1760:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1761:Generated_Source\PSoC5/CapSense.c ****     *  Sets all Rbleed resistor to High-Z mode. The first Rbleed resistor is active
1762:Generated_Source\PSoC5/CapSense.c ****     *  while next measure.
1763:Generated_Source\PSoC5/CapSense.c ****     *  This function is available only if Current Source is External Resistor.
1764:Generated_Source\PSoC5/CapSense.c ****     *
1765:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1766:Generated_Source\PSoC5/CapSense.c ****     *  None
1767:Generated_Source\PSoC5/CapSense.c ****     *
1768:Generated_Source\PSoC5/CapSense.c ****     * Return:
1769:Generated_Source\PSoC5/CapSense.c ****     *  None
1770:Generated_Source\PSoC5/CapSense.c ****     *
1771:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************/
1772:Generated_Source\PSoC5/CapSense.c ****     void CapSense_InitRb(void) 
1773:Generated_Source\PSoC5/CapSense.c ****     {
1774:Generated_Source\PSoC5/CapSense.c ****         uint8 i;
1775:Generated_Source\PSoC5/CapSense.c ****         
1776:Generated_Source\PSoC5/CapSense.c ****         /* Disable all Rb */
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 40


1777:Generated_Source\PSoC5/CapSense.c ****         for(i = 0u; i < CapSense_TOTAL_RB_NUMBER; i++)
1778:Generated_Source\PSoC5/CapSense.c ****         {
1779:Generated_Source\PSoC5/CapSense.c ****             /* Make High-Z */
1780:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[i] = CapSense_PRT_PC_HIGHZ;
1781:Generated_Source\PSoC5/CapSense.c ****         }
1782:Generated_Source\PSoC5/CapSense.c ****     }
1783:Generated_Source\PSoC5/CapSense.c ****     
1784:Generated_Source\PSoC5/CapSense.c ****     
1785:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1786:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetRBleed
1787:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1788:Generated_Source\PSoC5/CapSense.c ****     *
1789:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1790:Generated_Source\PSoC5/CapSense.c ****     *  Sets the pin to use for the bleed resistor (Rb) connection. This function
1791:Generated_Source\PSoC5/CapSense.c ****     *  can be called at runtime to select the current Rb pin setting from those 
1792:Generated_Source\PSoC5/CapSense.c ****     *  defined customizer. The function overwrites the component parameter setting. 
1793:Generated_Source\PSoC5/CapSense.c ****     *  This function is available only if Current Source is External Resistor.
1794:Generated_Source\PSoC5/CapSense.c ****     * 
1795:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1796:Generated_Source\PSoC5/CapSense.c ****     *  rbleed:  Ordering number for bleed resistor terminal defined in CapSense
1797:Generated_Source\PSoC5/CapSense.c ****     *  customizer.
1798:Generated_Source\PSoC5/CapSense.c ****     *
1799:Generated_Source\PSoC5/CapSense.c ****     * Return:
1800:Generated_Source\PSoC5/CapSense.c ****     *  None
1801:Generated_Source\PSoC5/CapSense.c ****     *
1802:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1803:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_extRbCh0Cur - used to store current number of active 
1804:Generated_Source\PSoC5/CapSense.c ****     *  bleed resistor (Rb) of channel 0.
1805:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_extRbCh1Cur - used to store current number of active 
1806:Generated_Source\PSoC5/CapSense.c ****     *  bleed resistor (Rb) of channel 1.
1807:Generated_Source\PSoC5/CapSense.c ****     *  The active bleed resistor (Rb) pin will be used while next measurement  
1808:Generated_Source\PSoC5/CapSense.c ****     *  cycle.
1809:Generated_Source\PSoC5/CapSense.c ****     *
1810:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1811:Generated_Source\PSoC5/CapSense.c ****     *  No
1812:Generated_Source\PSoC5/CapSense.c ****     *
1813:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1814:Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetRBleed(uint8 rbleed) 
1815:Generated_Source\PSoC5/CapSense.c ****     {
1816:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1817:Generated_Source\PSoC5/CapSense.c ****             CapSense_extRbCh0Cur = rbleed;
1818:Generated_Source\PSoC5/CapSense.c ****             
1819:Generated_Source\PSoC5/CapSense.c ****         #else
1820:Generated_Source\PSoC5/CapSense.c ****             if(rbleed < CapSense_TOTAL_RB_NUMBER__CH0)
1821:Generated_Source\PSoC5/CapSense.c ****             {
1822:Generated_Source\PSoC5/CapSense.c ****                 CapSense_extRbCh0Cur = rbleed;
1823:Generated_Source\PSoC5/CapSense.c ****             }
1824:Generated_Source\PSoC5/CapSense.c ****             else
1825:Generated_Source\PSoC5/CapSense.c ****             {
1826:Generated_Source\PSoC5/CapSense.c ****                 CapSense_extRbCh1Cur = (rbleed - CapSense_TOTAL_RB_NUMBER__CH0);   
1827:Generated_Source\PSoC5/CapSense.c ****             }
1828:Generated_Source\PSoC5/CapSense.c ****     
1829:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */ 
1830:Generated_Source\PSoC5/CapSense.c ****     }
1831:Generated_Source\PSoC5/CapSense.c **** #endif /* CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB */ 
1832:Generated_Source\PSoC5/CapSense.c **** 
1833:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_PRESCALER_OPTIONS)
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 41


1834:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1835:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetPrescaler
1836:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1837:Generated_Source\PSoC5/CapSense.c ****     *
1838:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1839:Generated_Source\PSoC5/CapSense.c ****     *  Sets analog switch divider.
1840:Generated_Source\PSoC5/CapSense.c ****     *
1841:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1842:Generated_Source\PSoC5/CapSense.c ****     *  prescaler:  Sets prescaler divider values.
1843:Generated_Source\PSoC5/CapSense.c ****     *
1844:Generated_Source\PSoC5/CapSense.c ****     * Return:
1845:Generated_Source\PSoC5/CapSense.c ****     *  None
1846:Generated_Source\PSoC5/CapSense.c ****     *
1847:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1848:Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetPrescaler(uint8 prescaler) CYREENTRANT
1849:Generated_Source\PSoC5/CapSense.c ****     {
 430              		.loc 1 1849 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              		@ link register save eliminated.
 435              	.LVL31:
1850:Generated_Source\PSoC5/CapSense.c ****         /* Set Prescaler */
1851:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
1852:Generated_Source\PSoC5/CapSense.c ****             CapSense_PRESCALER_PERIOD_REG = prescaler;
 436              		.loc 1 1852 0
 437 0000 024B     		ldr	r3, .L33
 438 0002 1870     		strb	r0, [r3]
1853:Generated_Source\PSoC5/CapSense.c ****             CapSense_PRESCALER_COMPARE_REG = (prescaler >> 1u);
 439              		.loc 1 1853 0
 440 0004 4008     		lsrs	r0, r0, #1
 441              	.LVL32:
 442 0006 1033     		adds	r3, r3, #16
 443              	.LVL33:
 444 0008 1870     		strb	r0, [r3]
 445              	.LVL34:
 446 000a 7047     		bx	lr
 447              	.L34:
 448              		.align	2
 449              	.L33:
 450 000c 2D640040 		.word	1073767469
 451              		.cfi_endproc
 452              	.LFE15:
 453              		.size	CapSense_SetPrescaler, .-CapSense_SetPrescaler
 454              		.section	.text.CapSense_SetScanSlotSettings,"ax",%progbits
 455              		.align	2
 456              		.global	CapSense_SetScanSlotSettings
 457              		.thumb
 458              		.thumb_func
 459              		.type	CapSense_SetScanSlotSettings, %function
 460              	CapSense_SetScanSlotSettings:
 461              	.LFB5:
 804:Generated_Source\PSoC5/CapSense.c ****     uint8 widget;
 462              		.loc 1 804 0
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 0
 465              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 42


 466              	.LVL35:
 467 0000 38B5     		push	{r3, r4, r5, lr}
 468              		.cfi_def_cfa_offset 16
 469              		.cfi_offset 3, -16
 470              		.cfi_offset 4, -12
 471              		.cfi_offset 5, -8
 472              		.cfi_offset 14, -4
 473 0002 0446     		mov	r4, r0
 474              	.LVL36:
 813:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 475              		.loc 1 813 0
 476 0004 064D     		ldr	r5, .L37
 477 0006 2B18     		adds	r3, r5, r0
 478 0008 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 479              	.LVL37:
 480 000a FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 481              	.LVL38:
 821:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 482              		.loc 1 821 0
 483 000e 2A7A     		ldrb	r2, [r5, #8]	@ zero_extendqisi2
 484 0010 044B     		ldr	r3, .L37+4
 485 0012 1A70     		strb	r2, [r3]
 826:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
 486              		.loc 1 826 0
 487 0014 044B     		ldr	r3, .L37+8
 488 0016 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 489 0018 FFF7FEFF 		bl	CapSense_SetPrescaler
 490              	.LVL39:
 491 001c 38BD     		pop	{r3, r4, r5, pc}
 492              	.L38:
 493 001e 00BF     		.align	2
 494              	.L37:
 495 0020 00000000 		.word	.LANCHOR0
 496 0024 5C640040 		.word	1073767516
 497 0028 00000000 		.word	CapSense_analogSwitchDivider
 498              		.cfi_endproc
 499              	.LFE5:
 500              		.size	CapSense_SetScanSlotSettings, .-CapSense_SetScanSlotSettings
 501              		.section	.text.CapSense_PreScan,"ax",%progbits
 502              		.align	2
 503              		.global	CapSense_PreScan
 504              		.thumb
 505              		.thumb_func
 506              		.type	CapSense_PreScan, %function
 507              	CapSense_PreScan:
 508              	.LFB13:
1411:Generated_Source\PSoC5/CapSense.c ****     /* Set Sensor Settings */
 509              		.loc 1 1411 0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 0
 512              		@ frame_needed = 0, uses_anonymous_args = 0
 513              	.LVL40:
 514 0000 38B5     		push	{r3, r4, r5, lr}
 515              		.cfi_def_cfa_offset 16
 516              		.cfi_offset 3, -16
 517              		.cfi_offset 4, -12
 518              		.cfi_offset 5, -8
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 43


 519              		.cfi_offset 14, -4
 520 0002 0546     		mov	r5, r0
1413:Generated_Source\PSoC5/CapSense.c ****     
 521              		.loc 1 1413 0
 522 0004 FFF7FEFF 		bl	CapSense_SetScanSlotSettings
 523              	.LVL41:
1425:Generated_Source\PSoC5/CapSense.c ****         
 524              		.loc 1 1425 0
 525 0008 084C     		ldr	r4, .L41
 526 000a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 527 000c 43F00103 		orr	r3, r3, #1
 528 0010 2370     		strb	r3, [r4]
1433:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
 529              		.loc 1 1433 0
 530 0012 074A     		ldr	r2, .L41+4
 531 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 532 0016 03F0FE03 		and	r3, r3, #254
 533 001a 1370     		strb	r3, [r2]
1437:Generated_Source\PSoC5/CapSense.c ****             
 534              		.loc 1 1437 0
 535 001c 2846     		mov	r0, r5
 536 001e FFF7FEFF 		bl	CapSense_EnableSensor
 537              	.LVL42:
1541:Generated_Source\PSoC5/CapSense.c ****     
 538              		.loc 1 1541 0
 539 0022 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 540 0024 43F00203 		orr	r3, r3, #2
 541 0028 2370     		strb	r3, [r4]
 542 002a 38BD     		pop	{r3, r4, r5, pc}
 543              	.L42:
 544              		.align	2
 545              	.L41:
 546 002c 7E640040 		.word	1073767550
 547 0030 72580040 		.word	1073764466
 548              		.cfi_endproc
 549              	.LFE13:
 550              		.size	CapSense_PreScan, .-CapSense_PreScan
 551              		.section	.text.CapSense_ScanSensor,"ax",%progbits
 552              		.align	2
 553              		.global	CapSense_ScanSensor
 554              		.thumb
 555              		.thumb_func
 556              		.type	CapSense_ScanSensor, %function
 557              	CapSense_ScanSensor:
 558              	.LFB6:
 916:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 559              		.loc 1 916 0
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 0
 562              		@ frame_needed = 0, uses_anonymous_args = 0
 563              	.LVL43:
 564 0000 08B5     		push	{r3, lr}
 565              		.cfi_def_cfa_offset 8
 566              		.cfi_offset 3, -8
 567              		.cfi_offset 14, -4
 918:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = sensor;
 568              		.loc 1 918 0
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 44


 569 0002 054B     		ldr	r3, .L45
 570 0004 0022     		movs	r2, #0
 571 0006 1A70     		strb	r2, [r3]
 919:Generated_Source\PSoC5/CapSense.c ****     
 572              		.loc 1 919 0
 573 0008 044A     		ldr	r2, .L45+4
 574 000a 1070     		strb	r0, [r2]
 923:Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan(sensor);
 575              		.loc 1 923 0
 576 000c 8122     		movs	r2, #129
 577 000e 1A70     		strb	r2, [r3]
 924:Generated_Source\PSoC5/CapSense.c ****         
 578              		.loc 1 924 0
 579 0010 FFF7FEFF 		bl	CapSense_PreScan
 580              	.LVL44:
 581 0014 08BD     		pop	{r3, pc}
 582              	.L46:
 583 0016 00BF     		.align	2
 584              	.L45:
 585 0018 00000000 		.word	CapSense_csv
 586 001c 00000000 		.word	CapSense_sensorIndex
 587              		.cfi_endproc
 588              	.LFE6:
 589              		.size	CapSense_ScanSensor, .-CapSense_ScanSensor
 590              		.section	.text.CapSense_ScanEnabledWidgets,"ax",%progbits
 591              		.align	2
 592              		.global	CapSense_ScanEnabledWidgets
 593              		.thumb
 594              		.thumb_func
 595              		.type	CapSense_ScanEnabledWidgets, %function
 596              	CapSense_ScanEnabledWidgets:
 597              	.LFB7:
 993:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 598              		.loc 1 993 0
 599              		.cfi_startproc
 600              		@ args = 0, pretend = 0, frame = 0
 601              		@ frame_needed = 0, uses_anonymous_args = 0
 602 0000 10B5     		push	{r4, lr}
 603              		.cfi_def_cfa_offset 8
 604              		.cfi_offset 4, -8
 605              		.cfi_offset 14, -4
 995:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = 0xFFu;
 606              		.loc 1 995 0
 607 0002 0022     		movs	r2, #0
 608 0004 0A4B     		ldr	r3, .L50
 609 0006 1A70     		strb	r2, [r3]
 996:Generated_Source\PSoC5/CapSense.c ****     
 610              		.loc 1 996 0
 611 0008 0A4C     		ldr	r4, .L50+4
 612 000a FF23     		movs	r3, #255
 613 000c 2370     		strb	r3, [r4]
1000:Generated_Source\PSoC5/CapSense.c **** 
 614              		.loc 1 1000 0
 615 000e 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 616 0010 FFF7FEFF 		bl	CapSense_FindNextSensor
 617              	.LVL45:
 618 0014 2070     		strb	r0, [r4]
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 45


1003:Generated_Source\PSoC5/CapSense.c ****         {
 619              		.loc 1 1003 0
 620 0016 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 621 0018 13F0FF0F 		tst	r3, #255
 622 001c 07D1     		bne	.L47
1005:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
 623              		.loc 1 1005 0
 624 001e 044A     		ldr	r2, .L50
 625 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 626 0022 43F00103 		orr	r3, r3, #1
 627 0026 1370     		strb	r3, [r2]
1006:Generated_Source\PSoC5/CapSense.c ****         }
 628              		.loc 1 1006 0
 629 0028 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 630 002a FFF7FEFF 		bl	CapSense_PreScan
 631              	.LVL46:
 632              	.L47:
 633 002e 10BD     		pop	{r4, pc}
 634              	.L51:
 635              		.align	2
 636              	.L50:
 637 0030 00000000 		.word	CapSense_csv
 638 0034 00000000 		.word	CapSense_sensorIndex
 639              		.cfi_endproc
 640              	.LFE7:
 641              		.size	CapSense_ScanEnabledWidgets, .-CapSense_ScanEnabledWidgets
 642              		.section	.text.CapSense_GetPrescaler,"ax",%progbits
 643              		.align	2
 644              		.global	CapSense_GetPrescaler
 645              		.thumb
 646              		.thumb_func
 647              		.type	CapSense_GetPrescaler, %function
 648              	CapSense_GetPrescaler:
 649              	.LFB16:
1854:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
1855:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PRESCALER_PERIOD_PTR, (uint16) prescaler);
1856:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PRESCALER_COMPARE_PTR, (uint16) (prescaler >> 1u));
1857:Generated_Source\PSoC5/CapSense.c ****         #else
1858:Generated_Source\PSoC5/CapSense.c ****             /* Do nothing = config without prescaler */
1859:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
1860:Generated_Source\PSoC5/CapSense.c ****     }
1861:Generated_Source\PSoC5/CapSense.c **** 
1862:Generated_Source\PSoC5/CapSense.c **** 
1863:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1864:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_GetPrescaler
1865:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1866:Generated_Source\PSoC5/CapSense.c ****     *
1867:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1868:Generated_Source\PSoC5/CapSense.c ****     *  Gets analog switch divider.
1869:Generated_Source\PSoC5/CapSense.c ****     *
1870:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1871:Generated_Source\PSoC5/CapSense.c ****     *  None
1872:Generated_Source\PSoC5/CapSense.c ****     *
1873:Generated_Source\PSoC5/CapSense.c ****     * Return:
1874:Generated_Source\PSoC5/CapSense.c ****     *   Returns the prescaler divider value.
1875:Generated_Source\PSoC5/CapSense.c ****     *
1876:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 46


1877:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_GetPrescaler(void) 
1878:Generated_Source\PSoC5/CapSense.c ****     {
 650              		.loc 1 1878 0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 0
 653              		@ frame_needed = 0, uses_anonymous_args = 0
 654              		@ link register save eliminated.
 655              	.LVL47:
1879:Generated_Source\PSoC5/CapSense.c ****         uint8 prescaler = 0u;
1880:Generated_Source\PSoC5/CapSense.c **** 
1881:Generated_Source\PSoC5/CapSense.c ****         /* Get Prescaler */
1882:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
1883:Generated_Source\PSoC5/CapSense.c ****             prescaler = CapSense_PRESCALER_PERIOD_REG;
 656              		.loc 1 1883 0
 657 0000 014B     		ldr	r3, .L53
 658 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 659              	.LVL48:
1884:Generated_Source\PSoC5/CapSense.c ****             
1885:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
1886:Generated_Source\PSoC5/CapSense.c ****             prescaler = (uint8) CY_GET_REG16(CapSense_PRESCALER_PERIOD_PTR);
1887:Generated_Source\PSoC5/CapSense.c ****             
1888:Generated_Source\PSoC5/CapSense.c ****         #else
1889:Generated_Source\PSoC5/CapSense.c ****             /* Do nothing = config without prescaler */
1890:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
1891:Generated_Source\PSoC5/CapSense.c ****         
1892:Generated_Source\PSoC5/CapSense.c ****         return (prescaler);
1893:Generated_Source\PSoC5/CapSense.c ****     }
 660              		.loc 1 1893 0
 661 0004 7047     		bx	lr
 662              	.L54:
 663 0006 00BF     		.align	2
 664              	.L53:
 665 0008 2D640040 		.word	1073767469
 666              		.cfi_endproc
 667              	.LFE16:
 668              		.size	CapSense_GetPrescaler, .-CapSense_GetPrescaler
 669              		.section	.text.CapSense_SetScanSpeed,"ax",%progbits
 670              		.align	2
 671              		.global	CapSense_SetScanSpeed
 672              		.thumb
 673              		.thumb_func
 674              		.type	CapSense_SetScanSpeed, %function
 675              	CapSense_SetScanSpeed:
 676              	.LFB17:
1894:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_PRESCALER_OPTIONS */
1895:Generated_Source\PSoC5/CapSense.c **** 
1896:Generated_Source\PSoC5/CapSense.c **** 
1897:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1898:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_SetScanSpeed
1899:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1900:Generated_Source\PSoC5/CapSense.c **** *
1901:Generated_Source\PSoC5/CapSense.c **** * Summary:
1902:Generated_Source\PSoC5/CapSense.c **** *  Sets ScanSpeed divider.
1903:Generated_Source\PSoC5/CapSense.c **** *
1904:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1905:Generated_Source\PSoC5/CapSense.c **** *  scanspeed:  Sets ScanSpeed divider.
1906:Generated_Source\PSoC5/CapSense.c **** *
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 47


1907:Generated_Source\PSoC5/CapSense.c **** * Return:
1908:Generated_Source\PSoC5/CapSense.c **** *  None
1909:Generated_Source\PSoC5/CapSense.c **** *
1910:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1911:Generated_Source\PSoC5/CapSense.c **** void CapSense_SetScanSpeed(uint8 scanSpeed) 
1912:Generated_Source\PSoC5/CapSense.c **** {
 677              		.loc 1 1912 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 0
 680              		@ frame_needed = 0, uses_anonymous_args = 0
 681              		@ link register save eliminated.
 682              	.LVL49:
1913:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_PERIOD_REG = scanSpeed; 
 683              		.loc 1 1913 0
 684 0000 014B     		ldr	r3, .L56
 685 0002 1870     		strb	r0, [r3]
 686 0004 7047     		bx	lr
 687              	.L57:
 688 0006 00BF     		.align	2
 689              	.L56:
 690 0008 8D640040 		.word	1073767565
 691              		.cfi_endproc
 692              	.LFE17:
 693              		.size	CapSense_SetScanSpeed, .-CapSense_SetScanSpeed
 694              		.section	.text.CapSense_SetAnalogSwitchesSource,"ax",%progbits
 695              		.align	2
 696              		.global	CapSense_SetAnalogSwitchesSource
 697              		.thumb
 698              		.thumb_func
 699              		.type	CapSense_SetAnalogSwitchesSource, %function
 700              	CapSense_SetAnalogSwitchesSource:
 701              	.LFB18:
1914:Generated_Source\PSoC5/CapSense.c **** }
1915:Generated_Source\PSoC5/CapSense.c **** 
1916:Generated_Source\PSoC5/CapSense.c **** 
1917:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_PRS_OPTIONS)
1918:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1919:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetAnalogSwitchesSource
1920:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1921:Generated_Source\PSoC5/CapSense.c ****     *
1922:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1923:Generated_Source\PSoC5/CapSense.c ****     *  Selects the Analog switches source between PRS and prescaler. It is useful
1924:Generated_Source\PSoC5/CapSense.c ****     *  for sensor capacitance determination for sensors with low self-capacitance.
1925:Generated_Source\PSoC5/CapSense.c ****     *  This function is used in auto-tuning procedure.
1926:Generated_Source\PSoC5/CapSense.c ****     *
1927:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1928:Generated_Source\PSoC5/CapSense.c ****     *  src:  analog switches source:
1929:Generated_Source\PSoC5/CapSense.c ****     *           CapSense_ANALOG_SWITCHES_SRC_PRESCALER - selects prescaler
1930:Generated_Source\PSoC5/CapSense.c ****     *           CapSense_ANALOG_SWITCHES_SRC_PRS - selects PRS
1931:Generated_Source\PSoC5/CapSense.c ****     *
1932:Generated_Source\PSoC5/CapSense.c ****     * Return:
1933:Generated_Source\PSoC5/CapSense.c ****     *  None
1934:Generated_Source\PSoC5/CapSense.c ****     *
1935:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1936:Generated_Source\PSoC5/CapSense.c ****     *  No
1937:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1938:Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetAnalogSwitchesSource(uint8 src)
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 48


1939:Generated_Source\PSoC5/CapSense.c ****                       
1940:Generated_Source\PSoC5/CapSense.c ****     {
 702              		.loc 1 1940 0
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 0
 705              		@ frame_needed = 0, uses_anonymous_args = 0
 706              		@ link register save eliminated.
 707              	.LVL50:
1941:Generated_Source\PSoC5/CapSense.c ****         if(src == CapSense_ANALOG_SWITCHES_SRC_PRESCALER)
 708              		.loc 1 1941 0
 709 0000 0128     		cmp	r0, #1
 710 0002 05D1     		bne	.L59
1942:Generated_Source\PSoC5/CapSense.c ****         {
1943:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= (uint8)~0x10u;
 711              		.loc 1 1943 0
 712 0004 054A     		ldr	r2, .L61
 713 0006 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 714 0008 03F0EF03 		and	r3, r3, #239
 715 000c 1370     		strb	r3, [r2]
 716 000e 7047     		bx	lr
 717              	.L59:
1944:Generated_Source\PSoC5/CapSense.c ****         }
1945:Generated_Source\PSoC5/CapSense.c ****         else
1946:Generated_Source\PSoC5/CapSense.c ****         {
1947:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= 0x10u;
 718              		.loc 1 1947 0
 719 0010 024A     		ldr	r2, .L61
 720 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 721 0014 43F01003 		orr	r3, r3, #16
 722 0018 1370     		strb	r3, [r2]
 723 001a 7047     		bx	lr
 724              	.L62:
 725              		.align	2
 726              	.L61:
 727 001c 7E640040 		.word	1073767550
 728              		.cfi_endproc
 729              	.LFE18:
 730              		.size	CapSense_SetAnalogSwitchesSource, .-CapSense_SetAnalogSwitchesSource
 731              		.section	.text.CapSense_Init,"ax",%progbits
 732              		.align	2
 733              		.global	CapSense_Init
 734              		.thumb
 735              		.thumb_func
 736              		.type	CapSense_Init, %function
 737              	CapSense_Init:
 738              	.LFB0:
  97:Generated_Source\PSoC5/CapSense.c ****     #if ( (CapSense_PRS_OPTIONS) || \
 739              		.loc 1 97 0
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 0
 742              		@ frame_needed = 0, uses_anonymous_args = 0
 743 0000 70B5     		push	{r4, r5, r6, lr}
 744              		.cfi_def_cfa_offset 16
 745              		.cfi_offset 4, -16
 746              		.cfi_offset 5, -12
 747              		.cfi_offset 6, -8
 748              		.cfi_offset 14, -4
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 49


 111:Generated_Source\PSoC5/CapSense.c **** 
 749              		.loc 1 111 0
 750 0002 FFF7FEFF 		bl	CapSense_ClearSensors
 751              	.LVL51:
 127:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_PRS_OPTIONS) */
 752              		.loc 1 127 0
 753 0006 0220     		movs	r0, #2
 754 0008 FFF7FEFF 		bl	CapSense_SetAnalogSwitchesSource
 755              	.LVL52:
 143:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 756              		.loc 1 143 0
 757 000c FFF7FEFF 		bl	CyEnterCriticalSection
 758              	.LVL53:
 144:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_B_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 759              		.loc 1 144 0
 760 0010 304A     		ldr	r2, .L65
 761 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 762 0014 43F00303 		orr	r3, r3, #3
 763 0018 1370     		strb	r3, [r2]
 145:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 764              		.loc 1 145 0
 765 001a 0132     		adds	r2, r2, #1
 766 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 767 001e 43F00303 		orr	r3, r3, #3
 768 0022 1370     		strb	r3, [r2]
 146:Generated_Source\PSoC5/CapSense.c ****         
 769              		.loc 1 146 0
 770 0024 FFF7FEFF 		bl	CyExitCriticalSection
 771              	.LVL54:
 149:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 772              		.loc 1 149 0
 773 0028 2B4B     		ldr	r3, .L65+4
 774 002a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 775 002c 0025     		movs	r5, #0
 776 002e 1D70     		strb	r5, [r3]
 777 0030 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 778 0032 6FF04B02 		mvn	r2, #75
 779 0036 5A70     		strb	r2, [r3, #1]
 151:Generated_Source\PSoC5/CapSense.c ****                 
 780              		.loc 1 151 0
 781 0038 2033     		adds	r3, r3, #32
 782 003a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 783 003c 4FF0FF34 		mov	r4, #-1
 784 0040 1C70     		strb	r4, [r3]
 785 0042 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 786 0044 5C70     		strb	r4, [r3, #1]
 171:Generated_Source\PSoC5/CapSense.c ****     
 787              		.loc 1 171 0
 788 0046 0726     		movs	r6, #7
 789 0048 4433     		adds	r3, r3, #68
 790 004a 1E70     		strb	r6, [r3]
 187:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 791              		.loc 1 187 0
 792 004c FFF7FEFF 		bl	CyEnterCriticalSection
 793              	.LVL55:
 188:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 794              		.loc 1 188 0
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 50


 795 0050 224A     		ldr	r2, .L65+8
 796 0052 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 797 0054 43F00303 		orr	r3, r3, #3
 798 0058 1370     		strb	r3, [r2]
 189:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 799              		.loc 1 189 0
 800 005a 043A     		subs	r2, r2, #4
 801 005c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 802 005e 43F00303 		orr	r3, r3, #3
 803 0062 1370     		strb	r3, [r2]
 190:Generated_Source\PSoC5/CapSense.c ****         
 804              		.loc 1 190 0
 805 0064 FFF7FEFF 		bl	CyExitCriticalSection
 806              	.LVL56:
 193:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 807              		.loc 1 193 0
 808 0068 1D4B     		ldr	r3, .L65+12
 809 006a 1C70     		strb	r4, [r3]
 194:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 810              		.loc 1 194 0
 811 006c 2033     		adds	r3, r3, #32
 812 006e 1C70     		strb	r4, [r3]
 195:Generated_Source\PSoC5/CapSense.c ****         
 813              		.loc 1 195 0
 814 0070 403B     		subs	r3, r3, #64
 815 0072 1C70     		strb	r4, [r3]
 198:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 816              		.loc 1 198 0
 817 0074 1C33     		adds	r3, r3, #28
 818 0076 1C70     		strb	r4, [r3]
 199:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 819              		.loc 1 199 0
 820 0078 3033     		adds	r3, r3, #48
 821 007a 1C70     		strb	r4, [r3]
 200:Generated_Source\PSoC5/CapSense.c ****         
 822              		.loc 1 200 0
 823 007c 103B     		subs	r3, r3, #16
 824 007e 1C70     		strb	r4, [r3]
 239:Generated_Source\PSoC5/CapSense.c ****     (void)CyIntSetVector(CapSense_IsrCH0_ISR_NUMBER, &CapSense_IsrCH0_ISR);
 825              		.loc 1 239 0
 826 0080 0124     		movs	r4, #1
 827 0082 184B     		ldr	r3, .L65+16
 828 0084 1C60     		str	r4, [r3]
 240:Generated_Source\PSoC5/CapSense.c ****     CyIntSetPriority(CapSense_IsrCH0_ISR_NUMBER, CapSense_IsrCH0_ISR_PRIORITY);
 829              		.loc 1 240 0
 830 0086 1849     		ldr	r1, .L65+20
 831 0088 2846     		mov	r0, r5
 832 008a FFF7FEFF 		bl	CyIntSetVector
 833              	.LVL57:
 241:Generated_Source\PSoC5/CapSense.c ****     
 834              		.loc 1 241 0
 835 008e 3146     		mov	r1, r6
 836 0090 2846     		mov	r0, r5
 837 0092 FFF7FEFF 		bl	CyIntSetPriority
 838              	.LVL58:
 250:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMOD_CHANNEL);
 839              		.loc 1 250 0
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 51


 840 0096 FFF7FEFF 		bl	CapSense_AMuxCH0_Init
 841              	.LVL59:
 251:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMP_VP_CHANNEL);
 842              		.loc 1 251 0
 843 009a 2046     		mov	r0, r4
 844 009c FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 845              	.LVL60:
 252:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 846              		.loc 1 252 0
 847 00a0 0220     		movs	r0, #2
 848 00a2 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 849              	.LVL61:
 254:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 850              		.loc 1 254 0
 851 00a6 0320     		movs	r0, #3
 852 00a8 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 853              	.LVL62:
 272:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 854              		.loc 1 272 0
 855 00ac 0F4A     		ldr	r2, .L65+24
 856 00ae 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 857 00b0 43F00403 		orr	r3, r3, #4
 858 00b4 1370     		strb	r3, [r2]
 278:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 859              		.loc 1 278 0
 860 00b6 FFF7FEFF 		bl	CapSense_CompCH0_Init
 861              	.LVL63:
 280:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetPolarity(CapSense_IdacCH0_IDIR);
 862              		.loc 1 280 0
 863 00ba FFF7FEFF 		bl	CapSense_IdacCH0_Init
 864              	.LVL64:
 281:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetRange(CapSense_IDAC_RANGE_VALUE);
 865              		.loc 1 281 0
 866 00be 2846     		mov	r0, r5
 867 00c0 FFF7FEFF 		bl	CapSense_IdacCH0_SetPolarity
 868              	.LVL65:
 282:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 869              		.loc 1 282 0
 870 00c4 0420     		movs	r0, #4
 871 00c6 FFF7FEFF 		bl	CapSense_IdacCH0_SetRange
 872              	.LVL66:
 283:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 873              		.loc 1 283 0
 874 00ca 2846     		mov	r0, r5
 875 00cc FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 876              	.LVL67:
 877 00d0 70BD     		pop	{r4, r5, r6, pc}
 878              	.L66:
 879 00d2 00BF     		.align	2
 880              	.L65:
 881 00d4 99640040 		.word	1073767577
 882 00d8 29640040 		.word	1073767465
 883 00dc 9C640040 		.word	1073767580
 884 00e0 2C640040 		.word	1073767468
 885 00e4 80E100E0 		.word	-536813184
 886 00e8 00000000 		.word	CapSense_IsrCH0_ISR
 887 00ec 7E640040 		.word	1073767550
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 52


 888              		.cfi_endproc
 889              	.LFE0:
 890              		.size	CapSense_Init, .-CapSense_Init
 891              		.section	.text.CapSense_Start,"ax",%progbits
 892              		.align	2
 893              		.global	CapSense_Start
 894              		.thumb
 895              		.thumb_func
 896              		.type	CapSense_Start, %function
 897              	CapSense_Start:
 898              	.LFB2:
 475:Generated_Source\PSoC5/CapSense.c ****     if (CapSense_initVar == 0u)
 899              		.loc 1 475 0
 900              		.cfi_startproc
 901              		@ args = 0, pretend = 0, frame = 0
 902              		@ frame_needed = 0, uses_anonymous_args = 0
 903 0000 08B5     		push	{r3, lr}
 904              		.cfi_def_cfa_offset 8
 905              		.cfi_offset 3, -8
 906              		.cfi_offset 14, -4
 476:Generated_Source\PSoC5/CapSense.c ****     {
 907              		.loc 1 476 0
 908 0002 084B     		ldr	r3, .L70
 909 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 910 0006 23B9     		cbnz	r3, .L68
 478:Generated_Source\PSoC5/CapSense.c ****         CapSense_initVar = 1u;
 911              		.loc 1 478 0
 912 0008 FFF7FEFF 		bl	CapSense_Init
 913              	.LVL68:
 479:Generated_Source\PSoC5/CapSense.c ****     }
 914              		.loc 1 479 0
 915 000c 0122     		movs	r2, #1
 916 000e 054B     		ldr	r3, .L70
 917 0010 1A70     		strb	r2, [r3]
 918              	.L68:
 481:Generated_Source\PSoC5/CapSense.c ****     
 919              		.loc 1 481 0
 920 0012 FFF7FEFF 		bl	CapSense_Enable
 921              	.LVL69:
 486:Generated_Source\PSoC5/CapSense.c ****         CapSense_lowLevelTuningDone = 1u;
 922              		.loc 1 486 0
 923 0016 FFF7FEFF 		bl	CapSense_AutoTune
 924              	.LVL70:
 487:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
 925              		.loc 1 487 0
 926 001a 0122     		movs	r2, #1
 927 001c 024B     		ldr	r3, .L70+4
 928 001e 5A72     		strb	r2, [r3, #9]
 929 0020 08BD     		pop	{r3, pc}
 930              	.L71:
 931 0022 00BF     		.align	2
 932              	.L70:
 933 0024 00000000 		.word	.LANCHOR1
 934 0028 00000000 		.word	.LANCHOR0
 935              		.cfi_endproc
 936              	.LFE2:
 937              		.size	CapSense_Start, .-CapSense_Start
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 53


 938              		.global	CapSense_widgetNumber
 939              		.comm	CapSense_analogSwitchDivider,1,4
 940              		.global	CapSense_widgetResolution
 941              		.global	CapSense_idacSettings
 942              		.global	CapSense_csTable
 943              		.global	CapSense_maskTable
 944              		.global	CapSense_portTable
 945              		.global	CapSense_pcTable
 946              		.global	CapSense_sensorEnableMask
 947              		.comm	CapSense_sensorRaw,2,4
 948              		.global	CapSense_lowLevelTuningDone
 949              		.comm	CapSense_sensorIndex,1,1
 950              		.comm	CapSense_csv,1,1
 951              		.section	.rodata
 952              		.align	2
 953              		.type	CapSense_widgetNumber, %object
 954              		.size	CapSense_widgetNumber, 1
 955              	CapSense_widgetNumber:
 956 0000 00       		.space	1
 957 0001 000000   		.space	3
 958              		.type	CapSense_csTable, %object
 959              		.size	CapSense_csTable, 32
 960              	CapSense_csTable:
 961 0004 06520040 		.word	1073762822
 962 0008 0E520040 		.word	1073762830
 963 000c 16520040 		.word	1073762838
 964 0010 1E520040 		.word	1073762846
 965 0014 26520040 		.word	1073762854
 966 0018 2E520040 		.word	1073762862
 967 001c 36520040 		.word	1073762870
 968 0020 7E520040 		.word	1073762942
 969              		.type	CapSense_maskTable, %object
 970              		.size	CapSense_maskTable, 1
 971              	CapSense_maskTable:
 972 0024 00       		.space	1
 973 0025 000000   		.space	3
 974              		.type	CapSense_portTable, %object
 975              		.size	CapSense_portTable, 1
 976              	CapSense_portTable:
 977 0028 00       		.space	1
 978 0029 000000   		.space	3
 979              		.type	CapSense_pcTable, %object
 980              		.size	CapSense_pcTable, 4
 981              	CapSense_pcTable:
 982 002c 00000000 		.space	4
 983              		.data
 984              		.align	2
 985              		.set	.LANCHOR0,. + 0
 986              		.type	CapSense_sensorEnableMask, %object
 987              		.size	CapSense_sensorEnableMask, 1
 988              	CapSense_sensorEnableMask:
 989 0000 01       		.byte	1
 990 0001 000000   		.space	3
 991              		.type	CapSense_idacSettings, %object
 992              		.size	CapSense_idacSettings, 1
 993              	CapSense_idacSettings:
 994 0004 C8       		.byte	-56
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 54


 995 0005 000000   		.space	3
 996              		.type	CapSense_widgetResolution, %object
 997              		.size	CapSense_widgetResolution, 1
 998              	CapSense_widgetResolution:
 999 0008 03       		.byte	3
 1000              		.type	CapSense_lowLevelTuningDone, %object
 1001              		.size	CapSense_lowLevelTuningDone, 1
 1002              	CapSense_lowLevelTuningDone:
 1003 0009 01       		.byte	1
 1004              		.bss
 1005              		.set	.LANCHOR1,. + 0
 1006              		.type	CapSense_initVar, %object
 1007              		.size	CapSense_initVar, 1
 1008              	CapSense_initVar:
 1009 0000 00       		.space	1
 1010              		.text
 1011              	.Letext0:
 1012              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1013              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 1014              		.file 4 "Generated_Source\\PSoC5\\CapSense_IntClock.h"
 1015              		.file 5 "Generated_Source\\PSoC5\\CapSense_CompCH0.h"
 1016              		.file 6 "Generated_Source\\PSoC5\\CapSense_IdacCH0.h"
 1017              		.file 7 "Generated_Source\\PSoC5\\cyfitter_cfg.h"
 1018              		.file 8 "Generated_Source\\PSoC5\\CapSense_AMuxCH0.h"
 1019              		.file 9 "Generated_Source\\PSoC5\\CapSense.h"
 1020              		.section	.debug_info,"",%progbits
 1021              	.Ldebug_info0:
 1022 0000 1A080000 		.4byte	0x81a
 1023 0004 0400     		.2byte	0x4
 1024 0006 00000000 		.4byte	.Ldebug_abbrev0
 1025 000a 04       		.byte	0x4
 1026 000b 01       		.uleb128 0x1
 1027 000c D2040000 		.4byte	.LASF81
 1028 0010 0C       		.byte	0xc
 1029 0011 2A000000 		.4byte	.LASF82
 1030 0015 F5020000 		.4byte	.LASF83
 1031 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1032 001d 00000000 		.4byte	0
 1033 0021 00000000 		.4byte	.Ldebug_line0
 1034 0025 02       		.uleb128 0x2
 1035 0026 01       		.byte	0x1
 1036 0027 06       		.byte	0x6
 1037 0028 10010000 		.4byte	.LASF0
 1038 002c 02       		.uleb128 0x2
 1039 002d 01       		.byte	0x1
 1040 002e 08       		.byte	0x8
 1041 002f 50040000 		.4byte	.LASF1
 1042 0033 02       		.uleb128 0x2
 1043 0034 02       		.byte	0x2
 1044 0035 05       		.byte	0x5
 1045 0036 8E040000 		.4byte	.LASF2
 1046 003a 02       		.uleb128 0x2
 1047 003b 02       		.byte	0x2
 1048 003c 07       		.byte	0x7
 1049 003d CB020000 		.4byte	.LASF3
 1050 0041 02       		.uleb128 0x2
 1051 0042 04       		.byte	0x4
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 55


 1052 0043 05       		.byte	0x5
 1053 0044 3D010000 		.4byte	.LASF4
 1054 0048 02       		.uleb128 0x2
 1055 0049 04       		.byte	0x4
 1056 004a 07       		.byte	0x7
 1057 004b 64020000 		.4byte	.LASF5
 1058 004f 02       		.uleb128 0x2
 1059 0050 08       		.byte	0x8
 1060 0051 05       		.byte	0x5
 1061 0052 02010000 		.4byte	.LASF6
 1062 0056 02       		.uleb128 0x2
 1063 0057 08       		.byte	0x8
 1064 0058 07       		.byte	0x7
 1065 0059 AD000000 		.4byte	.LASF7
 1066 005d 03       		.uleb128 0x3
 1067 005e 04       		.byte	0x4
 1068 005f 05       		.byte	0x5
 1069 0060 696E7400 		.ascii	"int\000"
 1070 0064 02       		.uleb128 0x2
 1071 0065 04       		.byte	0x4
 1072 0066 07       		.byte	0x7
 1073 0067 27020000 		.4byte	.LASF8
 1074 006b 04       		.uleb128 0x4
 1075 006c 4C010000 		.4byte	.LASF9
 1076 0070 02       		.byte	0x2
 1077 0071 E401     		.2byte	0x1e4
 1078 0073 2C000000 		.4byte	0x2c
 1079 0077 04       		.uleb128 0x4
 1080 0078 00000000 		.4byte	.LASF10
 1081 007c 02       		.byte	0x2
 1082 007d E501     		.2byte	0x1e5
 1083 007f 3A000000 		.4byte	0x3a
 1084 0083 04       		.uleb128 0x4
 1085 0084 C8010000 		.4byte	.LASF11
 1086 0088 02       		.byte	0x2
 1087 0089 E601     		.2byte	0x1e6
 1088 008b 48000000 		.4byte	0x48
 1089 008f 02       		.uleb128 0x2
 1090 0090 04       		.byte	0x4
 1091 0091 04       		.byte	0x4
 1092 0092 23040000 		.4byte	.LASF12
 1093 0096 02       		.uleb128 0x2
 1094 0097 08       		.byte	0x8
 1095 0098 04       		.byte	0x4
 1096 0099 68010000 		.4byte	.LASF13
 1097 009d 02       		.uleb128 0x2
 1098 009e 01       		.byte	0x1
 1099 009f 08       		.byte	0x8
 1100 00a0 60050000 		.4byte	.LASF14
 1101 00a4 04       		.uleb128 0x4
 1102 00a5 33040000 		.4byte	.LASF15
 1103 00a9 02       		.byte	0x2
 1104 00aa 8E02     		.2byte	0x28e
 1105 00ac B0000000 		.4byte	0xb0
 1106 00b0 05       		.uleb128 0x5
 1107 00b1 6B000000 		.4byte	0x6b
 1108 00b5 04       		.uleb128 0x4
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 56


 1109 00b6 46010000 		.4byte	.LASF16
 1110 00ba 02       		.byte	0x2
 1111 00bb 8F02     		.2byte	0x28f
 1112 00bd C1000000 		.4byte	0xc1
 1113 00c1 05       		.uleb128 0x5
 1114 00c2 77000000 		.4byte	0x77
 1115 00c6 04       		.uleb128 0x4
 1116 00c7 77030000 		.4byte	.LASF17
 1117 00cb 02       		.byte	0x2
 1118 00cc 9002     		.2byte	0x290
 1119 00ce D2000000 		.4byte	0xd2
 1120 00d2 05       		.uleb128 0x5
 1121 00d3 83000000 		.4byte	0x83
 1122 00d7 02       		.uleb128 0x2
 1123 00d8 08       		.byte	0x8
 1124 00d9 04       		.byte	0x4
 1125 00da B4030000 		.4byte	.LASF18
 1126 00de 02       		.uleb128 0x2
 1127 00df 04       		.byte	0x4
 1128 00e0 07       		.byte	0x7
 1129 00e1 9A030000 		.4byte	.LASF19
 1130 00e5 06       		.uleb128 0x6
 1131 00e6 DC000000 		.4byte	.LASF26
 1132 00ea 01       		.byte	0x1
 1133 00eb 4101     		.2byte	0x141
 1134 00ed 00000000 		.4byte	.LFB1
 1135 00f1 68000000 		.4byte	.LFE1-.LFB1
 1136 00f5 01       		.uleb128 0x1
 1137 00f6 9C       		.byte	0x9c
 1138 00f7 40010000 		.4byte	0x140
 1139 00fb 07       		.uleb128 0x7
 1140 00fc C9050000 		.4byte	.LASF20
 1141 0100 01       		.byte	0x1
 1142 0101 4301     		.2byte	0x143
 1143 0103 6B000000 		.4byte	0x6b
 1144 0107 00000000 		.4byte	.LLST0
 1145 010b 08       		.uleb128 0x8
 1146 010c 06000000 		.4byte	.LVL0
 1147 0110 4B070000 		.4byte	0x74b
 1148 0114 08       		.uleb128 0x8
 1149 0115 16000000 		.4byte	.LVL2
 1150 0119 56070000 		.4byte	0x756
 1151 011d 08       		.uleb128 0x8
 1152 011e 1A000000 		.4byte	.LVL3
 1153 0122 61070000 		.4byte	0x761
 1154 0126 08       		.uleb128 0x8
 1155 0127 1E000000 		.4byte	.LVL4
 1156 012b 6C070000 		.4byte	0x76c
 1157 012f 09       		.uleb128 0x9
 1158 0130 46000000 		.4byte	.LVL5
 1159 0134 77070000 		.4byte	0x777
 1160 0138 0A       		.uleb128 0xa
 1161 0139 01       		.uleb128 0x1
 1162 013a 50       		.byte	0x50
 1163 013b 02       		.uleb128 0x2
 1164 013c 74       		.byte	0x74
 1165 013d 00       		.sleb128 0
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 57


 1166 013e 00       		.byte	0
 1167 013f 00       		.byte	0
 1168 0140 0B       		.uleb128 0xb
 1169 0141 38040000 		.4byte	.LASF22
 1170 0145 01       		.byte	0x1
 1171 0146 8902     		.2byte	0x289
 1172 0148 6B000000 		.4byte	0x6b
 1173 014c 00000000 		.4byte	.LFB4
 1174 0150 20000000 		.4byte	.LFE4-.LFB4
 1175 0154 01       		.uleb128 0x1
 1176 0155 9C       		.byte	0x9c
 1177 0156 89010000 		.4byte	0x189
 1178 015a 0C       		.uleb128 0xc
 1179 015b A4000000 		.4byte	.LASF24
 1180 015f 01       		.byte	0x1
 1181 0160 8902     		.2byte	0x289
 1182 0162 6B000000 		.4byte	0x6b
 1183 0166 13000000 		.4byte	.LLST1
 1184 016a 0D       		.uleb128 0xd
 1185 016b 706F7300 		.ascii	"pos\000"
 1186 016f 01       		.byte	0x1
 1187 0170 8B02     		.2byte	0x28b
 1188 0172 6B000000 		.4byte	0x6b
 1189 0176 01       		.uleb128 0x1
 1190 0177 52       		.byte	0x52
 1191 0178 07       		.uleb128 0x7
 1192 0179 D8030000 		.4byte	.LASF21
 1193 017d 01       		.byte	0x1
 1194 017e 8C02     		.2byte	0x28c
 1195 0180 6B000000 		.4byte	0x6b
 1196 0184 3F000000 		.4byte	.LLST2
 1197 0188 00       		.byte	0
 1198 0189 0E       		.uleb128 0xe
 1199 018a 6C060000 		.4byte	.LASF84
 1200 018e 01       		.byte	0x1
 1201 018f 1504     		.2byte	0x415
 1202 0191 6B000000 		.4byte	0x6b
 1203 0195 00000000 		.4byte	.LFB8
 1204 0199 10000000 		.4byte	.LFE8-.LFB8
 1205 019d 01       		.uleb128 0x1
 1206 019e 9C       		.byte	0x9c
 1207 019f 0B       		.uleb128 0xb
 1208 01a0 B1010000 		.4byte	.LASF23
 1209 01a4 01       		.byte	0x1
 1210 01a5 2E04     		.2byte	0x42e
 1211 01a7 77000000 		.4byte	0x77
 1212 01ab 00000000 		.4byte	.LFB9
 1213 01af 0C000000 		.4byte	.LFE9-.LFB9
 1214 01b3 01       		.uleb128 0x1
 1215 01b4 9C       		.byte	0x9c
 1216 01b5 CA010000 		.4byte	0x1ca
 1217 01b9 0C       		.uleb128 0xc
 1218 01ba 3F030000 		.4byte	.LASF25
 1219 01be 01       		.byte	0x1
 1220 01bf 2E04     		.2byte	0x42e
 1221 01c1 6B000000 		.4byte	0x6b
 1222 01c5 52000000 		.4byte	.LLST3
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 58


 1223 01c9 00       		.byte	0
 1224 01ca 06       		.uleb128 0x6
 1225 01cb 6F010000 		.4byte	.LASF27
 1226 01cf 01       		.byte	0x1
 1227 01d0 D904     		.2byte	0x4d9
 1228 01d2 00000000 		.4byte	.LFB11
 1229 01d6 0E000000 		.4byte	.LFE11-.LFB11
 1230 01da 01       		.uleb128 0x1
 1231 01db 9C       		.byte	0x9c
 1232 01dc 14020000 		.4byte	0x214
 1233 01e0 0C       		.uleb128 0xc
 1234 01e1 3F030000 		.4byte	.LASF25
 1235 01e5 01       		.byte	0x1
 1236 01e6 D904     		.2byte	0x4d9
 1237 01e8 6B000000 		.4byte	0x6b
 1238 01ec 73000000 		.4byte	.LLST4
 1239 01f0 0F       		.uleb128 0xf
 1240 01f1 F9010000 		.4byte	.LASF28
 1241 01f5 01       		.byte	0x1
 1242 01f6 DB04     		.2byte	0x4db
 1243 01f8 6B000000 		.4byte	0x6b
 1244 01fc 00       		.byte	0
 1245 01fd 0F       		.uleb128 0xf
 1246 01fe DE010000 		.4byte	.LASF29
 1247 0202 01       		.byte	0x1
 1248 0203 DC04     		.2byte	0x4dc
 1249 0205 6B000000 		.4byte	0x6b
 1250 0209 00       		.byte	0
 1251 020a 08       		.uleb128 0x8
 1252 020b 0C000000 		.4byte	.LVL15
 1253 020f 82070000 		.4byte	0x782
 1254 0213 00       		.byte	0
 1255 0214 06       		.uleb128 0x6
 1256 0215 F0050000 		.4byte	.LASF30
 1257 0219 01       		.byte	0x1
 1258 021a 2E05     		.2byte	0x52e
 1259 021c 00000000 		.4byte	.LFB12
 1260 0220 0E000000 		.4byte	.LFE12-.LFB12
 1261 0224 01       		.uleb128 0x1
 1262 0225 9C       		.byte	0x9c
 1263 0226 5E020000 		.4byte	0x25e
 1264 022a 0C       		.uleb128 0xc
 1265 022b 3F030000 		.4byte	.LASF25
 1266 022f 01       		.byte	0x1
 1267 0230 2E05     		.2byte	0x52e
 1268 0232 6B000000 		.4byte	0x6b
 1269 0236 94000000 		.4byte	.LLST5
 1270 023a 0F       		.uleb128 0xf
 1271 023b F9010000 		.4byte	.LASF28
 1272 023f 01       		.byte	0x1
 1273 0240 3005     		.2byte	0x530
 1274 0242 6B000000 		.4byte	0x6b
 1275 0246 00       		.byte	0
 1276 0247 0F       		.uleb128 0xf
 1277 0248 DE010000 		.4byte	.LASF29
 1278 024c 01       		.byte	0x1
 1279 024d 3105     		.2byte	0x531
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 59


 1280 024f 6B000000 		.4byte	0x6b
 1281 0253 00       		.byte	0
 1282 0254 08       		.uleb128 0x8
 1283 0255 06000000 		.4byte	.LVL18
 1284 0259 8D070000 		.4byte	0x78d
 1285 025d 00       		.byte	0
 1286 025e 06       		.uleb128 0x6
 1287 025f 34020000 		.4byte	.LASF31
 1288 0263 01       		.byte	0x1
 1289 0264 4304     		.2byte	0x443
 1290 0266 00000000 		.4byte	.LFB10
 1291 026a 16000000 		.4byte	.LFE10-.LFB10
 1292 026e 01       		.uleb128 0x1
 1293 026f 9C       		.byte	0x9c
 1294 0270 93020000 		.4byte	0x293
 1295 0274 10       		.uleb128 0x10
 1296 0275 6900     		.ascii	"i\000"
 1297 0277 01       		.byte	0x1
 1298 0278 4504     		.2byte	0x445
 1299 027a 6B000000 		.4byte	0x6b
 1300 027e B5000000 		.4byte	.LLST6
 1301 0282 09       		.uleb128 0x9
 1302 0283 0C000000 		.4byte	.LVL21
 1303 0287 14020000 		.4byte	0x214
 1304 028b 0A       		.uleb128 0xa
 1305 028c 01       		.uleb128 0x1
 1306 028d 50       		.byte	0x50
 1307 028e 02       		.uleb128 0x2
 1308 028f 74       		.byte	0x74
 1309 0290 00       		.sleb128 0
 1310 0291 00       		.byte	0
 1311 0292 00       		.byte	0
 1312 0293 06       		.uleb128 0x6
 1313 0294 C0030000 		.4byte	.LASF32
 1314 0298 01       		.byte	0x1
 1315 0299 FF01     		.2byte	0x1ff
 1316 029b 00000000 		.4byte	.LFB3
 1317 029f 68000000 		.4byte	.LFE3-.LFB3
 1318 02a3 01       		.uleb128 0x1
 1319 02a4 9C       		.byte	0x9c
 1320 02a5 CE020000 		.4byte	0x2ce
 1321 02a9 08       		.uleb128 0x8
 1322 02aa 16000000 		.4byte	.LVL24
 1323 02ae 5E020000 		.4byte	0x25e
 1324 02b2 08       		.uleb128 0x8
 1325 02b3 24000000 		.4byte	.LVL25
 1326 02b7 98070000 		.4byte	0x798
 1327 02bb 08       		.uleb128 0x8
 1328 02bc 28000000 		.4byte	.LVL26
 1329 02c0 A3070000 		.4byte	0x7a3
 1330 02c4 08       		.uleb128 0x8
 1331 02c5 2C000000 		.4byte	.LVL27
 1332 02c9 AE070000 		.4byte	0x7ae
 1333 02cd 00       		.byte	0
 1334 02ce 06       		.uleb128 0x6
 1335 02cf B7050000 		.4byte	.LASF33
 1336 02d3 01       		.byte	0x1
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 60


 1337 02d4 2A06     		.2byte	0x62a
 1338 02d6 00000000 		.4byte	.LFB14
 1339 02da 4C000000 		.4byte	.LFE14-.LFB14
 1340 02de 01       		.uleb128 0x1
 1341 02df 9C       		.byte	0x9c
 1342 02e0 0D030000 		.4byte	0x30d
 1343 02e4 0C       		.uleb128 0xc
 1344 02e5 3F030000 		.4byte	.LASF25
 1345 02e9 01       		.byte	0x1
 1346 02ea 2A06     		.2byte	0x62a
 1347 02ec 6B000000 		.4byte	0x6b
 1348 02f0 DF000000 		.4byte	.LLST7
 1349 02f4 08       		.uleb128 0x8
 1350 02f5 28000000 		.4byte	.LVL29
 1351 02f9 14020000 		.4byte	0x214
 1352 02fd 09       		.uleb128 0x9
 1353 02fe 2E000000 		.4byte	.LVL30
 1354 0302 B9070000 		.4byte	0x7b9
 1355 0306 0A       		.uleb128 0xa
 1356 0307 01       		.uleb128 0x1
 1357 0308 50       		.byte	0x50
 1358 0309 01       		.uleb128 0x1
 1359 030a 30       		.byte	0x30
 1360 030b 00       		.byte	0
 1361 030c 00       		.byte	0
 1362 030d 06       		.uleb128 0x6
 1363 030e EC000000 		.4byte	.LASF34
 1364 0312 01       		.byte	0x1
 1365 0313 3807     		.2byte	0x738
 1366 0315 00000000 		.4byte	.LFB15
 1367 0319 10000000 		.4byte	.LFE15-.LFB15
 1368 031d 01       		.uleb128 0x1
 1369 031e 9C       		.byte	0x9c
 1370 031f 34030000 		.4byte	0x334
 1371 0323 0C       		.uleb128 0xc
 1372 0324 29040000 		.4byte	.LASF35
 1373 0328 01       		.byte	0x1
 1374 0329 3807     		.2byte	0x738
 1375 032b 6B000000 		.4byte	0x6b
 1376 032f 00010000 		.4byte	.LLST8
 1377 0333 00       		.byte	0
 1378 0334 06       		.uleb128 0x6
 1379 0335 9F040000 		.4byte	.LASF36
 1380 0339 01       		.byte	0x1
 1381 033a 2303     		.2byte	0x323
 1382 033c 00000000 		.4byte	.LFB5
 1383 0340 2C000000 		.4byte	.LFE5-.LFB5
 1384 0344 01       		.uleb128 0x1
 1385 0345 9C       		.byte	0x9c
 1386 0346 7A030000 		.4byte	0x37a
 1387 034a 0C       		.uleb128 0xc
 1388 034b 60030000 		.4byte	.LASF37
 1389 034f 01       		.byte	0x1
 1390 0350 2303     		.2byte	0x323
 1391 0352 6B000000 		.4byte	0x6b
 1392 0356 3C010000 		.4byte	.LLST9
 1393 035a 0F       		.uleb128 0xf
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 61


 1394 035b 98040000 		.4byte	.LASF38
 1395 035f 01       		.byte	0x1
 1396 0360 2503     		.2byte	0x325
 1397 0362 6B000000 		.4byte	0x6b
 1398 0366 00       		.byte	0
 1399 0367 08       		.uleb128 0x8
 1400 0368 0E000000 		.4byte	.LVL38
 1401 036c B9070000 		.4byte	0x7b9
 1402 0370 08       		.uleb128 0x8
 1403 0371 1C000000 		.4byte	.LVL39
 1404 0375 0D030000 		.4byte	0x30d
 1405 0379 00       		.byte	0
 1406 037a 06       		.uleb128 0x6
 1407 037b 07060000 		.4byte	.LASF39
 1408 037f 01       		.byte	0x1
 1409 0380 8205     		.2byte	0x582
 1410 0382 00000000 		.4byte	.LFB13
 1411 0386 34000000 		.4byte	.LFE13-.LFB13
 1412 038a 01       		.uleb128 0x1
 1413 038b 9C       		.byte	0x9c
 1414 038c C5030000 		.4byte	0x3c5
 1415 0390 0C       		.uleb128 0xc
 1416 0391 3F030000 		.4byte	.LASF25
 1417 0395 01       		.byte	0x1
 1418 0396 8205     		.2byte	0x582
 1419 0398 6B000000 		.4byte	0x6b
 1420 039c 5D010000 		.4byte	.LLST10
 1421 03a0 11       		.uleb128 0x11
 1422 03a1 08000000 		.4byte	.LVL41
 1423 03a5 34030000 		.4byte	0x334
 1424 03a9 B4030000 		.4byte	0x3b4
 1425 03ad 0A       		.uleb128 0xa
 1426 03ae 01       		.uleb128 0x1
 1427 03af 50       		.byte	0x50
 1428 03b0 02       		.uleb128 0x2
 1429 03b1 75       		.byte	0x75
 1430 03b2 00       		.sleb128 0
 1431 03b3 00       		.byte	0
 1432 03b4 09       		.uleb128 0x9
 1433 03b5 22000000 		.4byte	.LVL42
 1434 03b9 CA010000 		.4byte	0x1ca
 1435 03bd 0A       		.uleb128 0xa
 1436 03be 01       		.uleb128 0x1
 1437 03bf 50       		.byte	0x50
 1438 03c0 02       		.uleb128 0x2
 1439 03c1 75       		.byte	0x75
 1440 03c2 00       		.sleb128 0
 1441 03c3 00       		.byte	0
 1442 03c4 00       		.byte	0
 1443 03c5 06       		.uleb128 0x6
 1444 03c6 13020000 		.4byte	.LASF40
 1445 03ca 01       		.byte	0x1
 1446 03cb 9303     		.2byte	0x393
 1447 03cd 00000000 		.4byte	.LFB6
 1448 03d1 20000000 		.4byte	.LFE6-.LFB6
 1449 03d5 01       		.uleb128 0x1
 1450 03d6 9C       		.byte	0x9c
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 62


 1451 03d7 F5030000 		.4byte	0x3f5
 1452 03db 0C       		.uleb128 0xc
 1453 03dc 3F030000 		.4byte	.LASF25
 1454 03e0 01       		.byte	0x1
 1455 03e1 9303     		.2byte	0x393
 1456 03e3 6B000000 		.4byte	0x6b
 1457 03e7 7E010000 		.4byte	.LLST11
 1458 03eb 08       		.uleb128 0x8
 1459 03ec 14000000 		.4byte	.LVL44
 1460 03f0 7A030000 		.4byte	0x37a
 1461 03f4 00       		.byte	0
 1462 03f5 06       		.uleb128 0x6
 1463 03f6 39060000 		.4byte	.LASF41
 1464 03fa 01       		.byte	0x1
 1465 03fb E003     		.2byte	0x3e0
 1466 03fd 00000000 		.4byte	.LFB7
 1467 0401 38000000 		.4byte	.LFE7-.LFB7
 1468 0405 01       		.uleb128 0x1
 1469 0406 9C       		.byte	0x9c
 1470 0407 1E040000 		.4byte	0x41e
 1471 040b 08       		.uleb128 0x8
 1472 040c 14000000 		.4byte	.LVL45
 1473 0410 40010000 		.4byte	0x140
 1474 0414 08       		.uleb128 0x8
 1475 0415 2E000000 		.4byte	.LVL46
 1476 0419 7A030000 		.4byte	0x37a
 1477 041d 00       		.byte	0
 1478 041e 0B       		.uleb128 0xb
 1479 041f BC040000 		.4byte	.LASF42
 1480 0423 01       		.byte	0x1
 1481 0424 5507     		.2byte	0x755
 1482 0426 6B000000 		.4byte	0x6b
 1483 042a 00000000 		.4byte	.LFB16
 1484 042e 0C000000 		.4byte	.LFE16-.LFB16
 1485 0432 01       		.uleb128 0x1
 1486 0433 9C       		.byte	0x9c
 1487 0434 49040000 		.4byte	0x449
 1488 0438 07       		.uleb128 0x7
 1489 0439 29040000 		.4byte	.LASF35
 1490 043d 01       		.byte	0x1
 1491 043e 5707     		.2byte	0x757
 1492 0440 6B000000 		.4byte	0x6b
 1493 0444 9F010000 		.4byte	.LLST12
 1494 0448 00       		.byte	0
 1495 0449 06       		.uleb128 0x6
 1496 044a 7D050000 		.4byte	.LASF43
 1497 044e 01       		.byte	0x1
 1498 044f 7707     		.2byte	0x777
 1499 0451 00000000 		.4byte	.LFB17
 1500 0455 0C000000 		.4byte	.LFE17-.LFB17
 1501 0459 01       		.uleb128 0x1
 1502 045a 9C       		.byte	0x9c
 1503 045b 6E040000 		.4byte	0x46e
 1504 045f 12       		.uleb128 0x12
 1505 0460 CE030000 		.4byte	.LASF44
 1506 0464 01       		.byte	0x1
 1507 0465 7707     		.2byte	0x777
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 63


 1508 0467 6B000000 		.4byte	0x6b
 1509 046b 01       		.uleb128 0x1
 1510 046c 50       		.byte	0x50
 1511 046d 00       		.byte	0
 1512 046e 06       		.uleb128 0x6
 1513 046f 1C010000 		.4byte	.LASF45
 1514 0473 01       		.byte	0x1
 1515 0474 9207     		.2byte	0x792
 1516 0476 00000000 		.4byte	.LFB18
 1517 047a 20000000 		.4byte	.LFE18-.LFB18
 1518 047e 01       		.uleb128 0x1
 1519 047f 9C       		.byte	0x9c
 1520 0480 93040000 		.4byte	0x493
 1521 0484 13       		.uleb128 0x13
 1522 0485 73726300 		.ascii	"src\000"
 1523 0489 01       		.byte	0x1
 1524 048a 9207     		.2byte	0x792
 1525 048c 6B000000 		.4byte	0x6b
 1526 0490 01       		.uleb128 0x1
 1527 0491 50       		.byte	0x50
 1528 0492 00       		.byte	0
 1529 0493 14       		.uleb128 0x14
 1530 0494 18060000 		.4byte	.LASF46
 1531 0498 01       		.byte	0x1
 1532 0499 60       		.byte	0x60
 1533 049a 00000000 		.4byte	.LFB0
 1534 049e F0000000 		.4byte	.LFE0-.LFB0
 1535 04a2 01       		.uleb128 0x1
 1536 04a3 9C       		.byte	0x9c
 1537 04a4 B2050000 		.4byte	0x5b2
 1538 04a8 15       		.uleb128 0x15
 1539 04a9 C9050000 		.4byte	.LASF20
 1540 04ad 01       		.byte	0x1
 1541 04ae 67       		.byte	0x67
 1542 04af 6B000000 		.4byte	0x6b
 1543 04b3 BE010000 		.4byte	.LLST13
 1544 04b7 08       		.uleb128 0x8
 1545 04b8 06000000 		.4byte	.LVL51
 1546 04bc 5E020000 		.4byte	0x25e
 1547 04c0 11       		.uleb128 0x11
 1548 04c1 0C000000 		.4byte	.LVL52
 1549 04c5 6E040000 		.4byte	0x46e
 1550 04c9 D3040000 		.4byte	0x4d3
 1551 04cd 0A       		.uleb128 0xa
 1552 04ce 01       		.uleb128 0x1
 1553 04cf 50       		.byte	0x50
 1554 04d0 01       		.uleb128 0x1
 1555 04d1 32       		.byte	0x32
 1556 04d2 00       		.byte	0
 1557 04d3 08       		.uleb128 0x8
 1558 04d4 10000000 		.4byte	.LVL53
 1559 04d8 4B070000 		.4byte	0x74b
 1560 04dc 08       		.uleb128 0x8
 1561 04dd 28000000 		.4byte	.LVL54
 1562 04e1 77070000 		.4byte	0x777
 1563 04e5 08       		.uleb128 0x8
 1564 04e6 50000000 		.4byte	.LVL55
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 64


 1565 04ea 4B070000 		.4byte	0x74b
 1566 04ee 08       		.uleb128 0x8
 1567 04ef 68000000 		.4byte	.LVL56
 1568 04f3 77070000 		.4byte	0x777
 1569 04f7 11       		.uleb128 0x11
 1570 04f8 8E000000 		.4byte	.LVL57
 1571 04fc C4070000 		.4byte	0x7c4
 1572 0500 0B050000 		.4byte	0x50b
 1573 0504 0A       		.uleb128 0xa
 1574 0505 01       		.uleb128 0x1
 1575 0506 50       		.byte	0x50
 1576 0507 02       		.uleb128 0x2
 1577 0508 75       		.byte	0x75
 1578 0509 00       		.sleb128 0
 1579 050a 00       		.byte	0
 1580 050b 11       		.uleb128 0x11
 1581 050c 96000000 		.4byte	.LVL58
 1582 0510 CF070000 		.4byte	0x7cf
 1583 0514 25050000 		.4byte	0x525
 1584 0518 0A       		.uleb128 0xa
 1585 0519 01       		.uleb128 0x1
 1586 051a 50       		.byte	0x50
 1587 051b 02       		.uleb128 0x2
 1588 051c 75       		.byte	0x75
 1589 051d 00       		.sleb128 0
 1590 051e 0A       		.uleb128 0xa
 1591 051f 01       		.uleb128 0x1
 1592 0520 51       		.byte	0x51
 1593 0521 02       		.uleb128 0x2
 1594 0522 76       		.byte	0x76
 1595 0523 00       		.sleb128 0
 1596 0524 00       		.byte	0
 1597 0525 08       		.uleb128 0x8
 1598 0526 9A000000 		.4byte	.LVL59
 1599 052a DA070000 		.4byte	0x7da
 1600 052e 11       		.uleb128 0x11
 1601 052f A0000000 		.4byte	.LVL60
 1602 0533 82070000 		.4byte	0x782
 1603 0537 42050000 		.4byte	0x542
 1604 053b 0A       		.uleb128 0xa
 1605 053c 01       		.uleb128 0x1
 1606 053d 50       		.byte	0x50
 1607 053e 02       		.uleb128 0x2
 1608 053f 74       		.byte	0x74
 1609 0540 00       		.sleb128 0
 1610 0541 00       		.byte	0
 1611 0542 11       		.uleb128 0x11
 1612 0543 A6000000 		.4byte	.LVL61
 1613 0547 82070000 		.4byte	0x782
 1614 054b 55050000 		.4byte	0x555
 1615 054f 0A       		.uleb128 0xa
 1616 0550 01       		.uleb128 0x1
 1617 0551 50       		.byte	0x50
 1618 0552 01       		.uleb128 0x1
 1619 0553 32       		.byte	0x32
 1620 0554 00       		.byte	0
 1621 0555 11       		.uleb128 0x11
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 65


 1622 0556 AC000000 		.4byte	.LVL62
 1623 055a 82070000 		.4byte	0x782
 1624 055e 68050000 		.4byte	0x568
 1625 0562 0A       		.uleb128 0xa
 1626 0563 01       		.uleb128 0x1
 1627 0564 50       		.byte	0x50
 1628 0565 01       		.uleb128 0x1
 1629 0566 33       		.byte	0x33
 1630 0567 00       		.byte	0
 1631 0568 08       		.uleb128 0x8
 1632 0569 BA000000 		.4byte	.LVL63
 1633 056d E5070000 		.4byte	0x7e5
 1634 0571 08       		.uleb128 0x8
 1635 0572 BE000000 		.4byte	.LVL64
 1636 0576 F0070000 		.4byte	0x7f0
 1637 057a 11       		.uleb128 0x11
 1638 057b C4000000 		.4byte	.LVL65
 1639 057f FB070000 		.4byte	0x7fb
 1640 0583 8E050000 		.4byte	0x58e
 1641 0587 0A       		.uleb128 0xa
 1642 0588 01       		.uleb128 0x1
 1643 0589 50       		.byte	0x50
 1644 058a 02       		.uleb128 0x2
 1645 058b 75       		.byte	0x75
 1646 058c 00       		.sleb128 0
 1647 058d 00       		.byte	0
 1648 058e 11       		.uleb128 0x11
 1649 058f CA000000 		.4byte	.LVL66
 1650 0593 06080000 		.4byte	0x806
 1651 0597 A1050000 		.4byte	0x5a1
 1652 059b 0A       		.uleb128 0xa
 1653 059c 01       		.uleb128 0x1
 1654 059d 50       		.byte	0x50
 1655 059e 01       		.uleb128 0x1
 1656 059f 34       		.byte	0x34
 1657 05a0 00       		.byte	0
 1658 05a1 09       		.uleb128 0x9
 1659 05a2 D0000000 		.4byte	.LVL67
 1660 05a6 B9070000 		.4byte	0x7b9
 1661 05aa 0A       		.uleb128 0xa
 1662 05ab 01       		.uleb128 0x1
 1663 05ac 50       		.byte	0x50
 1664 05ad 02       		.uleb128 0x2
 1665 05ae 75       		.byte	0x75
 1666 05af 00       		.sleb128 0
 1667 05b0 00       		.byte	0
 1668 05b1 00       		.byte	0
 1669 05b2 06       		.uleb128 0x6
 1670 05b3 A8050000 		.4byte	.LASF47
 1671 05b7 01       		.byte	0x1
 1672 05b8 DA01     		.2byte	0x1da
 1673 05ba 00000000 		.4byte	.LFB2
 1674 05be 2C000000 		.4byte	.LFE2-.LFB2
 1675 05c2 01       		.uleb128 0x1
 1676 05c3 9C       		.byte	0x9c
 1677 05c4 E4050000 		.4byte	0x5e4
 1678 05c8 08       		.uleb128 0x8
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 66


 1679 05c9 0C000000 		.4byte	.LVL68
 1680 05cd 93040000 		.4byte	0x493
 1681 05d1 08       		.uleb128 0x8
 1682 05d2 16000000 		.4byte	.LVL69
 1683 05d6 E5000000 		.4byte	0xe5
 1684 05da 08       		.uleb128 0x8
 1685 05db 1A000000 		.4byte	.LVL70
 1686 05df 11080000 		.4byte	0x811
 1687 05e3 00       		.byte	0
 1688 05e4 16       		.uleb128 0x16
 1689 05e5 4C000000 		.4byte	.LASF48
 1690 05e9 01       		.byte	0x1
 1691 05ea 16       		.byte	0x16
 1692 05eb 6B000000 		.4byte	0x6b
 1693 05ef 05       		.uleb128 0x5
 1694 05f0 03       		.byte	0x3
 1695 05f1 00000000 		.4byte	CapSense_initVar
 1696 05f5 17       		.uleb128 0x17
 1697 05f6 6E000000 		.4byte	.LASF49
 1698 05fa 01       		.byte	0x1
 1699 05fb 1E       		.byte	0x1e
 1700 05fc 6B000000 		.4byte	0x6b
 1701 0600 05       		.uleb128 0x5
 1702 0601 03       		.byte	0x3
 1703 0602 00000000 		.4byte	CapSense_lowLevelTuningDone
 1704 0606 17       		.uleb128 0x17
 1705 0607 07000000 		.4byte	.LASF50
 1706 060b 01       		.byte	0x1
 1707 060c 19       		.byte	0x19
 1708 060d B0000000 		.4byte	0xb0
 1709 0611 05       		.uleb128 0x5
 1710 0612 03       		.byte	0x3
 1711 0613 00000000 		.4byte	CapSense_csv
 1712 0617 17       		.uleb128 0x17
 1713 0618 FE010000 		.4byte	.LASF51
 1714 061c 01       		.byte	0x1
 1715 061d 1A       		.byte	0x1a
 1716 061e B0000000 		.4byte	0xb0
 1717 0622 05       		.uleb128 0x5
 1718 0623 03       		.byte	0x3
 1719 0624 00000000 		.4byte	CapSense_sensorIndex
 1720 0628 18       		.uleb128 0x18
 1721 0629 77000000 		.4byte	0x77
 1722 062d 38060000 		.4byte	0x638
 1723 0631 19       		.uleb128 0x19
 1724 0632 DE000000 		.4byte	0xde
 1725 0636 00       		.byte	0
 1726 0637 00       		.byte	0
 1727 0638 17       		.uleb128 0x17
 1728 0639 26060000 		.4byte	.LASF52
 1729 063d 01       		.byte	0x1
 1730 063e 29       		.byte	0x29
 1731 063f 28060000 		.4byte	0x628
 1732 0643 05       		.uleb128 0x5
 1733 0644 03       		.byte	0x3
 1734 0645 00000000 		.4byte	CapSense_sensorRaw
 1735 0649 18       		.uleb128 0x18
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 67


 1736 064a 6B000000 		.4byte	0x6b
 1737 064e 59060000 		.4byte	0x659
 1738 0652 19       		.uleb128 0x19
 1739 0653 DE000000 		.4byte	0xde
 1740 0657 00       		.byte	0
 1741 0658 00       		.byte	0
 1742 0659 17       		.uleb128 0x17
 1743 065a 46030000 		.4byte	.LASF53
 1744 065e 01       		.byte	0x1
 1745 065f 2B       		.byte	0x2b
 1746 0660 49060000 		.4byte	0x649
 1747 0664 05       		.uleb128 0x5
 1748 0665 03       		.byte	0x3
 1749 0666 00000000 		.4byte	CapSense_sensorEnableMask
 1750 066a 18       		.uleb128 0x18
 1751 066b 80060000 		.4byte	0x680
 1752 066f 7A060000 		.4byte	0x67a
 1753 0673 19       		.uleb128 0x19
 1754 0674 DE000000 		.4byte	0xde
 1755 0678 00       		.byte	0
 1756 0679 00       		.byte	0
 1757 067a 1A       		.uleb128 0x1a
 1758 067b 04       		.byte	0x4
 1759 067c 6B000000 		.4byte	0x6b
 1760 0680 1B       		.uleb128 0x1b
 1761 0681 7A060000 		.4byte	0x67a
 1762 0685 17       		.uleb128 0x17
 1763 0686 5D000000 		.4byte	.LASF54
 1764 068a 01       		.byte	0x1
 1765 068b 2E       		.byte	0x2e
 1766 068c 96060000 		.4byte	0x696
 1767 0690 05       		.uleb128 0x5
 1768 0691 03       		.byte	0x3
 1769 0692 00000000 		.4byte	CapSense_pcTable
 1770 0696 1B       		.uleb128 0x1b
 1771 0697 6A060000 		.4byte	0x66a
 1772 069b 18       		.uleb128 0x18
 1773 069c AB060000 		.4byte	0x6ab
 1774 06a0 AB060000 		.4byte	0x6ab
 1775 06a4 19       		.uleb128 0x19
 1776 06a5 DE000000 		.4byte	0xde
 1777 06a9 00       		.byte	0
 1778 06aa 00       		.byte	0
 1779 06ab 1B       		.uleb128 0x1b
 1780 06ac 6B000000 		.4byte	0x6b
 1781 06b0 17       		.uleb128 0x17
 1782 06b1 89020000 		.4byte	.LASF55
 1783 06b5 01       		.byte	0x1
 1784 06b6 32       		.byte	0x32
 1785 06b7 C1060000 		.4byte	0x6c1
 1786 06bb 05       		.uleb128 0x5
 1787 06bc 03       		.byte	0x3
 1788 06bd 00000000 		.4byte	CapSense_portTable
 1789 06c1 1B       		.uleb128 0x1b
 1790 06c2 9B060000 		.4byte	0x69b
 1791 06c6 17       		.uleb128 0x17
 1792 06c7 76020000 		.4byte	.LASF56
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 68


 1793 06cb 01       		.byte	0x1
 1794 06cc 36       		.byte	0x36
 1795 06cd D7060000 		.4byte	0x6d7
 1796 06d1 05       		.uleb128 0x5
 1797 06d2 03       		.byte	0x3
 1798 06d3 00000000 		.4byte	CapSense_maskTable
 1799 06d7 1B       		.uleb128 0x1b
 1800 06d8 9B060000 		.4byte	0x69b
 1801 06dc 18       		.uleb128 0x18
 1802 06dd 80060000 		.4byte	0x680
 1803 06e1 EC060000 		.4byte	0x6ec
 1804 06e5 19       		.uleb128 0x19
 1805 06e6 DE000000 		.4byte	0xde
 1806 06ea 07       		.byte	0x7
 1807 06eb 00       		.byte	0
 1808 06ec 17       		.uleb128 0x17
 1809 06ed A3030000 		.4byte	.LASF57
 1810 06f1 01       		.byte	0x1
 1811 06f2 3A       		.byte	0x3a
 1812 06f3 FD060000 		.4byte	0x6fd
 1813 06f7 05       		.uleb128 0x5
 1814 06f8 03       		.byte	0x3
 1815 06f9 00000000 		.4byte	CapSense_csTable
 1816 06fd 1B       		.uleb128 0x1b
 1817 06fe DC060000 		.4byte	0x6dc
 1818 0702 17       		.uleb128 0x17
 1819 0703 0D040000 		.4byte	.LASF58
 1820 0707 01       		.byte	0x1
 1821 0708 40       		.byte	0x40
 1822 0709 49060000 		.4byte	0x649
 1823 070d 05       		.uleb128 0x5
 1824 070e 03       		.byte	0x3
 1825 070f 00000000 		.4byte	CapSense_idacSettings
 1826 0713 17       		.uleb128 0x17
 1827 0714 74040000 		.4byte	.LASF59
 1828 0718 01       		.byte	0x1
 1829 0719 44       		.byte	0x44
 1830 071a 49060000 		.4byte	0x649
 1831 071e 05       		.uleb128 0x5
 1832 071f 03       		.byte	0x3
 1833 0720 00000000 		.4byte	CapSense_widgetResolution
 1834 0724 17       		.uleb128 0x17
 1835 0725 7D030000 		.4byte	.LASF60
 1836 0729 01       		.byte	0x1
 1837 072a 48       		.byte	0x48
 1838 072b 49060000 		.4byte	0x649
 1839 072f 05       		.uleb128 0x5
 1840 0730 03       		.byte	0x3
 1841 0731 00000000 		.4byte	CapSense_analogSwitchDivider
 1842 0735 17       		.uleb128 0x17
 1843 0736 9B010000 		.4byte	.LASF61
 1844 073a 01       		.byte	0x1
 1845 073b 49       		.byte	0x49
 1846 073c 46070000 		.4byte	0x746
 1847 0740 05       		.uleb128 0x5
 1848 0741 03       		.byte	0x3
 1849 0742 00000000 		.4byte	CapSense_widgetNumber
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 69


 1850 0746 1B       		.uleb128 0x1b
 1851 0747 9B060000 		.4byte	0x69b
 1852 074b 1C       		.uleb128 0x1c
 1853 074c B4020000 		.4byte	.LASF62
 1854 0750 B4020000 		.4byte	.LASF62
 1855 0754 03       		.byte	0x3
 1856 0755 7D       		.byte	0x7d
 1857 0756 1C       		.uleb128 0x1c
 1858 0757 9C020000 		.4byte	.LASF63
 1859 075b 9C020000 		.4byte	.LASF63
 1860 075f 04       		.byte	0x4
 1861 0760 27       		.byte	0x27
 1862 0761 1C       		.uleb128 0x1c
 1863 0762 C4000000 		.4byte	.LASF64
 1864 0766 C4000000 		.4byte	.LASF64
 1865 076a 05       		.byte	0x5
 1866 076b 46       		.byte	0x46
 1867 076c 1C       		.uleb128 0x1c
 1868 076d 65050000 		.4byte	.LASF65
 1869 0771 65050000 		.4byte	.LASF65
 1870 0775 06       		.byte	0x6
 1871 0776 46       		.byte	0x46
 1872 0777 1C       		.uleb128 0x1c
 1873 0778 14000000 		.4byte	.LASF66
 1874 077c 14000000 		.4byte	.LASF66
 1875 0780 03       		.byte	0x3
 1876 0781 7E       		.byte	0x7e
 1877 0782 1C       		.uleb128 0x1c
 1878 0783 93050000 		.4byte	.LASF67
 1879 0787 93050000 		.4byte	.LASF67
 1880 078b 07       		.byte	0x7
 1881 078c 1A       		.byte	0x1a
 1882 078d 1C       		.uleb128 0x1c
 1883 078e 55060000 		.4byte	.LASF68
 1884 0792 55060000 		.4byte	.LASF68
 1885 0796 07       		.byte	0x7
 1886 0797 1B       		.byte	0x1b
 1887 0798 1C       		.uleb128 0x1c
 1888 0799 DE020000 		.4byte	.LASF69
 1889 079d DE020000 		.4byte	.LASF69
 1890 07a1 04       		.byte	0x4
 1891 07a2 28       		.byte	0x28
 1892 07a3 1C       		.uleb128 0x1c
 1893 07a4 DA050000 		.4byte	.LASF70
 1894 07a8 DA050000 		.4byte	.LASF70
 1895 07ac 05       		.byte	0x5
 1896 07ad 40       		.byte	0x40
 1897 07ae 1C       		.uleb128 0x1c
 1898 07af 85010000 		.4byte	.LASF71
 1899 07b3 85010000 		.4byte	.LASF71
 1900 07b7 06       		.byte	0x6
 1901 07b8 3D       		.byte	0x3d
 1902 07b9 1C       		.uleb128 0x1c
 1903 07ba 8A000000 		.4byte	.LASF72
 1904 07be 8A000000 		.4byte	.LASF72
 1905 07c2 06       		.byte	0x6
 1906 07c3 41       		.byte	0x41
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 70


 1907 07c4 1C       		.uleb128 0x1c
 1908 07c5 CF010000 		.4byte	.LASF73
 1909 07c9 CF010000 		.4byte	.LASF73
 1910 07cd 03       		.byte	0x3
 1911 07ce 88       		.byte	0x88
 1912 07cf 1C       		.uleb128 0x1c
 1913 07d0 FC030000 		.4byte	.LASF74
 1914 07d4 FC030000 		.4byte	.LASF74
 1915 07d8 03       		.byte	0x3
 1916 07d9 8B       		.byte	0x8b
 1917 07da 1C       		.uleb128 0x1c
 1918 07db 52010000 		.4byte	.LASF75
 1919 07df 52010000 		.4byte	.LASF75
 1920 07e3 08       		.byte	0x8
 1921 07e4 1F       		.byte	0x1f
 1922 07e5 1C       		.uleb128 0x1c
 1923 07e6 E3010000 		.4byte	.LASF76
 1924 07ea E3010000 		.4byte	.LASF76
 1925 07ee 05       		.byte	0x5
 1926 07ef 45       		.byte	0x45
 1927 07f0 1C       		.uleb128 0x1c
 1928 07f1 5E040000 		.4byte	.LASF77
 1929 07f5 5E040000 		.4byte	.LASF77
 1930 07f9 06       		.byte	0x6
 1931 07fa 45       		.byte	0x45
 1932 07fb 1C       		.uleb128 0x1c
 1933 07fc DF030000 		.4byte	.LASF78
 1934 0800 DF030000 		.4byte	.LASF78
 1935 0804 06       		.byte	0x6
 1936 0805 3F       		.byte	0x3f
 1937 0806 1C       		.uleb128 0x1c
 1938 0807 4A020000 		.4byte	.LASF79
 1939 080b 4A020000 		.4byte	.LASF79
 1940 080f 06       		.byte	0x6
 1941 0810 40       		.byte	0x40
 1942 0811 1D       		.uleb128 0x1d
 1943 0812 65030000 		.4byte	.LASF80
 1944 0816 65030000 		.4byte	.LASF80
 1945 081a 09       		.byte	0x9
 1946 081b AA02     		.2byte	0x2aa
 1947 081d 00       		.byte	0
 1948              		.section	.debug_abbrev,"",%progbits
 1949              	.Ldebug_abbrev0:
 1950 0000 01       		.uleb128 0x1
 1951 0001 11       		.uleb128 0x11
 1952 0002 01       		.byte	0x1
 1953 0003 25       		.uleb128 0x25
 1954 0004 0E       		.uleb128 0xe
 1955 0005 13       		.uleb128 0x13
 1956 0006 0B       		.uleb128 0xb
 1957 0007 03       		.uleb128 0x3
 1958 0008 0E       		.uleb128 0xe
 1959 0009 1B       		.uleb128 0x1b
 1960 000a 0E       		.uleb128 0xe
 1961 000b 55       		.uleb128 0x55
 1962 000c 17       		.uleb128 0x17
 1963 000d 11       		.uleb128 0x11
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 71


 1964 000e 01       		.uleb128 0x1
 1965 000f 10       		.uleb128 0x10
 1966 0010 17       		.uleb128 0x17
 1967 0011 00       		.byte	0
 1968 0012 00       		.byte	0
 1969 0013 02       		.uleb128 0x2
 1970 0014 24       		.uleb128 0x24
 1971 0015 00       		.byte	0
 1972 0016 0B       		.uleb128 0xb
 1973 0017 0B       		.uleb128 0xb
 1974 0018 3E       		.uleb128 0x3e
 1975 0019 0B       		.uleb128 0xb
 1976 001a 03       		.uleb128 0x3
 1977 001b 0E       		.uleb128 0xe
 1978 001c 00       		.byte	0
 1979 001d 00       		.byte	0
 1980 001e 03       		.uleb128 0x3
 1981 001f 24       		.uleb128 0x24
 1982 0020 00       		.byte	0
 1983 0021 0B       		.uleb128 0xb
 1984 0022 0B       		.uleb128 0xb
 1985 0023 3E       		.uleb128 0x3e
 1986 0024 0B       		.uleb128 0xb
 1987 0025 03       		.uleb128 0x3
 1988 0026 08       		.uleb128 0x8
 1989 0027 00       		.byte	0
 1990 0028 00       		.byte	0
 1991 0029 04       		.uleb128 0x4
 1992 002a 16       		.uleb128 0x16
 1993 002b 00       		.byte	0
 1994 002c 03       		.uleb128 0x3
 1995 002d 0E       		.uleb128 0xe
 1996 002e 3A       		.uleb128 0x3a
 1997 002f 0B       		.uleb128 0xb
 1998 0030 3B       		.uleb128 0x3b
 1999 0031 05       		.uleb128 0x5
 2000 0032 49       		.uleb128 0x49
 2001 0033 13       		.uleb128 0x13
 2002 0034 00       		.byte	0
 2003 0035 00       		.byte	0
 2004 0036 05       		.uleb128 0x5
 2005 0037 35       		.uleb128 0x35
 2006 0038 00       		.byte	0
 2007 0039 49       		.uleb128 0x49
 2008 003a 13       		.uleb128 0x13
 2009 003b 00       		.byte	0
 2010 003c 00       		.byte	0
 2011 003d 06       		.uleb128 0x6
 2012 003e 2E       		.uleb128 0x2e
 2013 003f 01       		.byte	0x1
 2014 0040 3F       		.uleb128 0x3f
 2015 0041 19       		.uleb128 0x19
 2016 0042 03       		.uleb128 0x3
 2017 0043 0E       		.uleb128 0xe
 2018 0044 3A       		.uleb128 0x3a
 2019 0045 0B       		.uleb128 0xb
 2020 0046 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 72


 2021 0047 05       		.uleb128 0x5
 2022 0048 27       		.uleb128 0x27
 2023 0049 19       		.uleb128 0x19
 2024 004a 11       		.uleb128 0x11
 2025 004b 01       		.uleb128 0x1
 2026 004c 12       		.uleb128 0x12
 2027 004d 06       		.uleb128 0x6
 2028 004e 40       		.uleb128 0x40
 2029 004f 18       		.uleb128 0x18
 2030 0050 9742     		.uleb128 0x2117
 2031 0052 19       		.uleb128 0x19
 2032 0053 01       		.uleb128 0x1
 2033 0054 13       		.uleb128 0x13
 2034 0055 00       		.byte	0
 2035 0056 00       		.byte	0
 2036 0057 07       		.uleb128 0x7
 2037 0058 34       		.uleb128 0x34
 2038 0059 00       		.byte	0
 2039 005a 03       		.uleb128 0x3
 2040 005b 0E       		.uleb128 0xe
 2041 005c 3A       		.uleb128 0x3a
 2042 005d 0B       		.uleb128 0xb
 2043 005e 3B       		.uleb128 0x3b
 2044 005f 05       		.uleb128 0x5
 2045 0060 49       		.uleb128 0x49
 2046 0061 13       		.uleb128 0x13
 2047 0062 02       		.uleb128 0x2
 2048 0063 17       		.uleb128 0x17
 2049 0064 00       		.byte	0
 2050 0065 00       		.byte	0
 2051 0066 08       		.uleb128 0x8
 2052 0067 898201   		.uleb128 0x4109
 2053 006a 00       		.byte	0
 2054 006b 11       		.uleb128 0x11
 2055 006c 01       		.uleb128 0x1
 2056 006d 31       		.uleb128 0x31
 2057 006e 13       		.uleb128 0x13
 2058 006f 00       		.byte	0
 2059 0070 00       		.byte	0
 2060 0071 09       		.uleb128 0x9
 2061 0072 898201   		.uleb128 0x4109
 2062 0075 01       		.byte	0x1
 2063 0076 11       		.uleb128 0x11
 2064 0077 01       		.uleb128 0x1
 2065 0078 31       		.uleb128 0x31
 2066 0079 13       		.uleb128 0x13
 2067 007a 00       		.byte	0
 2068 007b 00       		.byte	0
 2069 007c 0A       		.uleb128 0xa
 2070 007d 8A8201   		.uleb128 0x410a
 2071 0080 00       		.byte	0
 2072 0081 02       		.uleb128 0x2
 2073 0082 18       		.uleb128 0x18
 2074 0083 9142     		.uleb128 0x2111
 2075 0085 18       		.uleb128 0x18
 2076 0086 00       		.byte	0
 2077 0087 00       		.byte	0
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 73


 2078 0088 0B       		.uleb128 0xb
 2079 0089 2E       		.uleb128 0x2e
 2080 008a 01       		.byte	0x1
 2081 008b 3F       		.uleb128 0x3f
 2082 008c 19       		.uleb128 0x19
 2083 008d 03       		.uleb128 0x3
 2084 008e 0E       		.uleb128 0xe
 2085 008f 3A       		.uleb128 0x3a
 2086 0090 0B       		.uleb128 0xb
 2087 0091 3B       		.uleb128 0x3b
 2088 0092 05       		.uleb128 0x5
 2089 0093 27       		.uleb128 0x27
 2090 0094 19       		.uleb128 0x19
 2091 0095 49       		.uleb128 0x49
 2092 0096 13       		.uleb128 0x13
 2093 0097 11       		.uleb128 0x11
 2094 0098 01       		.uleb128 0x1
 2095 0099 12       		.uleb128 0x12
 2096 009a 06       		.uleb128 0x6
 2097 009b 40       		.uleb128 0x40
 2098 009c 18       		.uleb128 0x18
 2099 009d 9742     		.uleb128 0x2117
 2100 009f 19       		.uleb128 0x19
 2101 00a0 01       		.uleb128 0x1
 2102 00a1 13       		.uleb128 0x13
 2103 00a2 00       		.byte	0
 2104 00a3 00       		.byte	0
 2105 00a4 0C       		.uleb128 0xc
 2106 00a5 05       		.uleb128 0x5
 2107 00a6 00       		.byte	0
 2108 00a7 03       		.uleb128 0x3
 2109 00a8 0E       		.uleb128 0xe
 2110 00a9 3A       		.uleb128 0x3a
 2111 00aa 0B       		.uleb128 0xb
 2112 00ab 3B       		.uleb128 0x3b
 2113 00ac 05       		.uleb128 0x5
 2114 00ad 49       		.uleb128 0x49
 2115 00ae 13       		.uleb128 0x13
 2116 00af 02       		.uleb128 0x2
 2117 00b0 17       		.uleb128 0x17
 2118 00b1 00       		.byte	0
 2119 00b2 00       		.byte	0
 2120 00b3 0D       		.uleb128 0xd
 2121 00b4 34       		.uleb128 0x34
 2122 00b5 00       		.byte	0
 2123 00b6 03       		.uleb128 0x3
 2124 00b7 08       		.uleb128 0x8
 2125 00b8 3A       		.uleb128 0x3a
 2126 00b9 0B       		.uleb128 0xb
 2127 00ba 3B       		.uleb128 0x3b
 2128 00bb 05       		.uleb128 0x5
 2129 00bc 49       		.uleb128 0x49
 2130 00bd 13       		.uleb128 0x13
 2131 00be 02       		.uleb128 0x2
 2132 00bf 18       		.uleb128 0x18
 2133 00c0 00       		.byte	0
 2134 00c1 00       		.byte	0
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 74


 2135 00c2 0E       		.uleb128 0xe
 2136 00c3 2E       		.uleb128 0x2e
 2137 00c4 00       		.byte	0
 2138 00c5 3F       		.uleb128 0x3f
 2139 00c6 19       		.uleb128 0x19
 2140 00c7 03       		.uleb128 0x3
 2141 00c8 0E       		.uleb128 0xe
 2142 00c9 3A       		.uleb128 0x3a
 2143 00ca 0B       		.uleb128 0xb
 2144 00cb 3B       		.uleb128 0x3b
 2145 00cc 05       		.uleb128 0x5
 2146 00cd 27       		.uleb128 0x27
 2147 00ce 19       		.uleb128 0x19
 2148 00cf 49       		.uleb128 0x49
 2149 00d0 13       		.uleb128 0x13
 2150 00d1 11       		.uleb128 0x11
 2151 00d2 01       		.uleb128 0x1
 2152 00d3 12       		.uleb128 0x12
 2153 00d4 06       		.uleb128 0x6
 2154 00d5 40       		.uleb128 0x40
 2155 00d6 18       		.uleb128 0x18
 2156 00d7 9742     		.uleb128 0x2117
 2157 00d9 19       		.uleb128 0x19
 2158 00da 00       		.byte	0
 2159 00db 00       		.byte	0
 2160 00dc 0F       		.uleb128 0xf
 2161 00dd 34       		.uleb128 0x34
 2162 00de 00       		.byte	0
 2163 00df 03       		.uleb128 0x3
 2164 00e0 0E       		.uleb128 0xe
 2165 00e1 3A       		.uleb128 0x3a
 2166 00e2 0B       		.uleb128 0xb
 2167 00e3 3B       		.uleb128 0x3b
 2168 00e4 05       		.uleb128 0x5
 2169 00e5 49       		.uleb128 0x49
 2170 00e6 13       		.uleb128 0x13
 2171 00e7 1C       		.uleb128 0x1c
 2172 00e8 0B       		.uleb128 0xb
 2173 00e9 00       		.byte	0
 2174 00ea 00       		.byte	0
 2175 00eb 10       		.uleb128 0x10
 2176 00ec 34       		.uleb128 0x34
 2177 00ed 00       		.byte	0
 2178 00ee 03       		.uleb128 0x3
 2179 00ef 08       		.uleb128 0x8
 2180 00f0 3A       		.uleb128 0x3a
 2181 00f1 0B       		.uleb128 0xb
 2182 00f2 3B       		.uleb128 0x3b
 2183 00f3 05       		.uleb128 0x5
 2184 00f4 49       		.uleb128 0x49
 2185 00f5 13       		.uleb128 0x13
 2186 00f6 02       		.uleb128 0x2
 2187 00f7 17       		.uleb128 0x17
 2188 00f8 00       		.byte	0
 2189 00f9 00       		.byte	0
 2190 00fa 11       		.uleb128 0x11
 2191 00fb 898201   		.uleb128 0x4109
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 75


 2192 00fe 01       		.byte	0x1
 2193 00ff 11       		.uleb128 0x11
 2194 0100 01       		.uleb128 0x1
 2195 0101 31       		.uleb128 0x31
 2196 0102 13       		.uleb128 0x13
 2197 0103 01       		.uleb128 0x1
 2198 0104 13       		.uleb128 0x13
 2199 0105 00       		.byte	0
 2200 0106 00       		.byte	0
 2201 0107 12       		.uleb128 0x12
 2202 0108 05       		.uleb128 0x5
 2203 0109 00       		.byte	0
 2204 010a 03       		.uleb128 0x3
 2205 010b 0E       		.uleb128 0xe
 2206 010c 3A       		.uleb128 0x3a
 2207 010d 0B       		.uleb128 0xb
 2208 010e 3B       		.uleb128 0x3b
 2209 010f 05       		.uleb128 0x5
 2210 0110 49       		.uleb128 0x49
 2211 0111 13       		.uleb128 0x13
 2212 0112 02       		.uleb128 0x2
 2213 0113 18       		.uleb128 0x18
 2214 0114 00       		.byte	0
 2215 0115 00       		.byte	0
 2216 0116 13       		.uleb128 0x13
 2217 0117 05       		.uleb128 0x5
 2218 0118 00       		.byte	0
 2219 0119 03       		.uleb128 0x3
 2220 011a 08       		.uleb128 0x8
 2221 011b 3A       		.uleb128 0x3a
 2222 011c 0B       		.uleb128 0xb
 2223 011d 3B       		.uleb128 0x3b
 2224 011e 05       		.uleb128 0x5
 2225 011f 49       		.uleb128 0x49
 2226 0120 13       		.uleb128 0x13
 2227 0121 02       		.uleb128 0x2
 2228 0122 18       		.uleb128 0x18
 2229 0123 00       		.byte	0
 2230 0124 00       		.byte	0
 2231 0125 14       		.uleb128 0x14
 2232 0126 2E       		.uleb128 0x2e
 2233 0127 01       		.byte	0x1
 2234 0128 3F       		.uleb128 0x3f
 2235 0129 19       		.uleb128 0x19
 2236 012a 03       		.uleb128 0x3
 2237 012b 0E       		.uleb128 0xe
 2238 012c 3A       		.uleb128 0x3a
 2239 012d 0B       		.uleb128 0xb
 2240 012e 3B       		.uleb128 0x3b
 2241 012f 0B       		.uleb128 0xb
 2242 0130 27       		.uleb128 0x27
 2243 0131 19       		.uleb128 0x19
 2244 0132 11       		.uleb128 0x11
 2245 0133 01       		.uleb128 0x1
 2246 0134 12       		.uleb128 0x12
 2247 0135 06       		.uleb128 0x6
 2248 0136 40       		.uleb128 0x40
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 76


 2249 0137 18       		.uleb128 0x18
 2250 0138 9742     		.uleb128 0x2117
 2251 013a 19       		.uleb128 0x19
 2252 013b 01       		.uleb128 0x1
 2253 013c 13       		.uleb128 0x13
 2254 013d 00       		.byte	0
 2255 013e 00       		.byte	0
 2256 013f 15       		.uleb128 0x15
 2257 0140 34       		.uleb128 0x34
 2258 0141 00       		.byte	0
 2259 0142 03       		.uleb128 0x3
 2260 0143 0E       		.uleb128 0xe
 2261 0144 3A       		.uleb128 0x3a
 2262 0145 0B       		.uleb128 0xb
 2263 0146 3B       		.uleb128 0x3b
 2264 0147 0B       		.uleb128 0xb
 2265 0148 49       		.uleb128 0x49
 2266 0149 13       		.uleb128 0x13
 2267 014a 02       		.uleb128 0x2
 2268 014b 17       		.uleb128 0x17
 2269 014c 00       		.byte	0
 2270 014d 00       		.byte	0
 2271 014e 16       		.uleb128 0x16
 2272 014f 34       		.uleb128 0x34
 2273 0150 00       		.byte	0
 2274 0151 03       		.uleb128 0x3
 2275 0152 0E       		.uleb128 0xe
 2276 0153 3A       		.uleb128 0x3a
 2277 0154 0B       		.uleb128 0xb
 2278 0155 3B       		.uleb128 0x3b
 2279 0156 0B       		.uleb128 0xb
 2280 0157 49       		.uleb128 0x49
 2281 0158 13       		.uleb128 0x13
 2282 0159 02       		.uleb128 0x2
 2283 015a 18       		.uleb128 0x18
 2284 015b 00       		.byte	0
 2285 015c 00       		.byte	0
 2286 015d 17       		.uleb128 0x17
 2287 015e 34       		.uleb128 0x34
 2288 015f 00       		.byte	0
 2289 0160 03       		.uleb128 0x3
 2290 0161 0E       		.uleb128 0xe
 2291 0162 3A       		.uleb128 0x3a
 2292 0163 0B       		.uleb128 0xb
 2293 0164 3B       		.uleb128 0x3b
 2294 0165 0B       		.uleb128 0xb
 2295 0166 49       		.uleb128 0x49
 2296 0167 13       		.uleb128 0x13
 2297 0168 3F       		.uleb128 0x3f
 2298 0169 19       		.uleb128 0x19
 2299 016a 02       		.uleb128 0x2
 2300 016b 18       		.uleb128 0x18
 2301 016c 00       		.byte	0
 2302 016d 00       		.byte	0
 2303 016e 18       		.uleb128 0x18
 2304 016f 01       		.uleb128 0x1
 2305 0170 01       		.byte	0x1
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 77


 2306 0171 49       		.uleb128 0x49
 2307 0172 13       		.uleb128 0x13
 2308 0173 01       		.uleb128 0x1
 2309 0174 13       		.uleb128 0x13
 2310 0175 00       		.byte	0
 2311 0176 00       		.byte	0
 2312 0177 19       		.uleb128 0x19
 2313 0178 21       		.uleb128 0x21
 2314 0179 00       		.byte	0
 2315 017a 49       		.uleb128 0x49
 2316 017b 13       		.uleb128 0x13
 2317 017c 2F       		.uleb128 0x2f
 2318 017d 0B       		.uleb128 0xb
 2319 017e 00       		.byte	0
 2320 017f 00       		.byte	0
 2321 0180 1A       		.uleb128 0x1a
 2322 0181 0F       		.uleb128 0xf
 2323 0182 00       		.byte	0
 2324 0183 0B       		.uleb128 0xb
 2325 0184 0B       		.uleb128 0xb
 2326 0185 49       		.uleb128 0x49
 2327 0186 13       		.uleb128 0x13
 2328 0187 00       		.byte	0
 2329 0188 00       		.byte	0
 2330 0189 1B       		.uleb128 0x1b
 2331 018a 26       		.uleb128 0x26
 2332 018b 00       		.byte	0
 2333 018c 49       		.uleb128 0x49
 2334 018d 13       		.uleb128 0x13
 2335 018e 00       		.byte	0
 2336 018f 00       		.byte	0
 2337 0190 1C       		.uleb128 0x1c
 2338 0191 2E       		.uleb128 0x2e
 2339 0192 00       		.byte	0
 2340 0193 3F       		.uleb128 0x3f
 2341 0194 19       		.uleb128 0x19
 2342 0195 3C       		.uleb128 0x3c
 2343 0196 19       		.uleb128 0x19
 2344 0197 6E       		.uleb128 0x6e
 2345 0198 0E       		.uleb128 0xe
 2346 0199 03       		.uleb128 0x3
 2347 019a 0E       		.uleb128 0xe
 2348 019b 3A       		.uleb128 0x3a
 2349 019c 0B       		.uleb128 0xb
 2350 019d 3B       		.uleb128 0x3b
 2351 019e 0B       		.uleb128 0xb
 2352 019f 00       		.byte	0
 2353 01a0 00       		.byte	0
 2354 01a1 1D       		.uleb128 0x1d
 2355 01a2 2E       		.uleb128 0x2e
 2356 01a3 00       		.byte	0
 2357 01a4 3F       		.uleb128 0x3f
 2358 01a5 19       		.uleb128 0x19
 2359 01a6 3C       		.uleb128 0x3c
 2360 01a7 19       		.uleb128 0x19
 2361 01a8 6E       		.uleb128 0x6e
 2362 01a9 0E       		.uleb128 0xe
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 78


 2363 01aa 03       		.uleb128 0x3
 2364 01ab 0E       		.uleb128 0xe
 2365 01ac 3A       		.uleb128 0x3a
 2366 01ad 0B       		.uleb128 0xb
 2367 01ae 3B       		.uleb128 0x3b
 2368 01af 05       		.uleb128 0x5
 2369 01b0 00       		.byte	0
 2370 01b1 00       		.byte	0
 2371 01b2 00       		.byte	0
 2372              		.section	.debug_loc,"",%progbits
 2373              	.Ldebug_loc0:
 2374              	.LLST0:
 2375 0000 08000000 		.4byte	.LVL1
 2376 0004 58000000 		.4byte	.LVL6
 2377 0008 0100     		.2byte	0x1
 2378 000a 54       		.byte	0x54
 2379 000b 00000000 		.4byte	0
 2380 000f 00000000 		.4byte	0
 2381              	.LLST1:
 2382 0013 00000000 		.4byte	.LVL7
 2383 0017 00000000 		.4byte	.LVL7
 2384 001b 0100     		.2byte	0x1
 2385 001d 50       		.byte	0x50
 2386 001e 00000000 		.4byte	.LVL7
 2387 0022 04000000 		.4byte	.LVL8
 2388 0026 0400     		.2byte	0x4
 2389 0028 F3       		.byte	0xf3
 2390 0029 01       		.uleb128 0x1
 2391 002a 50       		.byte	0x50
 2392 002b 9F       		.byte	0x9f
 2393 002c 04000000 		.4byte	.LVL8
 2394 0030 20000000 		.4byte	.LFE4
 2395 0034 0100     		.2byte	0x1
 2396 0036 50       		.byte	0x50
 2397 0037 00000000 		.4byte	0
 2398 003b 00000000 		.4byte	0
 2399              	.LLST2:
 2400 003f 12000000 		.4byte	.LVL9
 2401 0043 1A000000 		.4byte	.LVL10
 2402 0047 0100     		.2byte	0x1
 2403 0049 53       		.byte	0x53
 2404 004a 00000000 		.4byte	0
 2405 004e 00000000 		.4byte	0
 2406              	.LLST3:
 2407 0052 00000000 		.4byte	.LVL11
 2408 0056 06000000 		.4byte	.LVL12
 2409 005a 0100     		.2byte	0x1
 2410 005c 50       		.byte	0x50
 2411 005d 06000000 		.4byte	.LVL12
 2412 0061 0C000000 		.4byte	.LFE9
 2413 0065 0400     		.2byte	0x4
 2414 0067 F3       		.byte	0xf3
 2415 0068 01       		.uleb128 0x1
 2416 0069 50       		.byte	0x50
 2417 006a 9F       		.byte	0x9f
 2418 006b 00000000 		.4byte	0
 2419 006f 00000000 		.4byte	0
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 79


 2420              	.LLST4:
 2421 0073 00000000 		.4byte	.LVL13
 2422 0077 0B000000 		.4byte	.LVL15-1
 2423 007b 0100     		.2byte	0x1
 2424 007d 50       		.byte	0x50
 2425 007e 0B000000 		.4byte	.LVL15-1
 2426 0082 0E000000 		.4byte	.LFE11
 2427 0086 0400     		.2byte	0x4
 2428 0088 F3       		.byte	0xf3
 2429 0089 01       		.uleb128 0x1
 2430 008a 50       		.byte	0x50
 2431 008b 9F       		.byte	0x9f
 2432 008c 00000000 		.4byte	0
 2433 0090 00000000 		.4byte	0
 2434              	.LLST5:
 2435 0094 00000000 		.4byte	.LVL16
 2436 0098 05000000 		.4byte	.LVL18-1
 2437 009c 0100     		.2byte	0x1
 2438 009e 50       		.byte	0x50
 2439 009f 05000000 		.4byte	.LVL18-1
 2440 00a3 0E000000 		.4byte	.LFE12
 2441 00a7 0400     		.2byte	0x4
 2442 00a9 F3       		.byte	0xf3
 2443 00aa 01       		.uleb128 0x1
 2444 00ab 50       		.byte	0x50
 2445 00ac 9F       		.byte	0x9f
 2446 00ad 00000000 		.4byte	0
 2447 00b1 00000000 		.4byte	0
 2448              	.LLST6:
 2449 00b5 02000000 		.4byte	.LVL19
 2450 00b9 06000000 		.4byte	.LVL20
 2451 00bd 0200     		.2byte	0x2
 2452 00bf 30       		.byte	0x30
 2453 00c0 9F       		.byte	0x9f
 2454 00c1 06000000 		.4byte	.LVL20
 2455 00c5 0E000000 		.4byte	.LVL22
 2456 00c9 0100     		.2byte	0x1
 2457 00cb 54       		.byte	0x54
 2458 00cc 10000000 		.4byte	.LVL23
 2459 00d0 16000000 		.4byte	.LFE10
 2460 00d4 0100     		.2byte	0x1
 2461 00d6 54       		.byte	0x54
 2462 00d7 00000000 		.4byte	0
 2463 00db 00000000 		.4byte	0
 2464              	.LLST7:
 2465 00df 00000000 		.4byte	.LVL28
 2466 00e3 27000000 		.4byte	.LVL29-1
 2467 00e7 0100     		.2byte	0x1
 2468 00e9 50       		.byte	0x50
 2469 00ea 27000000 		.4byte	.LVL29-1
 2470 00ee 4C000000 		.4byte	.LFE14
 2471 00f2 0400     		.2byte	0x4
 2472 00f4 F3       		.byte	0xf3
 2473 00f5 01       		.uleb128 0x1
 2474 00f6 50       		.byte	0x50
 2475 00f7 9F       		.byte	0x9f
 2476 00f8 00000000 		.4byte	0
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 80


 2477 00fc 00000000 		.4byte	0
 2478              	.LLST8:
 2479 0100 00000000 		.4byte	.LVL31
 2480 0104 06000000 		.4byte	.LVL32
 2481 0108 0100     		.2byte	0x1
 2482 010a 50       		.byte	0x50
 2483 010b 06000000 		.4byte	.LVL32
 2484 010f 08000000 		.4byte	.LVL33
 2485 0113 0200     		.2byte	0x2
 2486 0115 73       		.byte	0x73
 2487 0116 00       		.sleb128 0
 2488 0117 08000000 		.4byte	.LVL33
 2489 011b 0A000000 		.4byte	.LVL34
 2490 011f 0500     		.2byte	0x5
 2491 0121 0C       		.byte	0xc
 2492 0122 2D640040 		.4byte	0x4000642d
 2493 0126 0A000000 		.4byte	.LVL34
 2494 012a 10000000 		.4byte	.LFE15
 2495 012e 0400     		.2byte	0x4
 2496 0130 F3       		.byte	0xf3
 2497 0131 01       		.uleb128 0x1
 2498 0132 50       		.byte	0x50
 2499 0133 9F       		.byte	0x9f
 2500 0134 00000000 		.4byte	0
 2501 0138 00000000 		.4byte	0
 2502              	.LLST9:
 2503 013c 00000000 		.4byte	.LVL35
 2504 0140 0A000000 		.4byte	.LVL37
 2505 0144 0100     		.2byte	0x1
 2506 0146 50       		.byte	0x50
 2507 0147 0A000000 		.4byte	.LVL37
 2508 014b 2C000000 		.4byte	.LFE5
 2509 014f 0400     		.2byte	0x4
 2510 0151 F3       		.byte	0xf3
 2511 0152 01       		.uleb128 0x1
 2512 0153 50       		.byte	0x50
 2513 0154 9F       		.byte	0x9f
 2514 0155 00000000 		.4byte	0
 2515 0159 00000000 		.4byte	0
 2516              	.LLST10:
 2517 015d 00000000 		.4byte	.LVL40
 2518 0161 07000000 		.4byte	.LVL41-1
 2519 0165 0100     		.2byte	0x1
 2520 0167 50       		.byte	0x50
 2521 0168 07000000 		.4byte	.LVL41-1
 2522 016c 34000000 		.4byte	.LFE13
 2523 0170 0400     		.2byte	0x4
 2524 0172 F3       		.byte	0xf3
 2525 0173 01       		.uleb128 0x1
 2526 0174 50       		.byte	0x50
 2527 0175 9F       		.byte	0x9f
 2528 0176 00000000 		.4byte	0
 2529 017a 00000000 		.4byte	0
 2530              	.LLST11:
 2531 017e 00000000 		.4byte	.LVL43
 2532 0182 13000000 		.4byte	.LVL44-1
 2533 0186 0100     		.2byte	0x1
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 81


 2534 0188 50       		.byte	0x50
 2535 0189 13000000 		.4byte	.LVL44-1
 2536 018d 20000000 		.4byte	.LFE6
 2537 0191 0400     		.2byte	0x4
 2538 0193 F3       		.byte	0xf3
 2539 0194 01       		.uleb128 0x1
 2540 0195 50       		.byte	0x50
 2541 0196 9F       		.byte	0x9f
 2542 0197 00000000 		.4byte	0
 2543 019b 00000000 		.4byte	0
 2544              	.LLST12:
 2545 019f 00000000 		.4byte	.LVL47
 2546 01a3 04000000 		.4byte	.LVL48
 2547 01a7 0200     		.2byte	0x2
 2548 01a9 30       		.byte	0x30
 2549 01aa 9F       		.byte	0x9f
 2550 01ab 04000000 		.4byte	.LVL48
 2551 01af 0C000000 		.4byte	.LFE16
 2552 01b3 0100     		.2byte	0x1
 2553 01b5 50       		.byte	0x50
 2554 01b6 00000000 		.4byte	0
 2555 01ba 00000000 		.4byte	0
 2556              	.LLST13:
 2557 01be 10000000 		.4byte	.LVL53
 2558 01c2 27000000 		.4byte	.LVL54-1
 2559 01c6 0100     		.2byte	0x1
 2560 01c8 50       		.byte	0x50
 2561 01c9 50000000 		.4byte	.LVL55
 2562 01cd 67000000 		.4byte	.LVL56-1
 2563 01d1 0100     		.2byte	0x1
 2564 01d3 50       		.byte	0x50
 2565 01d4 00000000 		.4byte	0
 2566 01d8 00000000 		.4byte	0
 2567              		.section	.debug_aranges,"",%progbits
 2568 0000 AC000000 		.4byte	0xac
 2569 0004 0200     		.2byte	0x2
 2570 0006 00000000 		.4byte	.Ldebug_info0
 2571 000a 04       		.byte	0x4
 2572 000b 00       		.byte	0
 2573 000c 0000     		.2byte	0
 2574 000e 0000     		.2byte	0
 2575 0010 00000000 		.4byte	.LFB1
 2576 0014 68000000 		.4byte	.LFE1-.LFB1
 2577 0018 00000000 		.4byte	.LFB4
 2578 001c 20000000 		.4byte	.LFE4-.LFB4
 2579 0020 00000000 		.4byte	.LFB8
 2580 0024 10000000 		.4byte	.LFE8-.LFB8
 2581 0028 00000000 		.4byte	.LFB9
 2582 002c 0C000000 		.4byte	.LFE9-.LFB9
 2583 0030 00000000 		.4byte	.LFB11
 2584 0034 0E000000 		.4byte	.LFE11-.LFB11
 2585 0038 00000000 		.4byte	.LFB12
 2586 003c 0E000000 		.4byte	.LFE12-.LFB12
 2587 0040 00000000 		.4byte	.LFB10
 2588 0044 16000000 		.4byte	.LFE10-.LFB10
 2589 0048 00000000 		.4byte	.LFB3
 2590 004c 68000000 		.4byte	.LFE3-.LFB3
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 82


 2591 0050 00000000 		.4byte	.LFB14
 2592 0054 4C000000 		.4byte	.LFE14-.LFB14
 2593 0058 00000000 		.4byte	.LFB15
 2594 005c 10000000 		.4byte	.LFE15-.LFB15
 2595 0060 00000000 		.4byte	.LFB5
 2596 0064 2C000000 		.4byte	.LFE5-.LFB5
 2597 0068 00000000 		.4byte	.LFB13
 2598 006c 34000000 		.4byte	.LFE13-.LFB13
 2599 0070 00000000 		.4byte	.LFB6
 2600 0074 20000000 		.4byte	.LFE6-.LFB6
 2601 0078 00000000 		.4byte	.LFB7
 2602 007c 38000000 		.4byte	.LFE7-.LFB7
 2603 0080 00000000 		.4byte	.LFB16
 2604 0084 0C000000 		.4byte	.LFE16-.LFB16
 2605 0088 00000000 		.4byte	.LFB17
 2606 008c 0C000000 		.4byte	.LFE17-.LFB17
 2607 0090 00000000 		.4byte	.LFB18
 2608 0094 20000000 		.4byte	.LFE18-.LFB18
 2609 0098 00000000 		.4byte	.LFB0
 2610 009c F0000000 		.4byte	.LFE0-.LFB0
 2611 00a0 00000000 		.4byte	.LFB2
 2612 00a4 2C000000 		.4byte	.LFE2-.LFB2
 2613 00a8 00000000 		.4byte	0
 2614 00ac 00000000 		.4byte	0
 2615              		.section	.debug_ranges,"",%progbits
 2616              	.Ldebug_ranges0:
 2617 0000 00000000 		.4byte	.LFB1
 2618 0004 68000000 		.4byte	.LFE1
 2619 0008 00000000 		.4byte	.LFB4
 2620 000c 20000000 		.4byte	.LFE4
 2621 0010 00000000 		.4byte	.LFB8
 2622 0014 10000000 		.4byte	.LFE8
 2623 0018 00000000 		.4byte	.LFB9
 2624 001c 0C000000 		.4byte	.LFE9
 2625 0020 00000000 		.4byte	.LFB11
 2626 0024 0E000000 		.4byte	.LFE11
 2627 0028 00000000 		.4byte	.LFB12
 2628 002c 0E000000 		.4byte	.LFE12
 2629 0030 00000000 		.4byte	.LFB10
 2630 0034 16000000 		.4byte	.LFE10
 2631 0038 00000000 		.4byte	.LFB3
 2632 003c 68000000 		.4byte	.LFE3
 2633 0040 00000000 		.4byte	.LFB14
 2634 0044 4C000000 		.4byte	.LFE14
 2635 0048 00000000 		.4byte	.LFB15
 2636 004c 10000000 		.4byte	.LFE15
 2637 0050 00000000 		.4byte	.LFB5
 2638 0054 2C000000 		.4byte	.LFE5
 2639 0058 00000000 		.4byte	.LFB13
 2640 005c 34000000 		.4byte	.LFE13
 2641 0060 00000000 		.4byte	.LFB6
 2642 0064 20000000 		.4byte	.LFE6
 2643 0068 00000000 		.4byte	.LFB7
 2644 006c 38000000 		.4byte	.LFE7
 2645 0070 00000000 		.4byte	.LFB16
 2646 0074 0C000000 		.4byte	.LFE16
 2647 0078 00000000 		.4byte	.LFB17
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 83


 2648 007c 0C000000 		.4byte	.LFE17
 2649 0080 00000000 		.4byte	.LFB18
 2650 0084 20000000 		.4byte	.LFE18
 2651 0088 00000000 		.4byte	.LFB0
 2652 008c F0000000 		.4byte	.LFE0
 2653 0090 00000000 		.4byte	.LFB2
 2654 0094 2C000000 		.4byte	.LFE2
 2655 0098 00000000 		.4byte	0
 2656 009c 00000000 		.4byte	0
 2657              		.section	.debug_line,"",%progbits
 2658              	.Ldebug_line0:
 2659 0000 AF020000 		.section	.debug_str,"MS",%progbits,1
 2659      0200C900 
 2659      00000201 
 2659      FB0E0D00 
 2659      01010101 
 2660              	.LASF10:
 2661 0000 75696E74 		.ascii	"uint16\000"
 2661      313600
 2662              	.LASF50:
 2663 0007 43617053 		.ascii	"CapSense_csv\000"
 2663      656E7365 
 2663      5F637376 
 2663      00
 2664              	.LASF66:
 2665 0014 43794578 		.ascii	"CyExitCriticalSection\000"
 2665      69744372 
 2665      69746963 
 2665      616C5365 
 2665      6374696F 
 2666              	.LASF82:
 2667 002a 47656E65 		.ascii	"Generated_Source\\PSoC5\\CapSense.c\000"
 2667      72617465 
 2667      645F536F 
 2667      75726365 
 2667      5C50536F 
 2668              	.LASF48:
 2669 004c 43617053 		.ascii	"CapSense_initVar\000"
 2669      656E7365 
 2669      5F696E69 
 2669      74566172 
 2669      00
 2670              	.LASF54:
 2671 005d 43617053 		.ascii	"CapSense_pcTable\000"
 2671      656E7365 
 2671      5F706354 
 2671      61626C65 
 2671      00
 2672              	.LASF49:
 2673 006e 43617053 		.ascii	"CapSense_lowLevelTuningDone\000"
 2673      656E7365 
 2673      5F6C6F77 
 2673      4C657665 
 2673      6C54756E 
 2674              	.LASF72:
 2675 008a 43617053 		.ascii	"CapSense_IdacCH0_SetValue\000"
 2675      656E7365 
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 84


 2675      5F496461 
 2675      63434830 
 2675      5F536574 
 2676              	.LASF24:
 2677 00a4 736E7349 		.ascii	"snsIndex\000"
 2677      6E646578 
 2677      00
 2678              	.LASF7:
 2679 00ad 6C6F6E67 		.ascii	"long long unsigned int\000"
 2679      206C6F6E 
 2679      6720756E 
 2679      7369676E 
 2679      65642069 
 2680              	.LASF64:
 2681 00c4 43617053 		.ascii	"CapSense_CompCH0_Enable\000"
 2681      656E7365 
 2681      5F436F6D 
 2681      70434830 
 2681      5F456E61 
 2682              	.LASF26:
 2683 00dc 43617053 		.ascii	"CapSense_Enable\000"
 2683      656E7365 
 2683      5F456E61 
 2683      626C6500 
 2684              	.LASF34:
 2685 00ec 43617053 		.ascii	"CapSense_SetPrescaler\000"
 2685      656E7365 
 2685      5F536574 
 2685      50726573 
 2685      63616C65 
 2686              	.LASF6:
 2687 0102 6C6F6E67 		.ascii	"long long int\000"
 2687      206C6F6E 
 2687      6720696E 
 2687      7400
 2688              	.LASF0:
 2689 0110 7369676E 		.ascii	"signed char\000"
 2689      65642063 
 2689      68617200 
 2690              	.LASF45:
 2691 011c 43617053 		.ascii	"CapSense_SetAnalogSwitchesSource\000"
 2691      656E7365 
 2691      5F536574 
 2691      416E616C 
 2691      6F675377 
 2692              	.LASF4:
 2693 013d 6C6F6E67 		.ascii	"long int\000"
 2693      20696E74 
 2693      00
 2694              	.LASF16:
 2695 0146 72656731 		.ascii	"reg16\000"
 2695      3600
 2696              	.LASF9:
 2697 014c 75696E74 		.ascii	"uint8\000"
 2697      3800
 2698              	.LASF75:
 2699 0152 43617053 		.ascii	"CapSense_AMuxCH0_Init\000"
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 85


 2699      656E7365 
 2699      5F414D75 
 2699      78434830 
 2699      5F496E69 
 2700              	.LASF13:
 2701 0168 646F7562 		.ascii	"double\000"
 2701      6C6500
 2702              	.LASF27:
 2703 016f 43617053 		.ascii	"CapSense_EnableSensor\000"
 2703      656E7365 
 2703      5F456E61 
 2703      626C6553 
 2703      656E736F 
 2704              	.LASF71:
 2705 0185 43617053 		.ascii	"CapSense_IdacCH0_Stop\000"
 2705      656E7365 
 2705      5F496461 
 2705      63434830 
 2705      5F53746F 
 2706              	.LASF61:
 2707 019b 43617053 		.ascii	"CapSense_widgetNumber\000"
 2707      656E7365 
 2707      5F776964 
 2707      6765744E 
 2707      756D6265 
 2708              	.LASF23:
 2709 01b1 43617053 		.ascii	"CapSense_ReadSensorRaw\000"
 2709      656E7365 
 2709      5F526561 
 2709      6453656E 
 2709      736F7252 
 2710              	.LASF11:
 2711 01c8 75696E74 		.ascii	"uint32\000"
 2711      333200
 2712              	.LASF73:
 2713 01cf 4379496E 		.ascii	"CyIntSetVector\000"
 2713      74536574 
 2713      56656374 
 2713      6F7200
 2714              	.LASF29:
 2715 01de 6D61736B 		.ascii	"mask\000"
 2715      00
 2716              	.LASF76:
 2717 01e3 43617053 		.ascii	"CapSense_CompCH0_Init\000"
 2717      656E7365 
 2717      5F436F6D 
 2717      70434830 
 2717      5F496E69 
 2718              	.LASF28:
 2719 01f9 706F7274 		.ascii	"port\000"
 2719      00
 2720              	.LASF51:
 2721 01fe 43617053 		.ascii	"CapSense_sensorIndex\000"
 2721      656E7365 
 2721      5F73656E 
 2721      736F7249 
 2721      6E646578 
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 86


 2722              	.LASF40:
 2723 0213 43617053 		.ascii	"CapSense_ScanSensor\000"
 2723      656E7365 
 2723      5F536361 
 2723      6E53656E 
 2723      736F7200 
 2724              	.LASF8:
 2725 0227 756E7369 		.ascii	"unsigned int\000"
 2725      676E6564 
 2725      20696E74 
 2725      00
 2726              	.LASF31:
 2727 0234 43617053 		.ascii	"CapSense_ClearSensors\000"
 2727      656E7365 
 2727      5F436C65 
 2727      61725365 
 2727      6E736F72 
 2728              	.LASF79:
 2729 024a 43617053 		.ascii	"CapSense_IdacCH0_SetRange\000"
 2729      656E7365 
 2729      5F496461 
 2729      63434830 
 2729      5F536574 
 2730              	.LASF5:
 2731 0264 6C6F6E67 		.ascii	"long unsigned int\000"
 2731      20756E73 
 2731      69676E65 
 2731      6420696E 
 2731      7400
 2732              	.LASF56:
 2733 0276 43617053 		.ascii	"CapSense_maskTable\000"
 2733      656E7365 
 2733      5F6D6173 
 2733      6B546162 
 2733      6C6500
 2734              	.LASF55:
 2735 0289 43617053 		.ascii	"CapSense_portTable\000"
 2735      656E7365 
 2735      5F706F72 
 2735      74546162 
 2735      6C6500
 2736              	.LASF63:
 2737 029c 43617053 		.ascii	"CapSense_IntClock_Start\000"
 2737      656E7365 
 2737      5F496E74 
 2737      436C6F63 
 2737      6B5F5374 
 2738              	.LASF62:
 2739 02b4 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2739      74657243 
 2739      72697469 
 2739      63616C53 
 2739      65637469 
 2740              	.LASF3:
 2741 02cb 73686F72 		.ascii	"short unsigned int\000"
 2741      7420756E 
 2741      7369676E 
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 87


 2741      65642069 
 2741      6E7400
 2742              	.LASF69:
 2743 02de 43617053 		.ascii	"CapSense_IntClock_Stop\000"
 2743      656E7365 
 2743      5F496E74 
 2743      436C6F63 
 2743      6B5F5374 
 2744              	.LASF83:
 2745 02f5 433A5C55 		.ascii	"C:\\Users\\Arold\\Documents\\GitHub\\Green-House\\G"
 2745      73657273 
 2745      5C41726F 
 2745      6C645C44 
 2745      6F63756D 
 2746 0322 7265656E 		.ascii	"reen_House\\Green_House.cydsn\000"
 2746      5F486F75 
 2746      73655C47 
 2746      7265656E 
 2746      5F486F75 
 2747              	.LASF25:
 2748 033f 73656E73 		.ascii	"sensor\000"
 2748      6F7200
 2749              	.LASF53:
 2750 0346 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 2750      656E7365 
 2750      5F73656E 
 2750      736F7245 
 2750      6E61626C 
 2751              	.LASF37:
 2752 0360 736C6F74 		.ascii	"slot\000"
 2752      00
 2753              	.LASF80:
 2754 0365 43617053 		.ascii	"CapSense_AutoTune\000"
 2754      656E7365 
 2754      5F417574 
 2754      6F54756E 
 2754      6500
 2755              	.LASF17:
 2756 0377 72656733 		.ascii	"reg32\000"
 2756      3200
 2757              	.LASF60:
 2758 037d 43617053 		.ascii	"CapSense_analogSwitchDivider\000"
 2758      656E7365 
 2758      5F616E61 
 2758      6C6F6753 
 2758      77697463 
 2759              	.LASF19:
 2760 039a 73697A65 		.ascii	"sizetype\000"
 2760      74797065 
 2760      00
 2761              	.LASF57:
 2762 03a3 43617053 		.ascii	"CapSense_csTable\000"
 2762      656E7365 
 2762      5F637354 
 2762      61626C65 
 2762      00
 2763              	.LASF18:
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 88


 2764 03b4 6C6F6E67 		.ascii	"long double\000"
 2764      20646F75 
 2764      626C6500 
 2765              	.LASF32:
 2766 03c0 43617053 		.ascii	"CapSense_Stop\000"
 2766      656E7365 
 2766      5F53746F 
 2766      7000
 2767              	.LASF44:
 2768 03ce 7363616E 		.ascii	"scanSpeed\000"
 2768      53706565 
 2768      6400
 2769              	.LASF21:
 2770 03d8 656E4D61 		.ascii	"enMask\000"
 2770      736B00
 2771              	.LASF78:
 2772 03df 43617053 		.ascii	"CapSense_IdacCH0_SetPolarity\000"
 2772      656E7365 
 2772      5F496461 
 2772      63434830 
 2772      5F536574 
 2773              	.LASF74:
 2774 03fc 4379496E 		.ascii	"CyIntSetPriority\000"
 2774      74536574 
 2774      5072696F 
 2774      72697479 
 2774      00
 2775              	.LASF58:
 2776 040d 43617053 		.ascii	"CapSense_idacSettings\000"
 2776      656E7365 
 2776      5F696461 
 2776      63536574 
 2776      74696E67 
 2777              	.LASF12:
 2778 0423 666C6F61 		.ascii	"float\000"
 2778      7400
 2779              	.LASF35:
 2780 0429 70726573 		.ascii	"prescaler\000"
 2780      63616C65 
 2780      7200
 2781              	.LASF15:
 2782 0433 72656738 		.ascii	"reg8\000"
 2782      00
 2783              	.LASF22:
 2784 0438 43617053 		.ascii	"CapSense_FindNextSensor\000"
 2784      656E7365 
 2784      5F46696E 
 2784      644E6578 
 2784      7453656E 
 2785              	.LASF1:
 2786 0450 756E7369 		.ascii	"unsigned char\000"
 2786      676E6564 
 2786      20636861 
 2786      7200
 2787              	.LASF77:
 2788 045e 43617053 		.ascii	"CapSense_IdacCH0_Init\000"
 2788      656E7365 
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 89


 2788      5F496461 
 2788      63434830 
 2788      5F496E69 
 2789              	.LASF59:
 2790 0474 43617053 		.ascii	"CapSense_widgetResolution\000"
 2790      656E7365 
 2790      5F776964 
 2790      67657452 
 2790      65736F6C 
 2791              	.LASF2:
 2792 048e 73686F72 		.ascii	"short int\000"
 2792      7420696E 
 2792      7400
 2793              	.LASF38:
 2794 0498 77696467 		.ascii	"widget\000"
 2794      657400
 2795              	.LASF36:
 2796 049f 43617053 		.ascii	"CapSense_SetScanSlotSettings\000"
 2796      656E7365 
 2796      5F536574 
 2796      5363616E 
 2796      536C6F74 
 2797              	.LASF42:
 2798 04bc 43617053 		.ascii	"CapSense_GetPrescaler\000"
 2798      656E7365 
 2798      5F476574 
 2798      50726573 
 2798      63616C65 
 2799              	.LASF81:
 2800 04d2 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2800      43313120 
 2800      352E342E 
 2800      31203230 
 2800      31363036 
 2801 0505 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2801      20726576 
 2801      6973696F 
 2801      6E203233 
 2801      37373135 
 2802 0538 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2802      66756E63 
 2802      74696F6E 
 2802      2D736563 
 2802      74696F6E 
 2803              	.LASF14:
 2804 0560 63686172 		.ascii	"char\000"
 2804      00
 2805              	.LASF65:
 2806 0565 43617053 		.ascii	"CapSense_IdacCH0_Enable\000"
 2806      656E7365 
 2806      5F496461 
 2806      63434830 
 2806      5F456E61 
 2807              	.LASF43:
 2808 057d 43617053 		.ascii	"CapSense_SetScanSpeed\000"
 2808      656E7365 
 2808      5F536574 
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 90


 2808      5363616E 
 2808      53706565 
 2809              	.LASF67:
 2810 0593 43617053 		.ascii	"CapSense_AMuxCH0_Set\000"
 2810      656E7365 
 2810      5F414D75 
 2810      78434830 
 2810      5F536574 
 2811              	.LASF47:
 2812 05a8 43617053 		.ascii	"CapSense_Start\000"
 2812      656E7365 
 2812      5F537461 
 2812      727400
 2813              	.LASF33:
 2814 05b7 43617053 		.ascii	"CapSense_PostScan\000"
 2814      656E7365 
 2814      5F506F73 
 2814      74536361 
 2814      6E00
 2815              	.LASF20:
 2816 05c9 656E6162 		.ascii	"enableInterrupts\000"
 2816      6C65496E 
 2816      74657272 
 2816      75707473 
 2816      00
 2817              	.LASF70:
 2818 05da 43617053 		.ascii	"CapSense_CompCH0_Stop\000"
 2818      656E7365 
 2818      5F436F6D 
 2818      70434830 
 2818      5F53746F 
 2819              	.LASF30:
 2820 05f0 43617053 		.ascii	"CapSense_DisableSensor\000"
 2820      656E7365 
 2820      5F446973 
 2820      61626C65 
 2820      53656E73 
 2821              	.LASF39:
 2822 0607 43617053 		.ascii	"CapSense_PreScan\000"
 2822      656E7365 
 2822      5F507265 
 2822      5363616E 
 2822      00
 2823              	.LASF46:
 2824 0618 43617053 		.ascii	"CapSense_Init\000"
 2824      656E7365 
 2824      5F496E69 
 2824      7400
 2825              	.LASF52:
 2826 0626 43617053 		.ascii	"CapSense_sensorRaw\000"
 2826      656E7365 
 2826      5F73656E 
 2826      736F7252 
 2826      617700
 2827              	.LASF41:
 2828 0639 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 2828      656E7365 
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccv0T3Po.s 			page 91


 2828      5F536361 
 2828      6E456E61 
 2828      626C6564 
 2829              	.LASF68:
 2830 0655 43617053 		.ascii	"CapSense_AMuxCH0_Unset\000"
 2830      656E7365 
 2830      5F414D75 
 2830      78434830 
 2830      5F556E73 
 2831              	.LASF84:
 2832 066c 43617053 		.ascii	"CapSense_IsBusy\000"
 2832      656E7365 
 2832      5F497342 
 2832      75737900 
 2833              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
