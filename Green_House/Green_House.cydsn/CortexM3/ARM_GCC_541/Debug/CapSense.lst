ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	CapSense_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	CapSense_Enable, %function
  25              	CapSense_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\CapSense.c"
   1:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CapSense.c **** * File Name: CapSense.c
   3:Generated_Source\PSoC5/CapSense.c **** * Version 3.50
   4:Generated_Source\PSoC5/CapSense.c **** *
   5:Generated_Source\PSoC5/CapSense.c **** * Description:
   6:Generated_Source\PSoC5/CapSense.c **** *  This file provides the source code of scanning APIs for the CapSense CSD 
   7:Generated_Source\PSoC5/CapSense.c **** *  component.
   8:Generated_Source\PSoC5/CapSense.c **** *
   9:Generated_Source\PSoC5/CapSense.c **** * Note:
  10:Generated_Source\PSoC5/CapSense.c **** *
  11:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
  12:Generated_Source\PSoC5/CapSense.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/CapSense.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/CapSense.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/CapSense.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/CapSense.c **** 
  18:Generated_Source\PSoC5/CapSense.c **** #include "CapSense.h"
  19:Generated_Source\PSoC5/CapSense.c **** #include "cyapicallbacks.h"
  20:Generated_Source\PSoC5/CapSense.c **** 
  21:Generated_Source\PSoC5/CapSense.c **** 
  22:Generated_Source\PSoC5/CapSense.c **** static uint8 CapSense_initVar = 0u;
  23:Generated_Source\PSoC5/CapSense.c ****             
  24:Generated_Source\PSoC5/CapSense.c **** /* Global software variables */
  25:Generated_Source\PSoC5/CapSense.c **** volatile uint8 CapSense_csv;            /* CapSense CSD status, control variable */
  26:Generated_Source\PSoC5/CapSense.c **** volatile uint8 CapSense_sensorIndex;    /* Index of scannig sensor */
  27:Generated_Source\PSoC5/CapSense.c **** 
  28:Generated_Source\PSoC5/CapSense.c **** /* AutoTunning start */
  29:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
  30:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_lowLevelTuningDone = 1u;
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 2


  31:Generated_Source\PSoC5/CapSense.c **** #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
  32:Generated_Source\PSoC5/CapSense.c **** 
  33:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
  34:Generated_Source\PSoC5/CapSense.c ****     uint8  CapSense_extRbCh0Cur = CapSense_RBLEED1;
  35:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
  36:Generated_Source\PSoC5/CapSense.c ****         uint8  CapSense_extRbCh1Cur = (CapSense_RBLEED1 + CapSense_TOTAL_RB_NUMBER__CH0);
  37:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)*/ 
  38:Generated_Source\PSoC5/CapSense.c **** #endif /* (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB) */ 
  39:Generated_Source\PSoC5/CapSense.c ****         
  40:Generated_Source\PSoC5/CapSense.c **** /* Global array of Raw Counts */
  41:Generated_Source\PSoC5/CapSense.c **** uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT]; 
  42:Generated_Source\PSoC5/CapSense.c **** 
  43:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_sensorEnableMask[(((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)] = {
  44:Generated_Source\PSoC5/CapSense.c **** 0x1u, };
  45:Generated_Source\PSoC5/CapSense.c **** 
  46:Generated_Source\PSoC5/CapSense.c **** uint8 CYXDATA * const CYCODE CapSense_pcTable[] = {
  47:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Generic0_0__GEN__PC, 
  48:Generated_Source\PSoC5/CapSense.c **** };
  49:Generated_Source\PSoC5/CapSense.c **** 
  50:Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_portTable[] = {
  51:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Generic0_0__GEN__PORT, 
  52:Generated_Source\PSoC5/CapSense.c **** };
  53:Generated_Source\PSoC5/CapSense.c **** 
  54:Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_maskTable[] = {
  55:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Generic0_0__GEN__MASK,
  56:Generated_Source\PSoC5/CapSense.c **** };
  57:Generated_Source\PSoC5/CapSense.c **** 
  58:Generated_Source\PSoC5/CapSense.c **** uint8 CYXDATA * const CYCODE CapSense_csTable[] = {
  59:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT0_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT1_CAPS_SEL, (uint8 CYXDATA *)CY
  60:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT3_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT4_CAPS_SEL, (uint8 CYXDATA *)CY
  61:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT6_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT15_CAPS_SEL,
  62:Generated_Source\PSoC5/CapSense.c **** };
  63:Generated_Source\PSoC5/CapSense.c **** 
  64:Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_idacSettings[] = {
  65:Generated_Source\PSoC5/CapSense.c ****     200u,
  66:Generated_Source\PSoC5/CapSense.c **** };
  67:Generated_Source\PSoC5/CapSense.c **** 
  68:Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_widgetResolution[] = {
  69:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
  70:Generated_Source\PSoC5/CapSense.c **** };
  71:Generated_Source\PSoC5/CapSense.c **** 
  72:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_analogSwitchDivider[CapSense_TOTAL_SCANSLOT_COUNT] = {
  73:Generated_Source\PSoC5/CapSense.c ****     11u, 
  74:Generated_Source\PSoC5/CapSense.c **** };
  75:Generated_Source\PSoC5/CapSense.c **** 
  76:Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_widgetNumber[] = {
  77:Generated_Source\PSoC5/CapSense.c ****     0u, /* Generic0__GEN */
  78:Generated_Source\PSoC5/CapSense.c ****     
  79:Generated_Source\PSoC5/CapSense.c **** };
  80:Generated_Source\PSoC5/CapSense.c **** 
  81:Generated_Source\PSoC5/CapSense.c **** 
  82:Generated_Source\PSoC5/CapSense.c **** 
  83:Generated_Source\PSoC5/CapSense.c **** 
  84:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
  85:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Init
  86:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
  87:Generated_Source\PSoC5/CapSense.c **** *
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 3


  88:Generated_Source\PSoC5/CapSense.c **** * Summary:
  89:Generated_Source\PSoC5/CapSense.c **** *  Inits default CapSense configuration provided with customizer that defines 
  90:Generated_Source\PSoC5/CapSense.c **** *  mode of component operations and resets all sensors to an inactive state.
  91:Generated_Source\PSoC5/CapSense.c **** *
  92:Generated_Source\PSoC5/CapSense.c **** * Parameters:
  93:Generated_Source\PSoC5/CapSense.c **** *  None
  94:Generated_Source\PSoC5/CapSense.c **** *
  95:Generated_Source\PSoC5/CapSense.c **** * Return:
  96:Generated_Source\PSoC5/CapSense.c **** *  None
  97:Generated_Source\PSoC5/CapSense.c **** *
  98:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
  99:Generated_Source\PSoC5/CapSense.c **** void CapSense_Init(void) 
 100:Generated_Source\PSoC5/CapSense.c **** {
 101:Generated_Source\PSoC5/CapSense.c ****     #if ( (CapSense_PRS_OPTIONS) || \
 102:Generated_Source\PSoC5/CapSense.c ****           (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_UDB) || \
 103:Generated_Source\PSoC5/CapSense.c ****           ( (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
 104:Generated_Source\PSoC5/CapSense.c ****             (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_UDB)) )
 105:Generated_Source\PSoC5/CapSense.c ****         
 106:Generated_Source\PSoC5/CapSense.c ****         uint8 enableInterrupts;
 107:Generated_Source\PSoC5/CapSense.c ****     #endif /* ( (CapSense_PRS_OPTIONS) || \
 108:Generated_Source\PSoC5/CapSense.c ****            * (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_UDB) || \
 109:Generated_Source\PSoC5/CapSense.c ****            * ( (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
 110:Generated_Source\PSoC5/CapSense.c ****            * (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_UDB)) ) 
 111:Generated_Source\PSoC5/CapSense.c ****            */
 112:Generated_Source\PSoC5/CapSense.c ****     
 113:Generated_Source\PSoC5/CapSense.c ****     /* Clear all sensors */
 114:Generated_Source\PSoC5/CapSense.c ****     CapSense_ClearSensors();
 115:Generated_Source\PSoC5/CapSense.c **** 
 116:Generated_Source\PSoC5/CapSense.c ****     /* Set Prescaler */
 117:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 118:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 119:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
 120:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_CONTROL_REG   = (CapSense_PRESCALER_CTRL_ENABLE |
 121:Generated_Source\PSoC5/CapSense.c ****                                                     CapSense_PRESCALER_CTRL_MODE_CMP);
 122:Generated_Source\PSoC5/CapSense.c ****                                                
 123:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_CONTROL2_REG |= CapSense_PRESCALER_CTRL_CMP_LESS_EQ;
 124:Generated_Source\PSoC5/CapSense.c ****     #else
 125:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 126:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 127:Generated_Source\PSoC5/CapSense.c **** 
 128:Generated_Source\PSoC5/CapSense.c ****     /* Set PRS */
 129:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRS_OPTIONS)
 130:Generated_Source\PSoC5/CapSense.c ****         CapSense_SetAnalogSwitchesSource(CapSense_ANALOG_SWITCHES_SRC_PRS);
 131:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_PRS_OPTIONS) */
 132:Generated_Source\PSoC5/CapSense.c **** 
 133:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRS_OPTIONS == CapSense_PRS_8BITS)
 134:Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */
 135:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 136:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 137:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 138:Generated_Source\PSoC5/CapSense.c ****         
 139:Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 140:Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_REG   = CapSense_PRS8_DEFAULT_POLYNOM;
 141:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 142:Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_REG = CapSense_MEASURE_FULL_RANGE_LOW;
 143:Generated_Source\PSoC5/CapSense.c ****         
 144:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRS_OPTIONS == CapSense_PRS_16BITS)
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 4


 145:Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */ 
 146:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();  
 147:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 148:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_B_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 149:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 150:Generated_Source\PSoC5/CapSense.c ****         
 151:Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 152:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_POLYNOM_PTR, CapSense_PRS16_DEFAULT_POLYNOM);
 153:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 154:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_SEED_COPY_PTR, CapSense_MEASURE_FULL_RANGE);
 155:Generated_Source\PSoC5/CapSense.c ****                 
 156:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRS_OPTIONS == CapSense_PRS_16BITS_4X)
 157:Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */
 158:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 159:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG  |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 160:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 161:Generated_Source\PSoC5/CapSense.c ****         
 162:Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 163:Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_A__D1_REG   = HI8(CapSense_PRS16_DEFAULT_POLYNOM);
 164:Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_A__D0_REG   = LO8(CapSense_PRS16_DEFAULT_POLYNOM);
 165:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 166:Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_A__F1_REG = CapSense_MEASURE_FULL_RANGE_LOW;
 167:Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_A__F0_REG = CapSense_MEASURE_FULL_RANGE_LOW; 
 168:Generated_Source\PSoC5/CapSense.c ****         
 169:Generated_Source\PSoC5/CapSense.c ****     #else
 170:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without PRS */
 171:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRS_OPTIONS == CapSense_PRS_8BITS) */ 
 172:Generated_Source\PSoC5/CapSense.c ****     
 173:Generated_Source\PSoC5/CapSense.c ****     /* Set ScanSpeed */
 174:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_PERIOD_REG = CapSense_SCANSPEED_VALUE;
 175:Generated_Source\PSoC5/CapSense.c ****     
 176:Generated_Source\PSoC5/CapSense.c ****     /* Set the Measure */
 177:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 178:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 179:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 180:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 181:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_PWM_CH0_COUNTER_PTR, CapSense_MEASURE_FULL_RANGE);
 182:Generated_Source\PSoC5/CapSense.c ****         
 183:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 184:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 185:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 186:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_RAW_CH0_PERIOD_PTR, CapSense_MEASURE_FULL_RANGE);
 187:Generated_Source\PSoC5/CapSense.c ****     
 188:Generated_Source\PSoC5/CapSense.c ****     #else
 189:Generated_Source\PSoC5/CapSense.c ****         /*Window PWM and Raw Counter AUX set */
 190:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 191:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 192:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 193:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 194:Generated_Source\PSoC5/CapSense.c ****         
 195:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 196:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 197:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 198:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 199:Generated_Source\PSoC5/CapSense.c ****         
 200:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 201:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 5


 202:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 203:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 204:Generated_Source\PSoC5/CapSense.c ****         
 205:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 206:Generated_Source\PSoC5/CapSense.c ****     
 207:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 208:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 209:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 210:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 211:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 212:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PWM_CH1_COUNTER_PTR, CapSense_MEASURE_FULL_RANGE);
 213:Generated_Source\PSoC5/CapSense.c ****             
 214:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 215:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 216:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 217:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_RAW_CH1_PERIOD_PTR, CapSense_MEASURE_FULL_RANGE);
 218:Generated_Source\PSoC5/CapSense.c ****            
 219:Generated_Source\PSoC5/CapSense.c ****         #else
 220:Generated_Source\PSoC5/CapSense.c ****             /*Window PWM and Raw Counter AUX set */
 221:Generated_Source\PSoC5/CapSense.c ****             enableInterrupts = CyEnterCriticalSection();
 222:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 223:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 224:Generated_Source\PSoC5/CapSense.c ****             CyExitCriticalSection(enableInterrupts);
 225:Generated_Source\PSoC5/CapSense.c ****             
 226:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 227:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 228:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 229:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 230:Generated_Source\PSoC5/CapSense.c ****             
 231:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 232:Generated_Source\PSoC5/CapSense.c ****             
 233:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 234:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 235:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 236:Generated_Source\PSoC5/CapSense.c ****             
 237:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 238:Generated_Source\PSoC5/CapSense.c ****     
 239:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN) */
 240:Generated_Source\PSoC5/CapSense.c ****     
 241:Generated_Source\PSoC5/CapSense.c ****     /* Setup ISR */
 242:Generated_Source\PSoC5/CapSense.c ****     CyIntDisable(CapSense_IsrCH0_ISR_NUMBER);
 243:Generated_Source\PSoC5/CapSense.c ****     (void)CyIntSetVector(CapSense_IsrCH0_ISR_NUMBER, &CapSense_IsrCH0_ISR);
 244:Generated_Source\PSoC5/CapSense.c ****     CyIntSetPriority(CapSense_IsrCH0_ISR_NUMBER, CapSense_IsrCH0_ISR_PRIORITY);
 245:Generated_Source\PSoC5/CapSense.c ****     
 246:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 247:Generated_Source\PSoC5/CapSense.c ****         CyIntDisable(CapSense_IsrCH1_ISR_NUMBER);
 248:Generated_Source\PSoC5/CapSense.c ****         CyIntSetVector(CapSense_IsrCH1_ISR_NUMBER, CapSense_IsrCH1_ISR);
 249:Generated_Source\PSoC5/CapSense.c ****         CyIntSetPriority(CapSense_IsrCH1_ISR_NUMBER, CapSense_IsrCH1_ISR_PRIORITY);
 250:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 251:Generated_Source\PSoC5/CapSense.c ****     
 252:Generated_Source\PSoC5/CapSense.c ****     /* Setup AMux Bus: Connect Cmod, Cmp, Idac */
 253:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Init();
 254:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMOD_CHANNEL);
 255:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMP_VP_CHANNEL);
 256:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 257:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
 258:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 6


 259:Generated_Source\PSoC5/CapSense.c ****     
 260:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 261:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Init();
 262:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_CMOD_CHANNEL);
 263:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_CMP_VP_CHANNEL);
 264:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 265:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_IDAC_CHANNEL);
 266:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 267:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 268:Generated_Source\PSoC5/CapSense.c ****     
 269:Generated_Source\PSoC5/CapSense.c ****     /* Int Rb */
 270:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
 271:Generated_Source\PSoC5/CapSense.c ****         CapSense_InitRb();
 272:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB) */
 273:Generated_Source\PSoC5/CapSense.c ****     
 274:Generated_Source\PSoC5/CapSense.c ****     /* Enable window generation */
 275:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH0;
 276:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 277:Generated_Source\PSoC5/CapSense.c ****         CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH1;
 278:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 279:Generated_Source\PSoC5/CapSense.c ****     
 280:Generated_Source\PSoC5/CapSense.c ****     /* Initialize Cmp and Idac */
 281:Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Init();
 282:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 283:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Init();
 284:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetPolarity(CapSense_IdacCH0_IDIR);
 285:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetRange(CapSense_IDAC_RANGE_VALUE);
 286:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 287:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 288:Generated_Source\PSoC5/CapSense.c ****     
 289:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 290:Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Init();
 291:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 292:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Init();
 293:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetPolarity(CapSense_IdacCH1_IDIR);
 294:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetRange(CapSense_IDAC_RANGE_VALUE);
 295:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetValue(CapSense_TURN_OFF_IDAC);
 296:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 297:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 298:Generated_Source\PSoC5/CapSense.c ****     
 299:Generated_Source\PSoC5/CapSense.c ****     /* Initialize Vref if as VDAC */
 300:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 301:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Init();
 302:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 303:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Init();
 304:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE */
 305:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_VREF_OPTIONS */
 306:Generated_Source\PSoC5/CapSense.c **** }
 307:Generated_Source\PSoC5/CapSense.c **** 
 308:Generated_Source\PSoC5/CapSense.c **** 
 309:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 310:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Enable
 311:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 312:Generated_Source\PSoC5/CapSense.c **** *
 313:Generated_Source\PSoC5/CapSense.c **** * Summary:
 314:Generated_Source\PSoC5/CapSense.c **** *  Enables active mode power template bits for number of component used within 
 315:Generated_Source\PSoC5/CapSense.c **** *  CapSense.
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 7


 316:Generated_Source\PSoC5/CapSense.c **** *
 317:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 318:Generated_Source\PSoC5/CapSense.c **** *  None
 319:Generated_Source\PSoC5/CapSense.c **** *
 320:Generated_Source\PSoC5/CapSense.c **** * Return:
 321:Generated_Source\PSoC5/CapSense.c **** *  None
 322:Generated_Source\PSoC5/CapSense.c **** *
 323:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 324:Generated_Source\PSoC5/CapSense.c **** void CapSense_Enable(void) 
 325:Generated_Source\PSoC5/CapSense.c **** {
  28              		.loc 1 325 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 326:Generated_Source\PSoC5/CapSense.c ****     uint8 enableInterrupts;
 327:Generated_Source\PSoC5/CapSense.c ****     
 328:Generated_Source\PSoC5/CapSense.c ****     enableInterrupts = CyEnterCriticalSection();
  36              		.loc 1 328 0
  37 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  38              	.LVL0:
  39 0006 0446     		mov	r4, r0
  40              	.LVL1:
 329:Generated_Source\PSoC5/CapSense.c ****     
 330:Generated_Source\PSoC5/CapSense.c ****     /* Enable Prescaler */
 331:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 332:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing  for UDB */
 333:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
 334:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_ACT_PWRMGR_REG  |= CapSense_PRESCALER_ACT_PWR_EN;
 335:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_STBY_PWRMGR_REG |= CapSense_PRESCALER_STBY_PWR_EN;
 336:Generated_Source\PSoC5/CapSense.c ****         
 337:Generated_Source\PSoC5/CapSense.c ****     #else
 338:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 339:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 340:Generated_Source\PSoC5/CapSense.c ****     
 341:Generated_Source\PSoC5/CapSense.c ****     /* Enable ScanSpeed */
 342:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_AUX_CONTROL_REG |= CapSense_SCANSPEED_CTRL_ENABLE;
  41              		.loc 1 342 0
  42 0008 134A     		ldr	r2, .L3
  43 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  44 000c 43F02003 		orr	r3, r3, #32
  45 0010 1370     		strb	r3, [r2]
 343:Generated_Source\PSoC5/CapSense.c ****     
 344:Generated_Source\PSoC5/CapSense.c ****     /* Enable Measure CH0 */
 345:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 346:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 347:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ACT_PWRMGR_REG  |= CapSense_PWM_CH0_ACT_PWR_EN;
 348:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_STBY_PWRMGR_REG |= CapSense_PWM_CH0_STBY_PWR_EN;
 349:Generated_Source\PSoC5/CapSense.c ****         
 350:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 351:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ACT_PWRMGR_REG  |= CapSense_RAW_CH0_ACT_PWR_EN;
 352:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_STBY_PWRMGR_REG |= CapSense_RAW_CH0_STBY_PWR_EN;
 353:Generated_Source\PSoC5/CapSense.c ****         
 354:Generated_Source\PSoC5/CapSense.c ****     #else
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 8


 355:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 356:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 357:Generated_Source\PSoC5/CapSense.c ****         
 358:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 359:Generated_Source\PSoC5/CapSense.c ****     
 360:Generated_Source\PSoC5/CapSense.c ****     /* Enable Measure CH1*/
 361:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 362:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 363:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 364:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ACT_PWRMGR_REG  |= CapSense_PWM_CH1_ACT_PWR_EN;
 365:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_STBY_PWRMGR_REG |= CapSense_PWM_CH1_STBY_PWR_EN;
 366:Generated_Source\PSoC5/CapSense.c ****             
 367:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 368:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ACT_PWRMGR_REG  |= CapSense_RAW_CH1_ACT_PWR_EN;
 369:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_STBY_PWRMGR_REG |= CapSense_RAW_CH1_STBY_PWR_EN;
 370:Generated_Source\PSoC5/CapSense.c ****            
 371:Generated_Source\PSoC5/CapSense.c ****         #else
 372:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 373:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 374:Generated_Source\PSoC5/CapSense.c ****         
 375:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 376:Generated_Source\PSoC5/CapSense.c ****     
 377:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 378:Generated_Source\PSoC5/CapSense.c ****     
 379:Generated_Source\PSoC5/CapSense.c ****     /* Enable the Clock */
 380:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CLOCK_SOURCE == CapSense_INTERNAL_CLOCK)
 381:Generated_Source\PSoC5/CapSense.c ****        CapSense_IntClock_Enable();
  46              		.loc 1 381 0
  47 0012 FFF7FEFF 		bl	CapSense_IntClock_Start
  48              	.LVL2:
 382:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 383:Generated_Source\PSoC5/CapSense.c ****     
 384:Generated_Source\PSoC5/CapSense.c ****     /* Setup Cmp and Idac */
 385:Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Enable();
  49              		.loc 1 385 0
  50 0016 FFF7FEFF 		bl	CapSense_CompCH0_Enable
  51              	.LVL3:
 386:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 387:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Enable();
  52              		.loc 1 387 0
  53 001a FFF7FEFF 		bl	CapSense_IdacCH0_Enable
  54              	.LVL4:
 388:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 389:Generated_Source\PSoC5/CapSense.c ****     
 390:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 391:Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Enable();
 392:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 393:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Enable();
 394:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 395:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 396:Generated_Source\PSoC5/CapSense.c ****     
 397:Generated_Source\PSoC5/CapSense.c ****     /* Enable Vref */
 398:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 399:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Enable();
 400:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_SetValue(CapSense_VdacRefCH0_DEFAULT_DATA);
 401:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 402:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Enable();
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 9


 403:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_SetValue(CapSense_VdacRefCH1_DEFAULT_DATA);
 404:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 405:Generated_Source\PSoC5/CapSense.c ****     #else
 406:Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 407:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG |= CapSense_BufCH0_STBY_PWR_EN;
  55              		.loc 1 407 0
  56 001e 0F4A     		ldr	r2, .L3+4
  57 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  58 0022 43F02003 		orr	r3, r3, #32
  59 0026 1370     		strb	r3, [r2]
 408:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG  |= CapSense_BufCH0_ACT_PWR_EN;
  60              		.loc 1 408 0
  61 0028 103A     		subs	r2, r2, #16
  62 002a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  63 002c 43F02003 		orr	r3, r3, #32
  64 0030 1370     		strb	r3, [r2]
 409:Generated_Source\PSoC5/CapSense.c ****         
 410:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 411:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_STBY_PWRMGR_REG |= CapSense_BufCH1_STBY_PWR_EN;
 412:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_ACT_PWRMGR_REG  |= CapSense_BufCH1_ACT_PWR_EN;
 413:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 414:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
 415:Generated_Source\PSoC5/CapSense.c ****     
 416:Generated_Source\PSoC5/CapSense.c ****     /* Set reference on AMux Bus */
 417:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 418:Generated_Source\PSoC5/CapSense.c ****         /* Connect Vdac to AMux Bus */
 419:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
 420:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 421:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_VREF_CHANNEL);
 422:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 423:Generated_Source\PSoC5/CapSense.c ****         
 424:Generated_Source\PSoC5/CapSense.c ****     #else
 425:Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 426:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
  65              		.loc 1 426 0
  66 0032 02F5A652 		add	r2, r2, #5312
  67 0036 0732     		adds	r2, r2, #7
  68 0038 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  69 003a 43F00103 		orr	r3, r3, #1
  70 003e 1370     		strb	r3, [r2]
 427:Generated_Source\PSoC5/CapSense.c ****         
 428:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 429:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 430:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 431:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)*/
 432:Generated_Source\PSoC5/CapSense.c ****     
 433:Generated_Source\PSoC5/CapSense.c ****     CyExitCriticalSection(enableInterrupts);
  71              		.loc 1 433 0
  72 0040 2046     		mov	r0, r4
  73 0042 FFF7FEFF 		bl	CyExitCriticalSection
  74              	.LVL5:
 434:Generated_Source\PSoC5/CapSense.c ****     
 435:Generated_Source\PSoC5/CapSense.c ****     /* Enable interrupt */
 436:Generated_Source\PSoC5/CapSense.c ****     CyIntEnable(CapSense_IsrCH0_ISR_NUMBER);
  75              		.loc 1 436 0
  76 0046 0122     		movs	r2, #1
  77 0048 054B     		ldr	r3, .L3+8
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 10


  78 004a 1A60     		str	r2, [r3]
 437:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 438:Generated_Source\PSoC5/CapSense.c ****         CyIntEnable(CapSense_IsrCH1_ISR_NUMBER);
 439:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 440:Generated_Source\PSoC5/CapSense.c ****     
 441:Generated_Source\PSoC5/CapSense.c ****     /* Set CapSense Enable state */
 442:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_CAPSENSE_EN;
  79              		.loc 1 442 0
  80 004c 054A     		ldr	r2, .L3+12
  81 004e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  82 0050 43F08003 		orr	r3, r3, #128
  83 0054 1370     		strb	r3, [r2]
  84 0056 10BD     		pop	{r4, pc}
  85              	.LVL6:
  86              	.L4:
  87              		.align	2
  88              	.L3:
  89 0058 9B640040 		.word	1073767579
  90 005c BB430040 		.word	1073759163
  91 0060 00E100E0 		.word	-536813312
  92 0064 79640040 		.word	1073767545
  93              		.cfi_endproc
  94              	.LFE1:
  95              		.size	CapSense_Enable, .-CapSense_Enable
  96              		.section	.text.CapSense_FindNextSensor,"ax",%progbits
  97              		.align	2
  98              		.global	CapSense_FindNextSensor
  99              		.thumb
 100              		.thumb_func
 101              		.type	CapSense_FindNextSensor, %function
 102              	CapSense_FindNextSensor:
 103              	.LFB4:
 443:Generated_Source\PSoC5/CapSense.c **** }
 444:Generated_Source\PSoC5/CapSense.c **** 
 445:Generated_Source\PSoC5/CapSense.c **** 
 446:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 447:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Start
 448:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 449:Generated_Source\PSoC5/CapSense.c **** *
 450:Generated_Source\PSoC5/CapSense.c **** * Summary:
 451:Generated_Source\PSoC5/CapSense.c **** *  Initializes registers and starts the CSD method of CapSense component. Reset 
 452:Generated_Source\PSoC5/CapSense.c **** *  all sensors to an inactive state. Enables interrupts for sensors scanning.
 453:Generated_Source\PSoC5/CapSense.c **** *  When Auto Tuning (SmartSense) mode is selected the tuning procedure is 
 454:Generated_Source\PSoC5/CapSense.c **** *  applied for all sensors.
 455:Generated_Source\PSoC5/CapSense.c **** *
 456:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 457:Generated_Source\PSoC5/CapSense.c **** *  None
 458:Generated_Source\PSoC5/CapSense.c **** *
 459:Generated_Source\PSoC5/CapSense.c **** * Return:
 460:Generated_Source\PSoC5/CapSense.c **** *  None
 461:Generated_Source\PSoC5/CapSense.c **** *
 462:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 463:Generated_Source\PSoC5/CapSense.c **** *  CapSense_initVar - used to check initial configuration, modified on 
 464:Generated_Source\PSoC5/CapSense.c **** *  first function call.
 465:Generated_Source\PSoC5/CapSense.c **** *  CapSense_lowLevelTuningDone - used to notify the Tuner GUI that 
 466:Generated_Source\PSoC5/CapSense.c **** *  tuning of scanning parameters are done.
 467:Generated_Source\PSoC5/CapSense.c **** *
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 11


 468:Generated_Source\PSoC5/CapSense.c **** * Reentrant:
 469:Generated_Source\PSoC5/CapSense.c **** *  No
 470:Generated_Source\PSoC5/CapSense.c **** *
 471:Generated_Source\PSoC5/CapSense.c **** * Note:
 472:Generated_Source\PSoC5/CapSense.c **** *  All widgets are enabled by default except proximity widgets. Proximity widgets 
 473:Generated_Source\PSoC5/CapSense.c **** *  must be manually enabled as their long scan time is incompatible 
 474:Generated_Source\PSoC5/CapSense.c **** *  with the fast response required of other widget types. 
 475:Generated_Source\PSoC5/CapSense.c **** *
 476:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 477:Generated_Source\PSoC5/CapSense.c **** void CapSense_Start(void)  
 478:Generated_Source\PSoC5/CapSense.c **** {
 479:Generated_Source\PSoC5/CapSense.c ****     if (CapSense_initVar == 0u)
 480:Generated_Source\PSoC5/CapSense.c ****     {
 481:Generated_Source\PSoC5/CapSense.c ****         CapSense_Init();
 482:Generated_Source\PSoC5/CapSense.c ****         CapSense_initVar = 1u;
 483:Generated_Source\PSoC5/CapSense.c ****     }
 484:Generated_Source\PSoC5/CapSense.c ****     CapSense_Enable();
 485:Generated_Source\PSoC5/CapSense.c ****     
 486:Generated_Source\PSoC5/CapSense.c ****     /* AutoTunning start */
 487:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
 488:Generated_Source\PSoC5/CapSense.c ****         /* AutoTune by sensor or pair of sensor basis */
 489:Generated_Source\PSoC5/CapSense.c ****         CapSense_AutoTune();
 490:Generated_Source\PSoC5/CapSense.c ****         CapSense_lowLevelTuningDone = 1u;
 491:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
 492:Generated_Source\PSoC5/CapSense.c **** }
 493:Generated_Source\PSoC5/CapSense.c **** 
 494:Generated_Source\PSoC5/CapSense.c **** 
 495:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 496:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Stop
 497:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 498:Generated_Source\PSoC5/CapSense.c **** *
 499:Generated_Source\PSoC5/CapSense.c **** * Summary:
 500:Generated_Source\PSoC5/CapSense.c **** *  Stops the sensors scanner, disables internal interrupts, and resets all 
 501:Generated_Source\PSoC5/CapSense.c **** *  sensors to an inactive state. Disables Active mode power template bits for 
 502:Generated_Source\PSoC5/CapSense.c **** *  number of component used within CapSense.
 503:Generated_Source\PSoC5/CapSense.c **** *
 504:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 505:Generated_Source\PSoC5/CapSense.c **** *  None
 506:Generated_Source\PSoC5/CapSense.c **** *
 507:Generated_Source\PSoC5/CapSense.c **** * Return:
 508:Generated_Source\PSoC5/CapSense.c **** *  None
 509:Generated_Source\PSoC5/CapSense.c **** *
 510:Generated_Source\PSoC5/CapSense.c **** * Side Effects:
 511:Generated_Source\PSoC5/CapSense.c **** *  This function should be called after scans will be completed.
 512:Generated_Source\PSoC5/CapSense.c **** *
 513:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 514:Generated_Source\PSoC5/CapSense.c **** void CapSense_Stop(void) 
 515:Generated_Source\PSoC5/CapSense.c **** {
 516:Generated_Source\PSoC5/CapSense.c ****     /* Stop Capsensing */
 517:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG &= (uint8)(~CapSense_CTRL_START);
 518:Generated_Source\PSoC5/CapSense.c ****     
 519:Generated_Source\PSoC5/CapSense.c ****     /* Disable interrupt */
 520:Generated_Source\PSoC5/CapSense.c ****     CyIntDisable(CapSense_IsrCH0_ISR_NUMBER);
 521:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 522:Generated_Source\PSoC5/CapSense.c ****         CyIntDisable(CapSense_IsrCH1_ISR_NUMBER);
 523:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 524:Generated_Source\PSoC5/CapSense.c ****     
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 12


 525:Generated_Source\PSoC5/CapSense.c ****     /* Clear all sensors */
 526:Generated_Source\PSoC5/CapSense.c ****     CapSense_ClearSensors();
 527:Generated_Source\PSoC5/CapSense.c ****     
 528:Generated_Source\PSoC5/CapSense.c ****     /* Disable Prescaler */
 529:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 530:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing  for UDB */
 531:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)        
 532:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_ACT_PWRMGR_REG  &= ~CapSense_PRESCALER_ACT_PWR_EN;
 533:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_STBY_PWRMGR_REG &= ~CapSense_PRESCALER_STBY_PWR_EN;
 534:Generated_Source\PSoC5/CapSense.c ****         
 535:Generated_Source\PSoC5/CapSense.c ****     #else
 536:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 537:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 538:Generated_Source\PSoC5/CapSense.c ****     
 539:Generated_Source\PSoC5/CapSense.c ****     /* Disable ScanSpeed */
 540:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_AUX_CONTROL_REG &= (uint8)(~CapSense_SCANSPEED_CTRL_ENABLE);
 541:Generated_Source\PSoC5/CapSense.c ****     
 542:Generated_Source\PSoC5/CapSense.c ****     /* Disable Measure CH0 */
 543:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 544:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 545:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ACT_PWRMGR_REG  &= ~CapSense_PWM_CH0_ACT_PWR_EN;
 546:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_STBY_PWRMGR_REG &= ~CapSense_PWM_CH0_STBY_PWR_EN;
 547:Generated_Source\PSoC5/CapSense.c **** 
 548:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 549:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ACT_PWRMGR_REG  &= ~CapSense_RAW_CH0_ACT_PWR_EN;
 550:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_STBY_PWRMGR_REG &= ~CapSense_RAW_CH0_STBY_PWR_EN;
 551:Generated_Source\PSoC5/CapSense.c **** 
 552:Generated_Source\PSoC5/CapSense.c ****     #else
 553:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 554:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 555:Generated_Source\PSoC5/CapSense.c ****         
 556:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 557:Generated_Source\PSoC5/CapSense.c ****     
 558:Generated_Source\PSoC5/CapSense.c ****     /* Disable Measure CH1 */
 559:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 560:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 561:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 562:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ACT_PWRMGR_REG  &= ~CapSense_PWM_CH1_ACT_PWR_EN;
 563:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_STBY_PWRMGR_REG &= ~CapSense_PWM_CH1_STBY_PWR_EN;
 564:Generated_Source\PSoC5/CapSense.c ****     
 565:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 566:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ACT_PWRMGR_REG  &= ~CapSense_RAW_CH1_ACT_PWR_EN;
 567:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_STBY_PWRMGR_REG &= ~CapSense_RAW_CH1_STBY_PWR_EN;
 568:Generated_Source\PSoC5/CapSense.c ****            
 569:Generated_Source\PSoC5/CapSense.c ****         #else
 570:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 571:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 572:Generated_Source\PSoC5/CapSense.c ****         
 573:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 574:Generated_Source\PSoC5/CapSense.c ****     
 575:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 576:Generated_Source\PSoC5/CapSense.c ****     
 577:Generated_Source\PSoC5/CapSense.c ****     /* Disable the Clock */
 578:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CLOCK_SOURCE == CapSense_INTERNAL_CLOCK)
 579:Generated_Source\PSoC5/CapSense.c ****        CapSense_IntClock_Stop();
 580:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 581:Generated_Source\PSoC5/CapSense.c ****     
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 13


 582:Generated_Source\PSoC5/CapSense.c ****     /* Disable power from Cmp and Idac */
 583:Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Stop();
 584:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 585:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Stop();
 586:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 587:Generated_Source\PSoC5/CapSense.c ****     
 588:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 589:Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Stop();
 590:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 591:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Stop();
 592:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 593:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */    
 594:Generated_Source\PSoC5/CapSense.c ****     
 595:Generated_Source\PSoC5/CapSense.c ****     /* Disable Vref if as VDAC */
 596:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 597:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Stop();
 598:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 599:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Stop();
 600:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE */
 601:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_VREF_OPTIONS */
 602:Generated_Source\PSoC5/CapSense.c **** 
 603:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
 604:Generated_Source\PSoC5/CapSense.c ****         /* The Idac turn off before */
 605:Generated_Source\PSoC5/CapSense.c ****     #else
 606:Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 607:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_CAPS_CFG0_REG &= (uint8)(~CapSense_CSBUF_ENABLE);
 608:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_ACT_PWR_EN);
 609:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_STBY_PWR_EN);
 610:Generated_Source\PSoC5/CapSense.c ****         
 611:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 612:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG &= (uint8)(~CapSense_CSBUF_ENABLE);
 613:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH1_ACT_PWR_EN);
 614:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH1_STBY_PWR_EN);
 615:Generated_Source\PSoC5/CapSense.c ****         #endif  /*(CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 616:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
 617:Generated_Source\PSoC5/CapSense.c ****     
 618:Generated_Source\PSoC5/CapSense.c ****     /* Set CapSense Disable state */
 619:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG &= (uint8)(~CapSense_CTRL_CAPSENSE_EN);
 620:Generated_Source\PSoC5/CapSense.c **** }
 621:Generated_Source\PSoC5/CapSense.c **** 
 622:Generated_Source\PSoC5/CapSense.c **** 
 623:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 624:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
 625:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_FindNextSensor
 626:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
 627:Generated_Source\PSoC5/CapSense.c ****     *
 628:Generated_Source\PSoC5/CapSense.c ****     * Summary:
 629:Generated_Source\PSoC5/CapSense.c ****     *  Finds next sensor to scan. 
 630:Generated_Source\PSoC5/CapSense.c ****     *
 631:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
 632:Generated_Source\PSoC5/CapSense.c ****     *  snsIndex:  Current index of sensor.
 633:Generated_Source\PSoC5/CapSense.c ****     *
 634:Generated_Source\PSoC5/CapSense.c ****     * Return:
 635:Generated_Source\PSoC5/CapSense.c ****     *  Returns the next sensor index to scan.
 636:Generated_Source\PSoC5/CapSense.c ****     *
 637:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
 638:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[ ] - used to store bit masks of enabled 
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 14


 639:Generated_Source\PSoC5/CapSense.c ****     *  sensors.
 640:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 0
 641:Generated_Source\PSoC5/CapSense.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 642:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[1] contains the masked bits for sensors 
 643:Generated_Source\PSoC5/CapSense.c ****     *  8 through 15 (if needed), and so on.
 644:Generated_Source\PSoC5/CapSense.c ****     *    0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 645:Generated_Source\PSoC5/CapSense.c ****     *    1 - sensor scans by CapSense_ScanEnabledWidgets().
 646:Generated_Source\PSoC5/CapSense.c ****     *
 647:Generated_Source\PSoC5/CapSense.c ****     * Note: 
 648:Generated_Source\PSoC5/CapSense.c ****     *  This function has effect on current scanning scanning and should not
 649:Generated_Source\PSoC5/CapSense.c ****     *  be used outisde of component.
 650:Generated_Source\PSoC5/CapSense.c ****     *
 651:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
 652:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_FindNextSensor(uint8 snsIndex) CYREENTRANT
 653:Generated_Source\PSoC5/CapSense.c ****     {
 104              		.loc 1 653 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 109              	.LVL7:
 110              	.L7:
 654:Generated_Source\PSoC5/CapSense.c ****         uint8 pos;
 655:Generated_Source\PSoC5/CapSense.c ****         uint8 enMask;
 656:Generated_Source\PSoC5/CapSense.c ****         
 657:Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor enabled */
 658:Generated_Source\PSoC5/CapSense.c ****         do
 659:Generated_Source\PSoC5/CapSense.c ****         {
 660:Generated_Source\PSoC5/CapSense.c ****             /* Proceed with the next sensor */
 661:Generated_Source\PSoC5/CapSense.c ****             snsIndex++;
 111              		.loc 1 661 0
 112 0000 0130     		adds	r0, r0, #1
 113 0002 C0B2     		uxtb	r0, r0
 114              	.LVL8:
 662:Generated_Source\PSoC5/CapSense.c ****             if(snsIndex == CapSense_TOTAL_SENSOR_COUNT)
 115              		.loc 1 662 0
 116 0004 0128     		cmp	r0, #1
 117 0006 08D0     		beq	.L6
 663:Generated_Source\PSoC5/CapSense.c ****             {
 664:Generated_Source\PSoC5/CapSense.c ****                 break;
 665:Generated_Source\PSoC5/CapSense.c ****             }
 666:Generated_Source\PSoC5/CapSense.c ****             pos = (snsIndex >> 3u);
 118              		.loc 1 666 0
 119 0008 C208     		lsrs	r2, r0, #3
 667:Generated_Source\PSoC5/CapSense.c ****             enMask = 0x01u << (snsIndex & 0x07u);
 120              		.loc 1 667 0
 121 000a 00F00701 		and	r1, r0, #7
 122 000e 0123     		movs	r3, #1
 123 0010 8B40     		lsls	r3, r3, r1
 124              	.LVL9:
 668:Generated_Source\PSoC5/CapSense.c ****         }    
 669:Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[pos] & enMask) == 0u);
 125              		.loc 1 669 0
 126 0012 0249     		ldr	r1, .L8
 127 0014 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 128 0016 1342     		tst	r3, r2
 129 0018 F2D0     		beq	.L7
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 15


 130              	.LVL10:
 131              	.L6:
 670:Generated_Source\PSoC5/CapSense.c ****         
 671:Generated_Source\PSoC5/CapSense.c ****         return snsIndex;
 672:Generated_Source\PSoC5/CapSense.c ****     }
 132              		.loc 1 672 0
 133 001a 7047     		bx	lr
 134              	.L9:
 135              		.align	2
 136              	.L8:
 137 001c 00000000 		.word	.LANCHOR0
 138              		.cfi_endproc
 139              	.LFE4:
 140              		.size	CapSense_FindNextSensor, .-CapSense_FindNextSensor
 141              		.section	.text.CapSense_IsBusy,"ax",%progbits
 142              		.align	2
 143              		.global	CapSense_IsBusy
 144              		.thumb
 145              		.thumb_func
 146              		.type	CapSense_IsBusy, %function
 147              	CapSense_IsBusy:
 148              	.LFB8:
 673:Generated_Source\PSoC5/CapSense.c ****  #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */
 674:Generated_Source\PSoC5/CapSense.c ****  
 675:Generated_Source\PSoC5/CapSense.c ****  
 676:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 677:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
 678:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_FindNextPair
 679:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
 680:Generated_Source\PSoC5/CapSense.c ****     *
 681:Generated_Source\PSoC5/CapSense.c ****     * Summary:
 682:Generated_Source\PSoC5/CapSense.c ****     *  Finds next pair or sensor to scan. Sets condition bits to skip scanning.
 683:Generated_Source\PSoC5/CapSense.c ****     *  
 684:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
 685:Generated_Source\PSoC5/CapSense.c ****     *  snsIndex:  Current index pair of sensors.
 686:Generated_Source\PSoC5/CapSense.c ****     *
 687:Generated_Source\PSoC5/CapSense.c ****     * Return:
 688:Generated_Source\PSoC5/CapSense.c ****     *  Returns the next pair of sensors index to scan.
 689:Generated_Source\PSoC5/CapSense.c ****     *
 690:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
 691:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[ ] - used to store bit masks of enabled 
 692:Generated_Source\PSoC5/CapSense.c ****     *  sensors.
 693:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 0
 694:Generated_Source\PSoC5/CapSense.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 695:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[1] contains the masked bits for sensors 
 696:Generated_Source\PSoC5/CapSense.c ****     *  8 through 15 (if needed), and so on.
 697:Generated_Source\PSoC5/CapSense.c ****     *    0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 698:Generated_Source\PSoC5/CapSense.c ****     *    1 - sensor scans by CapSense_ScanEnabledWidgets().
 699:Generated_Source\PSoC5/CapSense.c ****     *
 700:Generated_Source\PSoC5/CapSense.c ****     * Note: 
 701:Generated_Source\PSoC5/CapSense.c ****     *  This function has effect on control signals set for scanning and should not
 702:Generated_Source\PSoC5/CapSense.c ****     *  be used outisde of component.
 703:Generated_Source\PSoC5/CapSense.c ****     *
 704:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
 705:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_FindNextPair(uint8 snsIndex) CYREENTRANT
 706:Generated_Source\PSoC5/CapSense.c ****     {
 707:Generated_Source\PSoC5/CapSense.c ****         uint8 posCh;
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 16


 708:Generated_Source\PSoC5/CapSense.c ****         uint8 enMaskCh;
 709:Generated_Source\PSoC5/CapSense.c ****         uint8 newRegValue;
 710:Generated_Source\PSoC5/CapSense.c ****         uint8 indexCh0 = snsIndex;
 711:Generated_Source\PSoC5/CapSense.c ****         uint8 indexCh1 = snsIndex + CapSense_TOTAL_SENSOR_COUNT__CH0;
 712:Generated_Source\PSoC5/CapSense.c ****         
 713:Generated_Source\PSoC5/CapSense.c ****         /* Find enabled sensor on channel 0 */
 714:Generated_Source\PSoC5/CapSense.c ****         do
 715:Generated_Source\PSoC5/CapSense.c ****         {
 716:Generated_Source\PSoC5/CapSense.c ****             /* Procced the scanning */
 717:Generated_Source\PSoC5/CapSense.c ****             indexCh0++;
 718:Generated_Source\PSoC5/CapSense.c ****             if (indexCh0 >= CapSense_TOTAL_SENSOR_COUNT__CH0)
 719:Generated_Source\PSoC5/CapSense.c ****             {
 720:Generated_Source\PSoC5/CapSense.c ****                 /* Lets hadle now all from CH1 */
 721:Generated_Source\PSoC5/CapSense.c ****                 indexCh0 = CapSense_END_OF_SCAN__CH0;
 722:Generated_Source\PSoC5/CapSense.c ****                 break;
 723:Generated_Source\PSoC5/CapSense.c ****             }
 724:Generated_Source\PSoC5/CapSense.c ****             
 725:Generated_Source\PSoC5/CapSense.c ****             posCh = (indexCh0 >> 3u);
 726:Generated_Source\PSoC5/CapSense.c ****             enMaskCh = 0x01u << (indexCh0 & 0x07u);
 727:Generated_Source\PSoC5/CapSense.c ****         }
 728:Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[posCh] & enMaskCh) == 0u);
 729:Generated_Source\PSoC5/CapSense.c ****         
 730:Generated_Source\PSoC5/CapSense.c ****         /* Find enabled sensor on channel 1 */
 731:Generated_Source\PSoC5/CapSense.c ****         do
 732:Generated_Source\PSoC5/CapSense.c ****         {
 733:Generated_Source\PSoC5/CapSense.c ****             /* Procced the scanning */
 734:Generated_Source\PSoC5/CapSense.c ****             indexCh1++;        
 735:Generated_Source\PSoC5/CapSense.c ****             if (indexCh1 >= CapSense_TOTAL_SENSOR_COUNT)
 736:Generated_Source\PSoC5/CapSense.c ****             {
 737:Generated_Source\PSoC5/CapSense.c ****                 /* Lets hadle now all from CH0 */
 738:Generated_Source\PSoC5/CapSense.c ****                 indexCh1 = CapSense_END_OF_SCAN__CH1;
 739:Generated_Source\PSoC5/CapSense.c ****                 break;
 740:Generated_Source\PSoC5/CapSense.c ****             }
 741:Generated_Source\PSoC5/CapSense.c ****             
 742:Generated_Source\PSoC5/CapSense.c ****             posCh = (indexCh1 >> 3u);
 743:Generated_Source\PSoC5/CapSense.c ****             enMaskCh = 0x01u << (indexCh1 & 0x07u);
 744:Generated_Source\PSoC5/CapSense.c ****         } 
 745:Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[posCh] & enMaskCh) == 0u);
 746:Generated_Source\PSoC5/CapSense.c ****         
 747:Generated_Source\PSoC5/CapSense.c ****         indexCh1 -= CapSense_TOTAL_SENSOR_COUNT__CH0;
 748:Generated_Source\PSoC5/CapSense.c ****         
 749:Generated_Source\PSoC5/CapSense.c ****         /* Find the pair to scan */
 750:Generated_Source\PSoC5/CapSense.c ****         if(indexCh0 == indexCh1)
 751:Generated_Source\PSoC5/CapSense.c ****         {
 752:Generated_Source\PSoC5/CapSense.c ****             /* Scans TWO Channels */
 753:Generated_Source\PSoC5/CapSense.c ****             snsIndex = indexCh0;
 754:Generated_Source\PSoC5/CapSense.c ****             
 755:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= (CapSense_CTRL_WINDOW_EN__CH0 | 
 756:Generated_Source\PSoC5/CapSense.c ****                                              CapSense_CTRL_WINDOW_EN__CH1);
 757:Generated_Source\PSoC5/CapSense.c ****         }
 758:Generated_Source\PSoC5/CapSense.c ****         else if(indexCh0 < indexCh1)
 759:Generated_Source\PSoC5/CapSense.c ****         {
 760:Generated_Source\PSoC5/CapSense.c ****            /* Scans Channel ONE only */
 761:Generated_Source\PSoC5/CapSense.c ****            snsIndex = indexCh0;
 762:Generated_Source\PSoC5/CapSense.c ****            
 763:Generated_Source\PSoC5/CapSense.c ****             newRegValue = CapSense_CONTROL_REG;
 764:Generated_Source\PSoC5/CapSense.c ****             newRegValue |= CapSense_CTRL_WINDOW_EN__CH0;
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 17


 765:Generated_Source\PSoC5/CapSense.c ****             newRegValue &= ~CapSense_CTRL_WINDOW_EN__CH1;
 766:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG = newRegValue;
 767:Generated_Source\PSoC5/CapSense.c ****         }
 768:Generated_Source\PSoC5/CapSense.c ****         else
 769:Generated_Source\PSoC5/CapSense.c ****         {
 770:Generated_Source\PSoC5/CapSense.c ****             /* Scans Channel TWO only */
 771:Generated_Source\PSoC5/CapSense.c ****             snsIndex = indexCh1;
 772:Generated_Source\PSoC5/CapSense.c ****             
 773:Generated_Source\PSoC5/CapSense.c ****             newRegValue = CapSense_CONTROL_REG;
 774:Generated_Source\PSoC5/CapSense.c ****             newRegValue |= CapSense_CTRL_WINDOW_EN__CH1;
 775:Generated_Source\PSoC5/CapSense.c ****             newRegValue &= ~CapSense_CTRL_WINDOW_EN__CH0;
 776:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG = newRegValue;
 777:Generated_Source\PSoC5/CapSense.c ****         }
 778:Generated_Source\PSoC5/CapSense.c ****         
 779:Generated_Source\PSoC5/CapSense.c ****         return (snsIndex);
 780:Generated_Source\PSoC5/CapSense.c ****     }
 781:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN */
 782:Generated_Source\PSoC5/CapSense.c **** 
 783:Generated_Source\PSoC5/CapSense.c **** 
 784:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 785:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_SetScanSlotSettings
 786:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 787:Generated_Source\PSoC5/CapSense.c **** *
 788:Generated_Source\PSoC5/CapSense.c **** * Summary:
 789:Generated_Source\PSoC5/CapSense.c **** *  Sets the scan settings of the selected scan slot (sensor or pair of sensors). 
 790:Generated_Source\PSoC5/CapSense.c **** *  The scan settings incorporate IDAC value (for IDAC configurations) for every 
 791:Generated_Source\PSoC5/CapSense.c **** *  sensor and resolution. The resolution is the same for all sensors within 
 792:Generated_Source\PSoC5/CapSense.c **** *  widget.
 793:Generated_Source\PSoC5/CapSense.c **** *
 794:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 795:Generated_Source\PSoC5/CapSense.c **** *  slot:  Scan slot number (sensor or pair of sensors).
 796:Generated_Source\PSoC5/CapSense.c **** *
 797:Generated_Source\PSoC5/CapSense.c **** * Return:
 798:Generated_Source\PSoC5/CapSense.c **** *  None
 799:Generated_Source\PSoC5/CapSense.c **** *
 800:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 801:Generated_Source\PSoC5/CapSense.c **** *  CapSense_idacSettings[] - used to store idac value for every sensor.
 802:Generated_Source\PSoC5/CapSense.c **** *  CapSense_widgetResolution[] - used to store scan resolution of every 
 803:Generated_Source\PSoC5/CapSense.c **** *  widget.
 804:Generated_Source\PSoC5/CapSense.c **** *
 805:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 806:Generated_Source\PSoC5/CapSense.c **** void CapSense_SetScanSlotSettings(uint8 slot) CYREENTRANT
 807:Generated_Source\PSoC5/CapSense.c **** {
 808:Generated_Source\PSoC5/CapSense.c ****     uint8 widget;
 809:Generated_Source\PSoC5/CapSense.c ****     
 810:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 811:Generated_Source\PSoC5/CapSense.c ****         /* Define widget sensor belongs to */
 812:Generated_Source\PSoC5/CapSense.c ****         widget = CapSense_widgetNumber[slot];
 813:Generated_Source\PSoC5/CapSense.c ****         
 814:Generated_Source\PSoC5/CapSense.c ****         /* Set Idac Value */
 815:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 816:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_idacSettings[slot]);
 817:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 818:Generated_Source\PSoC5/CapSense.c ****         
 819:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 820:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 821:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PWM_CH0_PERIOD_PTR,
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 18


 822:Generated_Source\PSoC5/CapSense.c ****                 ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_LO
 823:Generated_Source\PSoC5/CapSense.c ****         #else
 824:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH0_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 825:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 826:Generated_Source\PSoC5/CapSense.c **** 
 827:Generated_Source\PSoC5/CapSense.c ****         #if ( (CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 828:Generated_Source\PSoC5/CapSense.c ****               (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) )
 829:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider[slot]);
 830:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
 831:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider);
 832:Generated_Source\PSoC5/CapSense.c ****         #endif /* ((CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 833:Generated_Source\PSoC5/CapSense.c ****                *   (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING))
 834:Generated_Source\PSoC5/CapSense.c ****                */
 835:Generated_Source\PSoC5/CapSense.c **** 
 836:Generated_Source\PSoC5/CapSense.c ****     #else
 837:Generated_Source\PSoC5/CapSense.c ****         if(slot < CapSense_TOTAL_SENSOR_COUNT__CH0)
 838:Generated_Source\PSoC5/CapSense.c ****         {
 839:Generated_Source\PSoC5/CapSense.c ****             /* Define widget sensor belongs to */
 840:Generated_Source\PSoC5/CapSense.c ****             widget = CapSense_widgetNumber[slot];
 841:Generated_Source\PSoC5/CapSense.c ****             
 842:Generated_Source\PSoC5/CapSense.c ****             /* Set Idac Value */
 843:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE)
 844:Generated_Source\PSoC5/CapSense.c ****                 CapSense_IdacCH0_SetValue(CapSense_idacSettings[slot]);
 845:Generated_Source\PSoC5/CapSense.c ****             #endif  /* CapSense_CURRENT_SOURCE */
 846:Generated_Source\PSoC5/CapSense.c ****             
 847:Generated_Source\PSoC5/CapSense.c ****             /* Set Pwm Resolution */
 848:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 849:Generated_Source\PSoC5/CapSense.c ****                 CY_SET_REG16(CapSense_PWM_CH0_PERIOD_PTR,
 850:Generated_Source\PSoC5/CapSense.c ****                   ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_
 851:Generated_Source\PSoC5/CapSense.c ****             #else
 852:Generated_Source\PSoC5/CapSense.c ****                 CapSense_PWM_CH0_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 853:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)*/ 
 854:Generated_Source\PSoC5/CapSense.c ****         }
 855:Generated_Source\PSoC5/CapSense.c ****         
 856:Generated_Source\PSoC5/CapSense.c ****         if(slot < CapSense_TOTAL_SENSOR_COUNT__CH1)
 857:Generated_Source\PSoC5/CapSense.c ****         {
 858:Generated_Source\PSoC5/CapSense.c ****             widget = CapSense_widgetNumber[slot+CapSense_TOTAL_SENSOR_COUNT__CH0];
 859:Generated_Source\PSoC5/CapSense.c ****         
 860:Generated_Source\PSoC5/CapSense.c ****             /* Set Idac Value */
 861:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE)
 862:Generated_Source\PSoC5/CapSense.c ****                 CapSense_IdacCH1_SetValue(CapSense_idacSettings[slot+
 863:Generated_Source\PSoC5/CapSense.c ****                                                                              CapSense_TOTAL_SENSOR_
 864:Generated_Source\PSoC5/CapSense.c ****             #endif  /* CapSense_CURRENT_SOURCE */
 865:Generated_Source\PSoC5/CapSense.c ****             
 866:Generated_Source\PSoC5/CapSense.c ****             /* Set Pwm Resolution */
 867:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 868:Generated_Source\PSoC5/CapSense.c ****                 CY_SET_REG16(CapSense_PWM_CH1_PERIOD_PTR,
 869:Generated_Source\PSoC5/CapSense.c ****                   ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_
 870:Generated_Source\PSoC5/CapSense.c ****             #else
 871:Generated_Source\PSoC5/CapSense.c ****                 CapSense_PWM_CH1_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 872:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)*/ 
 873:Generated_Source\PSoC5/CapSense.c ****         }
 874:Generated_Source\PSoC5/CapSense.c **** 
 875:Generated_Source\PSoC5/CapSense.c ****         #if ( (CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 876:Generated_Source\PSoC5/CapSense.c ****               (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) )
 877:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider[slot]);
 878:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 19


 879:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider);
 880:Generated_Source\PSoC5/CapSense.c ****         #endif /* ((CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 881:Generated_Source\PSoC5/CapSense.c ****                *   (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING))
 882:Generated_Source\PSoC5/CapSense.c ****                */
 883:Generated_Source\PSoC5/CapSense.c **** 
 884:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 885:Generated_Source\PSoC5/CapSense.c **** }
 886:Generated_Source\PSoC5/CapSense.c **** 
 887:Generated_Source\PSoC5/CapSense.c **** 
 888:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 889:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ScanSensor
 890:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 891:Generated_Source\PSoC5/CapSense.c **** *
 892:Generated_Source\PSoC5/CapSense.c **** * Summary:
 893:Generated_Source\PSoC5/CapSense.c **** *  Sets scan settings and starts scanning a sensor or pair of combined sensors
 894:Generated_Source\PSoC5/CapSense.c **** *  on each channel. If two channels are configured, two sensors may be scanned 
 895:Generated_Source\PSoC5/CapSense.c **** *  at the same time. After scanning is complete the isr copies the measured 
 896:Generated_Source\PSoC5/CapSense.c **** *  sensor raw data to the global array. Use of the isr ensures this function 
 897:Generated_Source\PSoC5/CapSense.c **** *  is non-blocking. Each sensor has a unique number within the sensor array. 
 898:Generated_Source\PSoC5/CapSense.c **** *  This number is assigned by the CapSense customizer in sequence.
 899:Generated_Source\PSoC5/CapSense.c **** *
 900:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 901:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
 902:Generated_Source\PSoC5/CapSense.c **** *
 903:Generated_Source\PSoC5/CapSense.c **** * Return:
 904:Generated_Source\PSoC5/CapSense.c **** *  None
 905:Generated_Source\PSoC5/CapSense.c **** *
 906:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 907:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
 908:Generated_Source\PSoC5/CapSense.c **** *  Sets busy status(scan in progress) and mode of scan as single scan.
 909:Generated_Source\PSoC5/CapSense.c **** *  For two channel design the additional bits are set to define if scan a 
 910:Generated_Source\PSoC5/CapSense.c **** *  pair of sensors or single one.
 911:Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorIndex - used to store sensor scanning sensor number.
 912:Generated_Source\PSoC5/CapSense.c **** *  Sets to provided sensor argument.
 913:Generated_Source\PSoC5/CapSense.c **** *
 914:Generated_Source\PSoC5/CapSense.c **** * Reentrant:
 915:Generated_Source\PSoC5/CapSense.c **** *  No
 916:Generated_Source\PSoC5/CapSense.c **** *
 917:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 918:Generated_Source\PSoC5/CapSense.c **** void CapSense_ScanSensor(uint8 sensor)  
 919:Generated_Source\PSoC5/CapSense.c **** {
 920:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 921:Generated_Source\PSoC5/CapSense.c ****     CapSense_csv = 0u;
 922:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = sensor;
 923:Generated_Source\PSoC5/CapSense.c ****     
 924:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 925:Generated_Source\PSoC5/CapSense.c ****         /* Start of sensor scan */
 926:Generated_Source\PSoC5/CapSense.c ****         CapSense_csv = (CapSense_SW_STS_BUSY | CapSense_SW_CTRL_SINGLE_SCAN);
 927:Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan(sensor);
 928:Generated_Source\PSoC5/CapSense.c ****         
 929:Generated_Source\PSoC5/CapSense.c ****     #else
 930:Generated_Source\PSoC5/CapSense.c ****         /* CH0: check end of scan conditions */
 931:Generated_Source\PSoC5/CapSense.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH0)
 932:Generated_Source\PSoC5/CapSense.c ****         {
 933:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH0;
 934:Generated_Source\PSoC5/CapSense.c ****         }
 935:Generated_Source\PSoC5/CapSense.c ****         else
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 20


 936:Generated_Source\PSoC5/CapSense.c ****         {
 937:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~CapSense_CTRL_WINDOW_EN__CH0;
 938:Generated_Source\PSoC5/CapSense.c ****         }
 939:Generated_Source\PSoC5/CapSense.c ****         
 940:Generated_Source\PSoC5/CapSense.c ****         /* CH1: check end of scan conditions */
 941:Generated_Source\PSoC5/CapSense.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH1)
 942:Generated_Source\PSoC5/CapSense.c ****         {
 943:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH1;
 944:Generated_Source\PSoC5/CapSense.c ****         }
 945:Generated_Source\PSoC5/CapSense.c ****         else
 946:Generated_Source\PSoC5/CapSense.c ****         {
 947:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~CapSense_CTRL_WINDOW_EN__CH1;
 948:Generated_Source\PSoC5/CapSense.c ****         }
 949:Generated_Source\PSoC5/CapSense.c ****         
 950:Generated_Source\PSoC5/CapSense.c ****         /* Start sensor scan */
 951:Generated_Source\PSoC5/CapSense.c ****         if( ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) != 0u) || 
 952:Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) != 0u) )
 953:Generated_Source\PSoC5/CapSense.c ****         {
 954:Generated_Source\PSoC5/CapSense.c ****         
 955:Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= (CapSense_SW_STS_BUSY | CapSense_SW_CTRL_SINGLE_SCAN);
 956:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(sensor);
 957:Generated_Source\PSoC5/CapSense.c ****         }
 958:Generated_Source\PSoC5/CapSense.c ****         
 959:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 960:Generated_Source\PSoC5/CapSense.c **** }
 961:Generated_Source\PSoC5/CapSense.c **** 
 962:Generated_Source\PSoC5/CapSense.c **** 
 963:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 964:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ScanEnableWidgets
 965:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 966:Generated_Source\PSoC5/CapSense.c **** *
 967:Generated_Source\PSoC5/CapSense.c **** * Summary:
 968:Generated_Source\PSoC5/CapSense.c **** *  Scans all of the enabled widgets. Starts scanning a sensor or pair of sensors 
 969:Generated_Source\PSoC5/CapSense.c **** *  within enabled widget. The isr proceeding scanning next sensor or pair till 
 970:Generated_Source\PSoC5/CapSense.c **** *  all enabled widgets will be scanned. Use of the isr ensures this function is 
 971:Generated_Source\PSoC5/CapSense.c **** *  non-blocking. All widgets are enabled by default except proximity widgets. 
 972:Generated_Source\PSoC5/CapSense.c **** *  Proximity widgets must be manually enabled as their long scan time is 
 973:Generated_Source\PSoC5/CapSense.c **** *  incompatible with fast response desired of other widget types.
 974:Generated_Source\PSoC5/CapSense.c **** *
 975:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 976:Generated_Source\PSoC5/CapSense.c **** *  None
 977:Generated_Source\PSoC5/CapSense.c **** *
 978:Generated_Source\PSoC5/CapSense.c **** * Return:
 979:Generated_Source\PSoC5/CapSense.c **** *  None
 980:Generated_Source\PSoC5/CapSense.c **** *
 981:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 982:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
 983:Generated_Source\PSoC5/CapSense.c **** *  Sets busy status(scan in progress) and clears single scan mode.
 984:Generated_Source\PSoC5/CapSense.c **** *  For two channel design the additional bits are set to define if scan a 
 985:Generated_Source\PSoC5/CapSense.c **** *  pair of sensors or single one. 
 986:Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorIndex - used to store sensor scanning sensor number.
 987:Generated_Source\PSoC5/CapSense.c **** *  Sets to 0xFF and provided to function CapSense_FindNextSensor or
 988:Generated_Source\PSoC5/CapSense.c **** *  CapSense_FindNextPair, these functions starts with sensor index
 989:Generated_Source\PSoC5/CapSense.c **** *  increment and overflow of uint8 gives desired index 0.
 990:Generated_Source\PSoC5/CapSense.c **** *
 991:Generated_Source\PSoC5/CapSense.c **** * Reentrant:
 992:Generated_Source\PSoC5/CapSense.c **** *  No
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 21


 993:Generated_Source\PSoC5/CapSense.c **** *
 994:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 995:Generated_Source\PSoC5/CapSense.c **** void CapSense_ScanEnabledWidgets(void) 
 996:Generated_Source\PSoC5/CapSense.c **** {
 997:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 998:Generated_Source\PSoC5/CapSense.c ****     CapSense_csv = 0u;
 999:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = 0xFFu;
1000:Generated_Source\PSoC5/CapSense.c ****     
1001:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1002:Generated_Source\PSoC5/CapSense.c ****         /* Find next sensor */
1003:Generated_Source\PSoC5/CapSense.c ****         CapSense_sensorIndex = CapSense_FindNextSensor(CapSense_sensorIndex);
1004:Generated_Source\PSoC5/CapSense.c **** 
1005:Generated_Source\PSoC5/CapSense.c ****         /* Check end of scan condition */
1006:Generated_Source\PSoC5/CapSense.c ****         if(CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT)
1007:Generated_Source\PSoC5/CapSense.c ****         {
1008:Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= CapSense_SW_STS_BUSY;
1009:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
1010:Generated_Source\PSoC5/CapSense.c ****         }
1011:Generated_Source\PSoC5/CapSense.c ****         
1012:Generated_Source\PSoC5/CapSense.c ****     #else
1013:Generated_Source\PSoC5/CapSense.c ****         /* Find next sensor and set proper control register */
1014:Generated_Source\PSoC5/CapSense.c ****         CapSense_sensorIndex = CapSense_FindNextPair(CapSense_sensorIndex);
1015:Generated_Source\PSoC5/CapSense.c ****         
1016:Generated_Source\PSoC5/CapSense.c ****         /* Start sensor scan */
1017:Generated_Source\PSoC5/CapSense.c ****         if((CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT__CH0) || 
1018:Generated_Source\PSoC5/CapSense.c ****            (CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT__CH1))
1019:Generated_Source\PSoC5/CapSense.c ****         {
1020:Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= CapSense_SW_STS_BUSY;
1021:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
1022:Generated_Source\PSoC5/CapSense.c ****         }
1023:Generated_Source\PSoC5/CapSense.c ****         
1024:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
1025:Generated_Source\PSoC5/CapSense.c **** }
1026:Generated_Source\PSoC5/CapSense.c **** 
1027:Generated_Source\PSoC5/CapSense.c **** 
1028:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1029:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_IsBusy
1030:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1031:Generated_Source\PSoC5/CapSense.c **** *
1032:Generated_Source\PSoC5/CapSense.c **** * Summary:
1033:Generated_Source\PSoC5/CapSense.c **** *  Returns the state of CapSense component. The 1 means that scanning in 
1034:Generated_Source\PSoC5/CapSense.c **** *  progress and 0 means that scanning is complete.
1035:Generated_Source\PSoC5/CapSense.c **** *
1036:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1037:Generated_Source\PSoC5/CapSense.c **** *  None
1038:Generated_Source\PSoC5/CapSense.c **** *
1039:Generated_Source\PSoC5/CapSense.c **** * Return:
1040:Generated_Source\PSoC5/CapSense.c **** *  Returns the state of scanning. 1 - scanning in progress, 0 - scanning 
1041:Generated_Source\PSoC5/CapSense.c **** *  completed.
1042:Generated_Source\PSoC5/CapSense.c **** *
1043:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1044:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
1045:Generated_Source\PSoC5/CapSense.c **** *  Checks the busy status.
1046:Generated_Source\PSoC5/CapSense.c **** *
1047:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1048:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_IsBusy(void) 
1049:Generated_Source\PSoC5/CapSense.c **** {
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 22


 149              		.loc 1 1049 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
1050:Generated_Source\PSoC5/CapSense.c ****     return ((0u != (CapSense_csv & CapSense_SW_STS_BUSY)) ? 1u : 0u);
 154              		.loc 1 1050 0
 155 0000 024B     		ldr	r3, .L11
 156 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1051:Generated_Source\PSoC5/CapSense.c **** }
 157              		.loc 1 1051 0
 158 0004 00F00100 		and	r0, r0, #1
 159 0008 7047     		bx	lr
 160              	.L12:
 161 000a 00BF     		.align	2
 162              	.L11:
 163 000c 00000000 		.word	CapSense_csv
 164              		.cfi_endproc
 165              	.LFE8:
 166              		.size	CapSense_IsBusy, .-CapSense_IsBusy
 167              		.section	.text.CapSense_ReadSensorRaw,"ax",%progbits
 168              		.align	2
 169              		.global	CapSense_ReadSensorRaw
 170              		.thumb
 171              		.thumb_func
 172              		.type	CapSense_ReadSensorRaw, %function
 173              	CapSense_ReadSensorRaw:
 174              	.LFB9:
1052:Generated_Source\PSoC5/CapSense.c **** 
1053:Generated_Source\PSoC5/CapSense.c **** 
1054:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1055:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ReadSensorRaw
1056:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1057:Generated_Source\PSoC5/CapSense.c **** *
1058:Generated_Source\PSoC5/CapSense.c **** * Summary:
1059:Generated_Source\PSoC5/CapSense.c **** *  Returns scan sensor raw data from the CapSense_sensorRaw[] array. 
1060:Generated_Source\PSoC5/CapSense.c **** *  Each scan sensor has a unique number within the sensor array. This number 
1061:Generated_Source\PSoC5/CapSense.c **** *  is assigned by the CapSense customizer in sequence.
1062:Generated_Source\PSoC5/CapSense.c **** *
1063:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1064:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1065:Generated_Source\PSoC5/CapSense.c **** *
1066:Generated_Source\PSoC5/CapSense.c **** * Return:
1067:Generated_Source\PSoC5/CapSense.c **** *  Returns current raw data value for defined sensor number.
1068:Generated_Source\PSoC5/CapSense.c **** *
1069:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1070:Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorRaw[] - used to store sensors raw data.
1071:Generated_Source\PSoC5/CapSense.c **** *
1072:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1073:Generated_Source\PSoC5/CapSense.c **** uint16 CapSense_ReadSensorRaw(uint8 sensor) 
1074:Generated_Source\PSoC5/CapSense.c **** {
 175              		.loc 1 1074 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		@ link register save eliminated.
 180              	.LVL11:
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 23


1075:Generated_Source\PSoC5/CapSense.c ****     return (CapSense_sensorRaw[sensor]);
1076:Generated_Source\PSoC5/CapSense.c **** }
 181              		.loc 1 1076 0
 182 0000 014B     		ldr	r3, .L14
 183 0002 33F81000 		ldrh	r0, [r3, r0, lsl #1]
 184              	.LVL12:
 185 0006 7047     		bx	lr
 186              	.L15:
 187              		.align	2
 188              	.L14:
 189 0008 00000000 		.word	CapSense_sensorRaw
 190              		.cfi_endproc
 191              	.LFE9:
 192              		.size	CapSense_ReadSensorRaw, .-CapSense_ReadSensorRaw
 193              		.section	.text.CapSense_EnableSensor,"ax",%progbits
 194              		.align	2
 195              		.global	CapSense_EnableSensor
 196              		.thumb
 197              		.thumb_func
 198              		.type	CapSense_EnableSensor, %function
 199              	CapSense_EnableSensor:
 200              	.LFB11:
1077:Generated_Source\PSoC5/CapSense.c **** 
1078:Generated_Source\PSoC5/CapSense.c **** 
1079:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1080:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ClearSensors
1081:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1082:Generated_Source\PSoC5/CapSense.c **** *
1083:Generated_Source\PSoC5/CapSense.c **** * Summary:
1084:Generated_Source\PSoC5/CapSense.c **** *  Resets all sensors to the non-sampling state by sequentially disconnecting
1085:Generated_Source\PSoC5/CapSense.c **** *  all sensors from Analog MUX Bus and putting them to inactive state.
1086:Generated_Source\PSoC5/CapSense.c **** *
1087:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1088:Generated_Source\PSoC5/CapSense.c **** *  None
1089:Generated_Source\PSoC5/CapSense.c **** *
1090:Generated_Source\PSoC5/CapSense.c **** * Return:
1091:Generated_Source\PSoC5/CapSense.c **** *  None
1092:Generated_Source\PSoC5/CapSense.c **** *
1093:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1094:Generated_Source\PSoC5/CapSense.c **** void CapSense_ClearSensors(void) 
1095:Generated_Source\PSoC5/CapSense.c **** {
1096:Generated_Source\PSoC5/CapSense.c ****     uint8 i;
1097:Generated_Source\PSoC5/CapSense.c ****    
1098:Generated_Source\PSoC5/CapSense.c ****     for (i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
1099:Generated_Source\PSoC5/CapSense.c ****     {
1100:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(i);
1101:Generated_Source\PSoC5/CapSense.c ****     }
1102:Generated_Source\PSoC5/CapSense.c **** }
1103:Generated_Source\PSoC5/CapSense.c **** 
1104:Generated_Source\PSoC5/CapSense.c **** 
1105:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_IS_COMPLEX_SCANSLOTS)
1106:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1107:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_EnableScanSlot
1108:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1109:Generated_Source\PSoC5/CapSense.c ****     *
1110:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1111:Generated_Source\PSoC5/CapSense.c ****     *  Configures the selected slot to measure during the next measurement 
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 24


1112:Generated_Source\PSoC5/CapSense.c ****     *  cycle. The corresponding pin/pins are set to Analog High-Z mode and 
1113:Generated_Source\PSoC5/CapSense.c ****     *  connected to the Analog Mux Bus. This also enables the comparator function.
1114:Generated_Source\PSoC5/CapSense.c ****     *
1115:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1116:Generated_Source\PSoC5/CapSense.c ****     *  slot:  Slot number.
1117:Generated_Source\PSoC5/CapSense.c ****     *
1118:Generated_Source\PSoC5/CapSense.c ****     * Return:
1119:Generated_Source\PSoC5/CapSense.c ****     *  None
1120:Generated_Source\PSoC5/CapSense.c ****     *
1121:Generated_Source\PSoC5/CapSense.c ****     * Global Constants:
1122:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_portTable[]  - used to store the port number that pin 
1123:Generated_Source\PSoC5/CapSense.c ****     *  belongs to for every sensor.
1124:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_maskTable[]  - used to store the pin within the port for 
1125:Generated_Source\PSoC5/CapSense.c ****     *  every sensor.
1126:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_indexTable[] - used to store indexes of complex sensors.
1127:Generated_Source\PSoC5/CapSense.c ****     *  The offset and position in this array are stored in port and mask table for 
1128:Generated_Source\PSoC5/CapSense.c ****     *  complex sensors.
1129:Generated_Source\PSoC5/CapSense.c ****     *  The bit 7 (msb) is used to define the sensor type: single or complex.
1130:Generated_Source\PSoC5/CapSense.c ****     *
1131:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1132:Generated_Source\PSoC5/CapSense.c ****     void CapSense_EnableScanSlot(uint8 slot) CYREENTRANT
1133:Generated_Source\PSoC5/CapSense.c ****     {
1134:Generated_Source\PSoC5/CapSense.c ****         uint8 j;
1135:Generated_Source\PSoC5/CapSense.c ****         uint8 snsNumber;
1136:Generated_Source\PSoC5/CapSense.c ****         const uint8 CYCODE *index;
1137:Generated_Source\PSoC5/CapSense.c ****         /* Read the sensor type: single or complex */
1138:Generated_Source\PSoC5/CapSense.c ****         uint8 snsType = CapSense_portTable[slot];
1139:Generated_Source\PSoC5/CapSense.c ****         
1140:Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor is complex */
1141:Generated_Source\PSoC5/CapSense.c ****         if ((snsType & CapSense_COMPLEX_SS_FLAG) == 0u)
1142:Generated_Source\PSoC5/CapSense.c ****         {
1143:Generated_Source\PSoC5/CapSense.c ****             /* Enable sensor (signle) */
1144:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableSensor(slot);
1145:Generated_Source\PSoC5/CapSense.c ****         }
1146:Generated_Source\PSoC5/CapSense.c ****         else
1147:Generated_Source\PSoC5/CapSense.c ****         {
1148:Generated_Source\PSoC5/CapSense.c ****             /* Enable complex sensor */
1149:Generated_Source\PSoC5/CapSense.c ****             snsType &= ~CapSense_COMPLEX_SS_FLAG;
1150:Generated_Source\PSoC5/CapSense.c ****             index = &CapSense_indexTable[snsType];
1151:Generated_Source\PSoC5/CapSense.c ****             snsNumber = CapSense_maskTable[slot];
1152:Generated_Source\PSoC5/CapSense.c ****                         
1153:Generated_Source\PSoC5/CapSense.c ****             for (j=0u; j < snsNumber; j++)
1154:Generated_Source\PSoC5/CapSense.c ****             {
1155:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableSensor(index[j]);
1156:Generated_Source\PSoC5/CapSense.c ****             }
1157:Generated_Source\PSoC5/CapSense.c ****         } 
1158:Generated_Source\PSoC5/CapSense.c ****     }
1159:Generated_Source\PSoC5/CapSense.c ****     
1160:Generated_Source\PSoC5/CapSense.c ****     
1161:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1162:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_DisableScanSlot
1163:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1164:Generated_Source\PSoC5/CapSense.c ****     *
1165:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1166:Generated_Source\PSoC5/CapSense.c ****     *  Disables the selected slot. The corresponding pin/pis is/are disconnected 
1167:Generated_Source\PSoC5/CapSense.c ****     *  from the Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1168:Generated_Source\PSoC5/CapSense.c ****     *
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 25


1169:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1170:Generated_Source\PSoC5/CapSense.c ****     *  slot:  Slot number.
1171:Generated_Source\PSoC5/CapSense.c ****     *
1172:Generated_Source\PSoC5/CapSense.c ****     * Return:
1173:Generated_Source\PSoC5/CapSense.c ****     *  None
1174:Generated_Source\PSoC5/CapSense.c ****     *
1175:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1176:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_portTable[]  - used to store the port number that pin 
1177:Generated_Source\PSoC5/CapSense.c ****     *  belongs to for every sensor.
1178:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_maskTable[]  - used to store the pin within the port for 
1179:Generated_Source\PSoC5/CapSense.c ****     *  every sensor.
1180:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_indexTable[] - used to store indexes of complex sensors.
1181:Generated_Source\PSoC5/CapSense.c ****     *  The offset and position in this array are stored in port and mask table for 
1182:Generated_Source\PSoC5/CapSense.c ****     *  complex sensors.
1183:Generated_Source\PSoC5/CapSense.c ****     *  The 7bit(msb) is used to define the sensor type: single or complex.
1184:Generated_Source\PSoC5/CapSense.c ****     *
1185:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1186:Generated_Source\PSoC5/CapSense.c ****     void CapSense_DisableScanSlot(uint8 slot) CYREENTRANT
1187:Generated_Source\PSoC5/CapSense.c ****     {
1188:Generated_Source\PSoC5/CapSense.c ****         uint8 j;
1189:Generated_Source\PSoC5/CapSense.c ****         uint8 snsNumber;
1190:Generated_Source\PSoC5/CapSense.c ****         const uint8 CYCODE *index;
1191:Generated_Source\PSoC5/CapSense.c ****         /* Read the sensor type: single or complex */
1192:Generated_Source\PSoC5/CapSense.c ****         uint8 snsType = CapSense_portTable[slot];
1193:Generated_Source\PSoC5/CapSense.c ****         
1194:Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor is complex */
1195:Generated_Source\PSoC5/CapSense.c ****         if ((snsType & CapSense_COMPLEX_SS_FLAG) == 0u)
1196:Generated_Source\PSoC5/CapSense.c ****         {
1197:Generated_Source\PSoC5/CapSense.c ****             /* Disable sensor (signle) */
1198:Generated_Source\PSoC5/CapSense.c ****             CapSense_DisableSensor(slot);
1199:Generated_Source\PSoC5/CapSense.c ****         }
1200:Generated_Source\PSoC5/CapSense.c ****         else
1201:Generated_Source\PSoC5/CapSense.c ****         {
1202:Generated_Source\PSoC5/CapSense.c ****             /* Disable complex sensor */
1203:Generated_Source\PSoC5/CapSense.c ****             snsType &= ~CapSense_COMPLEX_SS_FLAG;
1204:Generated_Source\PSoC5/CapSense.c ****             index = &CapSense_indexTable[snsType];
1205:Generated_Source\PSoC5/CapSense.c ****             snsNumber = CapSense_maskTable[slot];
1206:Generated_Source\PSoC5/CapSense.c ****                         
1207:Generated_Source\PSoC5/CapSense.c ****             for (j=0u; j < snsNumber; j++)
1208:Generated_Source\PSoC5/CapSense.c ****             {
1209:Generated_Source\PSoC5/CapSense.c ****                 CapSense_DisableSensor(index[j]);
1210:Generated_Source\PSoC5/CapSense.c ****             }
1211:Generated_Source\PSoC5/CapSense.c ****         } 
1212:Generated_Source\PSoC5/CapSense.c ****     }
1213:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1214:Generated_Source\PSoC5/CapSense.c **** 
1215:Generated_Source\PSoC5/CapSense.c **** 
1216:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1217:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_EnableSensor
1218:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1219:Generated_Source\PSoC5/CapSense.c **** *
1220:Generated_Source\PSoC5/CapSense.c **** * Summary:
1221:Generated_Source\PSoC5/CapSense.c **** *  Configures the selected sensor to measure during the next measurement cycle.
1222:Generated_Source\PSoC5/CapSense.c **** *  The corresponding pins are set to Analog High-Z mode and connected to the
1223:Generated_Source\PSoC5/CapSense.c **** *  Analog Mux Bus. This also enables the comparator function.
1224:Generated_Source\PSoC5/CapSense.c **** *
1225:Generated_Source\PSoC5/CapSense.c **** * Parameters:
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 26


1226:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1227:Generated_Source\PSoC5/CapSense.c **** *
1228:Generated_Source\PSoC5/CapSense.c **** * Return:
1229:Generated_Source\PSoC5/CapSense.c **** *  None
1230:Generated_Source\PSoC5/CapSense.c **** *
1231:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1232:Generated_Source\PSoC5/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin 
1233:Generated_Source\PSoC5/CapSense.c **** *  belongs to for every sensor.
1234:Generated_Source\PSoC5/CapSense.c **** *  CapSense_maskTable[] - used to store the pin within the port for 
1235:Generated_Source\PSoC5/CapSense.c **** *  every sensor.
1236:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csTable[]   - used to store the pointers to CAPS_SEL 
1237:Generated_Source\PSoC5/CapSense.c **** *  registers for every port.
1238:Generated_Source\PSoC5/CapSense.c **** *  CapSense_pcTable[]   - used to store the pointers to PC pin 
1239:Generated_Source\PSoC5/CapSense.c **** *  register for every sensor.
1240:Generated_Source\PSoC5/CapSense.c **** *  CapSense_amuxIndex[] - used to store corrected AMUX index when 
1241:Generated_Source\PSoC5/CapSense.c **** *  complex sensors are defeined.
1242:Generated_Source\PSoC5/CapSense.c **** *
1243:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1244:Generated_Source\PSoC5/CapSense.c **** void CapSense_EnableSensor(uint8 sensor) CYREENTRANT
1245:Generated_Source\PSoC5/CapSense.c **** {
 201              		.loc 1 1245 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              	.LVL13:
 206 0000 08B5     		push	{r3, lr}
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 3, -8
 209              		.cfi_offset 14, -4
 210              	.LVL14:
1246:Generated_Source\PSoC5/CapSense.c ****     uint8 port = CapSense_portTable[sensor];
1247:Generated_Source\PSoC5/CapSense.c ****     uint8 mask = CapSense_maskTable[sensor];
1248:Generated_Source\PSoC5/CapSense.c ****     
1249:Generated_Source\PSoC5/CapSense.c ****     #if ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1250:Generated_Source\PSoC5/CapSense.c ****          (CapSense_IS_COMPLEX_SCANSLOTS))
1251:Generated_Source\PSoC5/CapSense.c ****         uint8 amuxCh = CapSense_amuxIndex[sensor];
1252:Generated_Source\PSoC5/CapSense.c ****     #endif  /* ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1253:Generated_Source\PSoC5/CapSense.c ****             *   (CapSense_IS_COMPLEX_SCANSLOTS))
1254:Generated_Source\PSoC5/CapSense.c ****             */
1255:Generated_Source\PSoC5/CapSense.c ****     
1256:Generated_Source\PSoC5/CapSense.c ****     /* Make sensor High-Z */
1257:Generated_Source\PSoC5/CapSense.c ****     *CapSense_pcTable[sensor] = CapSense_PRT_PC_HIGHZ;
 211              		.loc 1 1257 0
 212 0002 0922     		movs	r2, #9
 213 0004 044B     		ldr	r3, .L18
 214 0006 1A70     		strb	r2, [r3]
1258:Generated_Source\PSoC5/CapSense.c ****     
1259:Generated_Source\PSoC5/CapSense.c ****     /* Connect to DSI output */
1260:Generated_Source\PSoC5/CapSense.c **** 	if(port == 15u)
1261:Generated_Source\PSoC5/CapSense.c **** 	{
1262:Generated_Source\PSoC5/CapSense.c **** 		port = 7u;
1263:Generated_Source\PSoC5/CapSense.c **** 	}
1264:Generated_Source\PSoC5/CapSense.c ****     *CapSense_csTable[port] |= mask;
 215              		.loc 1 1264 0
 216 0008 044A     		ldr	r2, .L18+4
 217 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 218 000c 63F07F03 		orn	r3, r3, #127
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 27


 219 0010 1370     		strb	r3, [r2]
1265:Generated_Source\PSoC5/CapSense.c ****     
1266:Generated_Source\PSoC5/CapSense.c ****     /* Connect to AMUX */
1267:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1268:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1269:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_amuxIndex[sensor]);
1270:Generated_Source\PSoC5/CapSense.c ****         #else
1271:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(sensor);
 220              		.loc 1 1271 0
 221 0012 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 222              	.LVL15:
 223 0016 08BD     		pop	{r3, pc}
 224              	.L19:
 225              		.align	2
 226              	.L18:
 227 0018 0F500040 		.word	1073762319
 228 001c 0E520040 		.word	1073762830
 229              		.cfi_endproc
 230              	.LFE11:
 231              		.size	CapSense_EnableSensor, .-CapSense_EnableSensor
 232              		.section	.text.CapSense_DisableSensor,"ax",%progbits
 233              		.align	2
 234              		.global	CapSense_DisableSensor
 235              		.thumb
 236              		.thumb_func
 237              		.type	CapSense_DisableSensor, %function
 238              	CapSense_DisableSensor:
 239              	.LFB12:
1272:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1273:Generated_Source\PSoC5/CapSense.c ****                 
1274:Generated_Source\PSoC5/CapSense.c ****     #else
1275:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1276:Generated_Source\PSoC5/CapSense.c ****             if ((amuxCh & CapSense_CHANNEL1_FLAG) == 0u)
1277:Generated_Source\PSoC5/CapSense.c ****             {
1278:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(amuxCh);
1279:Generated_Source\PSoC5/CapSense.c ****             } 
1280:Generated_Source\PSoC5/CapSense.c ****             else
1281:Generated_Source\PSoC5/CapSense.c ****             {
1282:Generated_Source\PSoC5/CapSense.c ****                 amuxCh &= ~ CapSense_CHANNEL1_FLAG;
1283:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(amuxCh);
1284:Generated_Source\PSoC5/CapSense.c ****             }
1285:Generated_Source\PSoC5/CapSense.c ****             
1286:Generated_Source\PSoC5/CapSense.c ****         #else
1287:Generated_Source\PSoC5/CapSense.c ****             if (sensor < CapSense_TOTAL_SENSOR_COUNT__CH0) 
1288:Generated_Source\PSoC5/CapSense.c ****             {
1289:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(sensor);
1290:Generated_Source\PSoC5/CapSense.c ****             } 
1291:Generated_Source\PSoC5/CapSense.c ****             else
1292:Generated_Source\PSoC5/CapSense.c ****             {
1293:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(sensor - CapSense_TOTAL_SENSOR_COUNT__CH0);
1294:Generated_Source\PSoC5/CapSense.c ****             }
1295:Generated_Source\PSoC5/CapSense.c ****             
1296:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1297:Generated_Source\PSoC5/CapSense.c ****         
1298:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */
1299:Generated_Source\PSoC5/CapSense.c **** }
1300:Generated_Source\PSoC5/CapSense.c **** 
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 28


1301:Generated_Source\PSoC5/CapSense.c **** 
1302:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1303:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_DisableSensor
1304:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1305:Generated_Source\PSoC5/CapSense.c **** *
1306:Generated_Source\PSoC5/CapSense.c **** * Summary:
1307:Generated_Source\PSoC5/CapSense.c **** *  Disables the selected sensor. The corresponding pin is disconnected from the
1308:Generated_Source\PSoC5/CapSense.c **** *  Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1309:Generated_Source\PSoC5/CapSense.c **** *
1310:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1311:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number
1312:Generated_Source\PSoC5/CapSense.c **** *
1313:Generated_Source\PSoC5/CapSense.c **** * Return:
1314:Generated_Source\PSoC5/CapSense.c **** *  None
1315:Generated_Source\PSoC5/CapSense.c **** *
1316:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1317:Generated_Source\PSoC5/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin 
1318:Generated_Source\PSoC5/CapSense.c **** *  belongs to for every sensor.
1319:Generated_Source\PSoC5/CapSense.c **** *  CapSense_maskTable[] - used to store the pin within the port for 
1320:Generated_Source\PSoC5/CapSense.c **** *  every sensor.
1321:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csTable[]   - used to store the pointers to CAPS_SEL 
1322:Generated_Source\PSoC5/CapSense.c **** *  registers for every port.
1323:Generated_Source\PSoC5/CapSense.c **** *  CapSense_pcTable[]   - used to store the pointers to PC pin 
1324:Generated_Source\PSoC5/CapSense.c **** *  register for every sensor.
1325:Generated_Source\PSoC5/CapSense.c **** *  CapSense_amuxIndex[] - used to store corrected AMUX index when 
1326:Generated_Source\PSoC5/CapSense.c **** *  complex sensors are defeined.
1327:Generated_Source\PSoC5/CapSense.c **** *
1328:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1329:Generated_Source\PSoC5/CapSense.c **** void CapSense_DisableSensor(uint8 sensor) CYREENTRANT
1330:Generated_Source\PSoC5/CapSense.c **** {
 240              		.loc 1 1330 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244              	.LVL16:
 245 0000 08B5     		push	{r3, lr}
 246              		.cfi_def_cfa_offset 8
 247              		.cfi_offset 3, -8
 248              		.cfi_offset 14, -4
 249              	.LVL17:
1331:Generated_Source\PSoC5/CapSense.c ****     uint8 port = CapSense_portTable[sensor];
1332:Generated_Source\PSoC5/CapSense.c ****     uint8 mask = CapSense_maskTable[sensor];
1333:Generated_Source\PSoC5/CapSense.c ****     
1334:Generated_Source\PSoC5/CapSense.c ****     #if ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1335:Generated_Source\PSoC5/CapSense.c ****          (CapSense_IS_COMPLEX_SCANSLOTS))
1336:Generated_Source\PSoC5/CapSense.c ****         uint8 amuxCh = CapSense_amuxIndex[sensor];
1337:Generated_Source\PSoC5/CapSense.c ****     #endif  /* ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1338:Generated_Source\PSoC5/CapSense.c ****             *   (CapSense_IS_COMPLEX_SCANSLOTS))
1339:Generated_Source\PSoC5/CapSense.c ****             */
1340:Generated_Source\PSoC5/CapSense.c ****     
1341:Generated_Source\PSoC5/CapSense.c ****     /* Disconnect from AMUX */
1342:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1343:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1344:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Disconnect(CapSense_amuxIndex[sensor]);
1345:Generated_Source\PSoC5/CapSense.c ****         #else
1346:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Disconnect(sensor);
 250              		.loc 1 1346 0
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 29


 251 0002 FFF7FEFF 		bl	CapSense_AMuxCH0_Unset
 252              	.LVL18:
1347:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1348:Generated_Source\PSoC5/CapSense.c ****                 
1349:Generated_Source\PSoC5/CapSense.c ****     #else
1350:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1351:Generated_Source\PSoC5/CapSense.c ****             if ((amuxCh & CapSense_CHANNEL1_FLAG) == 0u)
1352:Generated_Source\PSoC5/CapSense.c ****             {
1353:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(amuxCh);
1354:Generated_Source\PSoC5/CapSense.c ****             } 
1355:Generated_Source\PSoC5/CapSense.c ****             else
1356:Generated_Source\PSoC5/CapSense.c ****             {
1357:Generated_Source\PSoC5/CapSense.c ****                 amuxCh &= ~ CapSense_CHANNEL1_FLAG;
1358:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(amuxCh);
1359:Generated_Source\PSoC5/CapSense.c ****             }
1360:Generated_Source\PSoC5/CapSense.c ****             
1361:Generated_Source\PSoC5/CapSense.c ****         #else
1362:Generated_Source\PSoC5/CapSense.c ****             if (sensor < CapSense_TOTAL_SENSOR_COUNT__CH0) 
1363:Generated_Source\PSoC5/CapSense.c ****             {
1364:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(sensor);
1365:Generated_Source\PSoC5/CapSense.c ****             } 
1366:Generated_Source\PSoC5/CapSense.c ****             else
1367:Generated_Source\PSoC5/CapSense.c ****             {
1368:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(sensor - CapSense_TOTAL_SENSOR_COUNT__CH0);
1369:Generated_Source\PSoC5/CapSense.c ****             }
1370:Generated_Source\PSoC5/CapSense.c ****             
1371:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1372:Generated_Source\PSoC5/CapSense.c ****         
1373:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
1374:Generated_Source\PSoC5/CapSense.c ****     
1375:Generated_Source\PSoC5/CapSense.c ****     /* Disconnect from DSI output */
1376:Generated_Source\PSoC5/CapSense.c **** 	if(port == 15u)
1377:Generated_Source\PSoC5/CapSense.c **** 	{
1378:Generated_Source\PSoC5/CapSense.c **** 		port = 7u;
1379:Generated_Source\PSoC5/CapSense.c **** 	}
1380:Generated_Source\PSoC5/CapSense.c ****     *CapSense_csTable[port] &= (uint8)~mask;
 253              		.loc 1 1380 0
 254 0006 044A     		ldr	r2, .L22
 255 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 256 000a 03F07F03 		and	r3, r3, #127
 257 000e 1370     		strb	r3, [r2]
1381:Generated_Source\PSoC5/CapSense.c ****     
1382:Generated_Source\PSoC5/CapSense.c ****     /* Set sensor to inactive state */
1383:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_GND)
1384:Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_GND;
 258              		.loc 1 1384 0
 259 0010 0822     		movs	r2, #8
 260 0012 024B     		ldr	r3, .L22+4
 261 0014 1A70     		strb	r2, [r3]
 262 0016 08BD     		pop	{r3, pc}
 263              	.L23:
 264              		.align	2
 265              	.L22:
 266 0018 0E520040 		.word	1073762830
 267 001c 0F500040 		.word	1073762319
 268              		.cfi_endproc
 269              	.LFE12:
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 30


 270              		.size	CapSense_DisableSensor, .-CapSense_DisableSensor
 271              		.section	.text.CapSense_ClearSensors,"ax",%progbits
 272              		.align	2
 273              		.global	CapSense_ClearSensors
 274              		.thumb
 275              		.thumb_func
 276              		.type	CapSense_ClearSensors, %function
 277              	CapSense_ClearSensors:
 278              	.LFB10:
1095:Generated_Source\PSoC5/CapSense.c ****     uint8 i;
 279              		.loc 1 1095 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283 0000 10B5     		push	{r4, lr}
 284              		.cfi_def_cfa_offset 8
 285              		.cfi_offset 4, -8
 286              		.cfi_offset 14, -4
 287              	.LVL19:
1098:Generated_Source\PSoC5/CapSense.c ****     {
 288              		.loc 1 1098 0
 289 0002 0024     		movs	r4, #0
 290 0004 04E0     		b	.L25
 291              	.LVL20:
 292              	.L26:
1100:Generated_Source\PSoC5/CapSense.c ****     }
 293              		.loc 1 1100 0 discriminator 3
 294 0006 2046     		mov	r0, r4
 295 0008 FFF7FEFF 		bl	CapSense_DisableSensor
 296              	.LVL21:
1098:Generated_Source\PSoC5/CapSense.c ****     {
 297              		.loc 1 1098 0 discriminator 3
 298 000c 0134     		adds	r4, r4, #1
 299              	.LVL22:
 300 000e E4B2     		uxtb	r4, r4
 301              	.LVL23:
 302              	.L25:
1098:Generated_Source\PSoC5/CapSense.c ****     {
 303              		.loc 1 1098 0 is_stmt 0 discriminator 1
 304 0010 002C     		cmp	r4, #0
 305 0012 F8D0     		beq	.L26
1102:Generated_Source\PSoC5/CapSense.c **** 
 306              		.loc 1 1102 0 is_stmt 1
 307 0014 10BD     		pop	{r4, pc}
 308              		.cfi_endproc
 309              	.LFE10:
 310              		.size	CapSense_ClearSensors, .-CapSense_ClearSensors
 311 0016 00BF     		.section	.text.CapSense_Stop,"ax",%progbits
 312              		.align	2
 313              		.global	CapSense_Stop
 314              		.thumb
 315              		.thumb_func
 316              		.type	CapSense_Stop, %function
 317              	CapSense_Stop:
 318              	.LFB3:
 515:Generated_Source\PSoC5/CapSense.c ****     /* Stop Capsensing */
 319              		.loc 1 515 0
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 31


 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323 0000 10B5     		push	{r4, lr}
 324              		.cfi_def_cfa_offset 8
 325              		.cfi_offset 4, -8
 326              		.cfi_offset 14, -4
 517:Generated_Source\PSoC5/CapSense.c ****     
 327              		.loc 1 517 0
 328 0002 154C     		ldr	r4, .L30
 329 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 330 0006 03F0FD03 		and	r3, r3, #253
 331 000a 2370     		strb	r3, [r4]
 520:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 332              		.loc 1 520 0
 333 000c 0122     		movs	r2, #1
 334 000e 134B     		ldr	r3, .L30+4
 335 0010 1A60     		str	r2, [r3]
 526:Generated_Source\PSoC5/CapSense.c ****     
 336              		.loc 1 526 0
 337 0012 FFF7FEFF 		bl	CapSense_ClearSensors
 338              	.LVL24:
 540:Generated_Source\PSoC5/CapSense.c ****     
 339              		.loc 1 540 0
 340 0016 124A     		ldr	r2, .L30+8
 341 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 342 001a 03F0DF03 		and	r3, r3, #223
 343 001e 1370     		strb	r3, [r2]
 579:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 344              		.loc 1 579 0
 345 0020 FFF7FEFF 		bl	CapSense_IntClock_Stop
 346              	.LVL25:
 583:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 347              		.loc 1 583 0
 348 0024 FFF7FEFF 		bl	CapSense_CompCH0_Stop
 349              	.LVL26:
 585:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 350              		.loc 1 585 0
 351 0028 FFF7FEFF 		bl	CapSense_IdacCH0_Stop
 352              	.LVL27:
 607:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_ACT_PWR_EN);
 353              		.loc 1 607 0
 354 002c 0D4A     		ldr	r2, .L30+12
 355 002e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 356 0030 03F0FE03 		and	r3, r3, #254
 357 0034 1370     		strb	r3, [r2]
 608:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_STBY_PWR_EN);
 358              		.loc 1 608 0
 359 0036 A2F5A652 		sub	r2, r2, #5312
 360 003a 073A     		subs	r2, r2, #7
 361 003c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 362 003e 03F0DF03 		and	r3, r3, #223
 363 0042 1370     		strb	r3, [r2]
 609:Generated_Source\PSoC5/CapSense.c ****         
 364              		.loc 1 609 0
 365 0044 1032     		adds	r2, r2, #16
 366 0046 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 32


 367 0048 03F0DF03 		and	r3, r3, #223
 368 004c 1370     		strb	r3, [r2]
 619:Generated_Source\PSoC5/CapSense.c **** }
 369              		.loc 1 619 0
 370 004e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 371 0050 03F07F03 		and	r3, r3, #127
 372 0054 2370     		strb	r3, [r4]
 373 0056 10BD     		pop	{r4, pc}
 374              	.L31:
 375              		.align	2
 376              	.L30:
 377 0058 79640040 		.word	1073767545
 378 005c 80E100E0 		.word	-536813184
 379 0060 9B640040 		.word	1073767579
 380 0064 72580040 		.word	1073764466
 381              		.cfi_endproc
 382              	.LFE3:
 383              		.size	CapSense_Stop, .-CapSense_Stop
 384              		.section	.text.CapSense_PostScan,"ax",%progbits
 385              		.align	2
 386              		.global	CapSense_PostScan
 387              		.thumb
 388              		.thumb_func
 389              		.type	CapSense_PostScan, %function
 390              	CapSense_PostScan:
 391              	.LFB14:
1385:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_HIGHZ)
1386:Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_HIGHZ;
1387:Generated_Source\PSoC5/CapSense.c ****     #else
1388:Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_SHIELD;
1389:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_GND) */
1390:Generated_Source\PSoC5/CapSense.c **** }
1391:Generated_Source\PSoC5/CapSense.c **** 
1392:Generated_Source\PSoC5/CapSense.c **** 
1393:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1394:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_PreScan
1395:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1396:Generated_Source\PSoC5/CapSense.c **** *
1397:Generated_Source\PSoC5/CapSense.c **** * Summary:
1398:Generated_Source\PSoC5/CapSense.c **** *  Set required settings, enable sensor, remove Vref from AMUX and start the 
1399:Generated_Source\PSoC5/CapSense.c **** *  scanning process of the sensor.
1400:Generated_Source\PSoC5/CapSense.c **** *
1401:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1402:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1403:Generated_Source\PSoC5/CapSense.c **** *
1404:Generated_Source\PSoC5/CapSense.c **** * Return:
1405:Generated_Source\PSoC5/CapSense.c **** *  None
1406:Generated_Source\PSoC5/CapSense.c **** *
1407:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1408:Generated_Source\PSoC5/CapSense.c **** *  CapSense_rbTable[] - used to store pointers to PC pin registers for 
1409:Generated_Source\PSoC5/CapSense.c **** *  every bleed resistor (Rb). Only available when Current Source is External 
1410:Generated_Source\PSoC5/CapSense.c **** *  resistor.
1411:Generated_Source\PSoC5/CapSense.c **** *
1412:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1413:Generated_Source\PSoC5/CapSense.c **** void CapSense_PreScan(uint8 sensor) CYREENTRANT
1414:Generated_Source\PSoC5/CapSense.c **** {
1415:Generated_Source\PSoC5/CapSense.c ****     /* Set Sensor Settings */
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 33


1416:Generated_Source\PSoC5/CapSense.c ****     CapSense_SetScanSlotSettings(sensor);
1417:Generated_Source\PSoC5/CapSense.c ****     
1418:Generated_Source\PSoC5/CapSense.c ****     /* Place disable interrupts here to eliminate influence on start of scanning */
1419:Generated_Source\PSoC5/CapSense.c ****     /* `#START CapSense_PreScan_DisableInt` */
1420:Generated_Source\PSoC5/CapSense.c **** 
1421:Generated_Source\PSoC5/CapSense.c ****     /* `#END` */
1422:Generated_Source\PSoC5/CapSense.c ****     
1423:Generated_Source\PSoC5/CapSense.c ****     #ifdef CapSense_PRE_SCAN_DISABLE_INT_CALLBACK
1424:Generated_Source\PSoC5/CapSense.c ****     CapSense_PreScan_DisableInt_Callback();
1425:Generated_Source\PSoC5/CapSense.c ****     #endif /* CapSense_PRE_SCAN_DISABLE_INT_CALLBACK */
1426:Generated_Source\PSoC5/CapSense.c **** 
1427:Generated_Source\PSoC5/CapSense.c ****     /* Resets digital and pre-charge clocks */
1428:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_SYNC_EN;
1429:Generated_Source\PSoC5/CapSense.c ****         
1430:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1431:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1432:Generated_Source\PSoC5/CapSense.c ****             /* Disable Vref from AMux */
1433:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1434:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_VREF_CHANNEL);
1435:Generated_Source\PSoC5/CapSense.c ****             #else
1436:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1437:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
1438:Generated_Source\PSoC5/CapSense.c **** 
1439:Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1440:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1441:Generated_Source\PSoC5/CapSense.c ****             
1442:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1443:Generated_Source\PSoC5/CapSense.c ****             /* Connect IDAC */
1444:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
1445:Generated_Source\PSoC5/CapSense.c ****             
1446:Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1447:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1448:Generated_Source\PSoC5/CapSense.c ****                 
1449:Generated_Source\PSoC5/CapSense.c ****             /* Disable CapSense Buffer */
1450:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG &= (uint8)~CapSense_CSBUF_ENABLE;
1451:Generated_Source\PSoC5/CapSense.c ****             
1452:Generated_Source\PSoC5/CapSense.c ****         #else
1453:Generated_Source\PSoC5/CapSense.c ****             /* Connect DSI output to Rb */
1454:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] |= CapSense_BYP_MASK;
1455:Generated_Source\PSoC5/CapSense.c ****             
1456:Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1457:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1458:Generated_Source\PSoC5/CapSense.c ****              
1459:Generated_Source\PSoC5/CapSense.c ****             /* Disable CapSense Buffer */
1460:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1461:Generated_Source\PSoC5/CapSense.c ****         
1462:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1463:Generated_Source\PSoC5/CapSense.c ****         
1464:Generated_Source\PSoC5/CapSense.c ****     #else
1465:Generated_Source\PSoC5/CapSense.c **** 
1466:Generated_Source\PSoC5/CapSense.c ****         if((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) != 0u)
1467:Generated_Source\PSoC5/CapSense.c ****         {
1468:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1469:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1470:Generated_Source\PSoC5/CapSense.c ****                 #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1471:Generated_Source\PSoC5/CapSense.c ****                     CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_VREF_CHANNEL);
1472:Generated_Source\PSoC5/CapSense.c ****                 #else
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 34


1473:Generated_Source\PSoC5/CapSense.c ****                     CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1474:Generated_Source\PSoC5/CapSense.c ****                 #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
1475:Generated_Source\PSoC5/CapSense.c ****                 
1476:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1477:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1478:Generated_Source\PSoC5/CapSense.c ****                 
1479:Generated_Source\PSoC5/CapSense.c ****             #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1480:Generated_Source\PSoC5/CapSense.c ****                 /* Connect IDAC */
1481:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
1482:Generated_Source\PSoC5/CapSense.c ****                 
1483:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1484:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1485:Generated_Source\PSoC5/CapSense.c ****                     
1486:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1487:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1488:Generated_Source\PSoC5/CapSense.c ****                 
1489:Generated_Source\PSoC5/CapSense.c ****             #else
1490:Generated_Source\PSoC5/CapSense.c ****                 /* Connect DSI output to Rb */
1491:Generated_Source\PSoC5/CapSense.c ****                 *CapSense_rbTable[CapSense_extRbCh0Cur] |= CapSense_BYP_MASK;
1492:Generated_Source\PSoC5/CapSense.c ****                 
1493:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1494:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1495:Generated_Source\PSoC5/CapSense.c ****                     
1496:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1497:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1498:Generated_Source\PSoC5/CapSense.c ****             
1499:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1500:Generated_Source\PSoC5/CapSense.c ****             
1501:Generated_Source\PSoC5/CapSense.c ****         }
1502:Generated_Source\PSoC5/CapSense.c ****         
1503:Generated_Source\PSoC5/CapSense.c ****         if((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) != 0u)
1504:Generated_Source\PSoC5/CapSense.c ****         {
1505:Generated_Source\PSoC5/CapSense.c ****             sensor += CapSense_TOTAL_SENSOR_COUNT__CH0;
1506:Generated_Source\PSoC5/CapSense.c ****             
1507:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1508:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1509:Generated_Source\PSoC5/CapSense.c ****                 #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1510:Generated_Source\PSoC5/CapSense.c ****                    CapSense_AMuxCH1_Disconnect(CapSense_AMuxCH1_VREF_CHANNEL);
1511:Generated_Source\PSoC5/CapSense.c ****                 #else 
1512:Generated_Source\PSoC5/CapSense.c ****                     CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1513:Generated_Source\PSoC5/CapSense.c ****                 #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1514:Generated_Source\PSoC5/CapSense.c ****                 
1515:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1516:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1517:Generated_Source\PSoC5/CapSense.c ****                 
1518:Generated_Source\PSoC5/CapSense.c ****             #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1519:Generated_Source\PSoC5/CapSense.c ****                 /* Connect IDAC */
1520:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_IDAC_CHANNEL);
1521:Generated_Source\PSoC5/CapSense.c ****                 
1522:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1523:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1524:Generated_Source\PSoC5/CapSense.c ****                     
1525:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1526:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1527:Generated_Source\PSoC5/CapSense.c ****                 
1528:Generated_Source\PSoC5/CapSense.c ****             #else
1529:Generated_Source\PSoC5/CapSense.c ****                 /* Connect DSI output to Rb */
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 35


1530:Generated_Source\PSoC5/CapSense.c ****                 *CapSense_rbTable[CapSense_extRbCh1Cur] |= CapSense_BYP_MASK;
1531:Generated_Source\PSoC5/CapSense.c ****                 
1532:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1533:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1534:Generated_Source\PSoC5/CapSense.c ****                 
1535:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1536:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1537:Generated_Source\PSoC5/CapSense.c ****             
1538:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1539:Generated_Source\PSoC5/CapSense.c ****         }
1540:Generated_Source\PSoC5/CapSense.c ****     
1541:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN) */
1542:Generated_Source\PSoC5/CapSense.c ****     
1543:Generated_Source\PSoC5/CapSense.c ****     /* Start measurament, pre-charge clocks are running and PRS as well */
1544:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_START;
1545:Generated_Source\PSoC5/CapSense.c ****     
1546:Generated_Source\PSoC5/CapSense.c ****     /* Place enable interrupts here to eliminate influence on start of scanning */
1547:Generated_Source\PSoC5/CapSense.c ****     /* `#START CapSense_PreScan_EnableInt` */
1548:Generated_Source\PSoC5/CapSense.c **** 
1549:Generated_Source\PSoC5/CapSense.c ****     /* `#END` */
1550:Generated_Source\PSoC5/CapSense.c **** 
1551:Generated_Source\PSoC5/CapSense.c ****     #ifdef CapSense_PRE_SCAN_ENABLE_INT_CALLBACK
1552:Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan_EnableInt_Callback();
1553:Generated_Source\PSoC5/CapSense.c ****     #endif /* CapSense_PRE_SCAN_ENABLE_INT_CALLBACK */
1554:Generated_Source\PSoC5/CapSense.c **** }
1555:Generated_Source\PSoC5/CapSense.c **** 
1556:Generated_Source\PSoC5/CapSense.c **** 
1557:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1558:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1559:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScan
1560:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1561:Generated_Source\PSoC5/CapSense.c ****     *
1562:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1563:Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1564:Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1565:Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1566:Generated_Source\PSoC5/CapSense.c ****     *  Only one channel designs.
1567:Generated_Source\PSoC5/CapSense.c ****     *
1568:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1569:Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1570:Generated_Source\PSoC5/CapSense.c ****     *
1571:Generated_Source\PSoC5/CapSense.c ****     * Return:
1572:Generated_Source\PSoC5/CapSense.c ****     *  None
1573:Generated_Source\PSoC5/CapSense.c ****     *
1574:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1575:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1576:Generated_Source\PSoC5/CapSense.c ****     *
1577:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1578:Generated_Source\PSoC5/CapSense.c ****     *  No
1579:Generated_Source\PSoC5/CapSense.c ****     *
1580:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1581:Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScan(uint8 sensor) CYREENTRANT
1582:Generated_Source\PSoC5/CapSense.c ****     {
 392              		.loc 1 1582 0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 36


 396              	.LVL28:
 397 0000 10B5     		push	{r4, lr}
 398              		.cfi_def_cfa_offset 8
 399              		.cfi_offset 4, -8
 400              		.cfi_offset 14, -4
1583:Generated_Source\PSoC5/CapSense.c ****         /* Stop Capsensing and rearm sync */
1584:Generated_Source\PSoC5/CapSense.c ****         CapSense_CONTROL_REG &= (uint8)~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
 401              		.loc 1 1584 0
 402 0002 0E4A     		ldr	r2, .L34
 403 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 404 0006 03F0FC03 		and	r3, r3, #252
 405 000a 1370     		strb	r3, [r2]
1585:Generated_Source\PSoC5/CapSense.c ****         
1586:Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1587:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
1588:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1589:Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH0_COUNTER_PTR);
1590:Generated_Source\PSoC5/CapSense.c ****         #else
1591:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH0_COUNTER_HI_REG << 8u);
 406              		.loc 1 1591 0
 407 000c 0C4B     		ldr	r3, .L34+4
 408 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 409 0010 1B02     		lsls	r3, r3, #8
 410 0012 0C49     		ldr	r1, .L34+8
 411 0014 21F81030 		strh	r3, [r1, r0, lsl #1]	@ movhi
1592:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH0_COUNTER_LO_REG;
 412              		.loc 1 1592 0
 413 0018 8F32     		adds	r2, r2, #143
 414 001a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 415 001c 1343     		orrs	r3, r3, r2
1593:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE -
 416              		.loc 1 1593 0
 417 001e DB43     		mvns	r3, r3
 418 0020 21F81030 		strh	r3, [r1, r0, lsl #1]	@ movhi
1594:Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1595:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION == CapSense_MEASURE_IMPLEMENTATION_FF) */
1596:Generated_Source\PSoC5/CapSense.c ****         
1597:Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1598:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
 419              		.loc 1 1598 0
 420 0024 FFF7FEFF 		bl	CapSense_DisableSensor
 421              	.LVL29:
1599:Generated_Source\PSoC5/CapSense.c ****         
1600:Generated_Source\PSoC5/CapSense.c ****         #if(CapSense_CURRENT_SOURCE)
1601:Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1602:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 422              		.loc 1 1602 0
 423 0028 0020     		movs	r0, #0
 424 002a FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 425              	.LVL30:
1603:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1604:Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1605:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_IDAC_CHANNEL);
1606:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1607:Generated_Source\PSoC5/CapSense.c ****         #else
1608:Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1609:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] &= ~CapSense_BYP_MASK; 
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 37


1610:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1611:Generated_Source\PSoC5/CapSense.c ****             
1612:Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1613:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1614:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
1615:Generated_Source\PSoC5/CapSense.c ****         #else
1616:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 426              		.loc 1 1616 0
 427 002e 064A     		ldr	r2, .L34+12
 428 0030 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 429 0032 43F00103 		orr	r3, r3, #1
 430 0036 1370     		strb	r3, [r2]
 431 0038 10BD     		pop	{r4, pc}
 432              	.L35:
 433 003a 00BF     		.align	2
 434              	.L34:
 435 003c 79640040 		.word	1073767545
 436 0040 18650040 		.word	1073767704
 437 0044 00000000 		.word	CapSense_sensorRaw
 438 0048 72580040 		.word	1073764466
 439              		.cfi_endproc
 440              	.LFE14:
 441              		.size	CapSense_PostScan, .-CapSense_PostScan
 442              		.section	.text.CapSense_SetPrescaler,"ax",%progbits
 443              		.align	2
 444              		.global	CapSense_SetPrescaler
 445              		.thumb
 446              		.thumb_func
 447              		.type	CapSense_SetPrescaler, %function
 448              	CapSense_SetPrescaler:
 449              	.LFB15:
1617:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1618:Generated_Source\PSoC5/CapSense.c ****     }
1619:Generated_Source\PSoC5/CapSense.c ****     
1620:Generated_Source\PSoC5/CapSense.c **** #else
1621:Generated_Source\PSoC5/CapSense.c **** 
1622:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1623:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScan
1624:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1625:Generated_Source\PSoC5/CapSense.c ****     *
1626:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1627:Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1628:Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1629:Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1630:Generated_Source\PSoC5/CapSense.c ****     *  Only used for channel 0 in two channes designs.
1631:Generated_Source\PSoC5/CapSense.c ****     *
1632:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1633:Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1634:Generated_Source\PSoC5/CapSense.c ****     *
1635:Generated_Source\PSoC5/CapSense.c ****     * Return:
1636:Generated_Source\PSoC5/CapSense.c ****     *  None
1637:Generated_Source\PSoC5/CapSense.c ****     *
1638:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1639:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1640:Generated_Source\PSoC5/CapSense.c ****     *
1641:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1642:Generated_Source\PSoC5/CapSense.c ****     *  No
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 38


1643:Generated_Source\PSoC5/CapSense.c ****     *
1644:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1645:Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScanCh0(uint8 sensor) CYREENTRANT
1646:Generated_Source\PSoC5/CapSense.c ****     {
1647:Generated_Source\PSoC5/CapSense.c ****         if (((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) == 0u) && 
1648:Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) == 0u)) 
1649:Generated_Source\PSoC5/CapSense.c ****         {
1650:Generated_Source\PSoC5/CapSense.c ****             /* Stop Capsensing and rearm sync */
1651:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
1652:Generated_Source\PSoC5/CapSense.c ****         }
1653:Generated_Source\PSoC5/CapSense.c ****         
1654:Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1655:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
1656:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1657:Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH0_COUNTER_PTR);
1658:Generated_Source\PSoC5/CapSense.c ****         #else
1659:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH0_COUNTER_HI_REG << 8u);
1660:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH0_COUNTER_LO_REG;
1661:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1662:Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1663:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)*/
1664:Generated_Source\PSoC5/CapSense.c ****         
1665:Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1666:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
1667:Generated_Source\PSoC5/CapSense.c ****         
1668:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
1669:Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1670:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
1671:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1672:Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1673:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_IDAC_CHANNEL);
1674:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1675:Generated_Source\PSoC5/CapSense.c ****         #else
1676:Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1677:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] &= ~CapSense_BYP_MASK; 
1678:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1679:Generated_Source\PSoC5/CapSense.c ****         
1680:Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1681:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1682:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
1683:Generated_Source\PSoC5/CapSense.c ****         #else
1684:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
1685:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1686:Generated_Source\PSoC5/CapSense.c ****     }
1687:Generated_Source\PSoC5/CapSense.c ****     
1688:Generated_Source\PSoC5/CapSense.c ****     
1689:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1690:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScanCh1
1691:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1692:Generated_Source\PSoC5/CapSense.c ****     *
1693:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1694:Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1695:Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC), 
1696:Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1697:Generated_Source\PSoC5/CapSense.c ****     *  Only used for channel 1 in two channes designs.
1698:Generated_Source\PSoC5/CapSense.c ****     *
1699:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 39


1700:Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1701:Generated_Source\PSoC5/CapSense.c ****     *
1702:Generated_Source\PSoC5/CapSense.c ****     * Return:
1703:Generated_Source\PSoC5/CapSense.c ****     *  None
1704:Generated_Source\PSoC5/CapSense.c ****     *
1705:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1706:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1707:Generated_Source\PSoC5/CapSense.c ****     *
1708:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1709:Generated_Source\PSoC5/CapSense.c ****     *  No
1710:Generated_Source\PSoC5/CapSense.c ****     *
1711:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1712:Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScanCh1(uint8 sensor) CYREENTRANT
1713:Generated_Source\PSoC5/CapSense.c ****     {
1714:Generated_Source\PSoC5/CapSense.c ****         if (((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) == 0u) && 
1715:Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) == 0u))
1716:Generated_Source\PSoC5/CapSense.c ****         {
1717:Generated_Source\PSoC5/CapSense.c ****             /* Stop Capsensing and rearm sync */
1718:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
1719:Generated_Source\PSoC5/CapSense.c ****         }
1720:Generated_Source\PSoC5/CapSense.c ****         
1721:Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1722:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
1723:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1724:Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH1_COUNTER_PTR);
1725:Generated_Source\PSoC5/CapSense.c ****         #else
1726:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH1_COUNTER_HI_REG << 8u);
1727:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH1_COUNTER_LO_REG;
1728:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1729:Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1730:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)*/
1731:Generated_Source\PSoC5/CapSense.c ****         
1732:Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1733:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
1734:Generated_Source\PSoC5/CapSense.c ****         
1735:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
1736:Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1737:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetValue(CapSense_TURN_OFF_IDAC);
1738:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1739:Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1740:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(CapSense_AMuxCH1_IDAC_CHANNEL);
1741:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1742:Generated_Source\PSoC5/CapSense.c ****         #else
1743:Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1744:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh1Cur] &= ~CapSense_BYP_MASK; 
1745:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1746:Generated_Source\PSoC5/CapSense.c **** 
1747:Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1748:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1749:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_VREF_CHANNEL);
1750:Generated_Source\PSoC5/CapSense.c ****         #else
1751:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
1752:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1753:Generated_Source\PSoC5/CapSense.c ****     }
1754:Generated_Source\PSoC5/CapSense.c ****     
1755:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_DESIGN_TYPE */
1756:Generated_Source\PSoC5/CapSense.c **** 
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 40


1757:Generated_Source\PSoC5/CapSense.c **** 
1758:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
1759:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1760:Generated_Source\PSoC5/CapSense.c ****     * Function Name:  CapSense_InitRb
1761:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1762:Generated_Source\PSoC5/CapSense.c ****     *
1763:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1764:Generated_Source\PSoC5/CapSense.c ****     *  Sets all Rbleed resistor to High-Z mode. The first Rbleed resistor is active
1765:Generated_Source\PSoC5/CapSense.c ****     *  while next measure.
1766:Generated_Source\PSoC5/CapSense.c ****     *  This function is available only if Current Source is External Resistor.
1767:Generated_Source\PSoC5/CapSense.c ****     *
1768:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1769:Generated_Source\PSoC5/CapSense.c ****     *  None
1770:Generated_Source\PSoC5/CapSense.c ****     *
1771:Generated_Source\PSoC5/CapSense.c ****     * Return:
1772:Generated_Source\PSoC5/CapSense.c ****     *  None
1773:Generated_Source\PSoC5/CapSense.c ****     *
1774:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************/
1775:Generated_Source\PSoC5/CapSense.c ****     void CapSense_InitRb(void) 
1776:Generated_Source\PSoC5/CapSense.c ****     {
1777:Generated_Source\PSoC5/CapSense.c ****         uint8 i;
1778:Generated_Source\PSoC5/CapSense.c ****         
1779:Generated_Source\PSoC5/CapSense.c ****         /* Disable all Rb */
1780:Generated_Source\PSoC5/CapSense.c ****         for(i = 0u; i < CapSense_TOTAL_RB_NUMBER; i++)
1781:Generated_Source\PSoC5/CapSense.c ****         {
1782:Generated_Source\PSoC5/CapSense.c ****             /* Make High-Z */
1783:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[i] = CapSense_PRT_PC_HIGHZ;
1784:Generated_Source\PSoC5/CapSense.c ****         }
1785:Generated_Source\PSoC5/CapSense.c ****     }
1786:Generated_Source\PSoC5/CapSense.c ****     
1787:Generated_Source\PSoC5/CapSense.c ****     
1788:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1789:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetRBleed
1790:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1791:Generated_Source\PSoC5/CapSense.c ****     *
1792:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1793:Generated_Source\PSoC5/CapSense.c ****     *  Sets the pin to use for the bleed resistor (Rb) connection. This function
1794:Generated_Source\PSoC5/CapSense.c ****     *  can be called at runtime to select the current Rb pin setting from those 
1795:Generated_Source\PSoC5/CapSense.c ****     *  defined customizer. The function overwrites the component parameter setting. 
1796:Generated_Source\PSoC5/CapSense.c ****     *  This function is available only if Current Source is External Resistor.
1797:Generated_Source\PSoC5/CapSense.c ****     * 
1798:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1799:Generated_Source\PSoC5/CapSense.c ****     *  rbleed:  Ordering number for bleed resistor terminal defined in CapSense
1800:Generated_Source\PSoC5/CapSense.c ****     *  customizer.
1801:Generated_Source\PSoC5/CapSense.c ****     *
1802:Generated_Source\PSoC5/CapSense.c ****     * Return:
1803:Generated_Source\PSoC5/CapSense.c ****     *  None
1804:Generated_Source\PSoC5/CapSense.c ****     *
1805:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1806:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_extRbCh0Cur - used to store current number of active 
1807:Generated_Source\PSoC5/CapSense.c ****     *  bleed resistor (Rb) of channel 0.
1808:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_extRbCh1Cur - used to store current number of active 
1809:Generated_Source\PSoC5/CapSense.c ****     *  bleed resistor (Rb) of channel 1.
1810:Generated_Source\PSoC5/CapSense.c ****     *  The active bleed resistor (Rb) pin will be used while next measurement  
1811:Generated_Source\PSoC5/CapSense.c ****     *  cycle.
1812:Generated_Source\PSoC5/CapSense.c ****     *
1813:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 41


1814:Generated_Source\PSoC5/CapSense.c ****     *  No
1815:Generated_Source\PSoC5/CapSense.c ****     *
1816:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1817:Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetRBleed(uint8 rbleed) 
1818:Generated_Source\PSoC5/CapSense.c ****     {
1819:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1820:Generated_Source\PSoC5/CapSense.c ****             CapSense_extRbCh0Cur = rbleed;
1821:Generated_Source\PSoC5/CapSense.c ****             
1822:Generated_Source\PSoC5/CapSense.c ****         #else
1823:Generated_Source\PSoC5/CapSense.c ****             if(rbleed < CapSense_TOTAL_RB_NUMBER__CH0)
1824:Generated_Source\PSoC5/CapSense.c ****             {
1825:Generated_Source\PSoC5/CapSense.c ****                 CapSense_extRbCh0Cur = rbleed;
1826:Generated_Source\PSoC5/CapSense.c ****             }
1827:Generated_Source\PSoC5/CapSense.c ****             else
1828:Generated_Source\PSoC5/CapSense.c ****             {
1829:Generated_Source\PSoC5/CapSense.c ****                 CapSense_extRbCh1Cur = (rbleed - CapSense_TOTAL_RB_NUMBER__CH0);   
1830:Generated_Source\PSoC5/CapSense.c ****             }
1831:Generated_Source\PSoC5/CapSense.c ****     
1832:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */ 
1833:Generated_Source\PSoC5/CapSense.c ****     }
1834:Generated_Source\PSoC5/CapSense.c **** #endif /* CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB */ 
1835:Generated_Source\PSoC5/CapSense.c **** 
1836:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_PRESCALER_OPTIONS)
1837:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1838:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetPrescaler
1839:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1840:Generated_Source\PSoC5/CapSense.c ****     *
1841:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1842:Generated_Source\PSoC5/CapSense.c ****     *  Sets analog switch divider.
1843:Generated_Source\PSoC5/CapSense.c ****     *
1844:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1845:Generated_Source\PSoC5/CapSense.c ****     *  prescaler:  Sets prescaler divider values.
1846:Generated_Source\PSoC5/CapSense.c ****     *
1847:Generated_Source\PSoC5/CapSense.c ****     * Return:
1848:Generated_Source\PSoC5/CapSense.c ****     *  None
1849:Generated_Source\PSoC5/CapSense.c ****     *
1850:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1851:Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetPrescaler(uint8 prescaler) CYREENTRANT
1852:Generated_Source\PSoC5/CapSense.c ****     {
 450              		.loc 1 1852 0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 0
 453              		@ frame_needed = 0, uses_anonymous_args = 0
 454              		@ link register save eliminated.
 455              	.LVL31:
1853:Generated_Source\PSoC5/CapSense.c ****         /* Set Prescaler */
1854:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
1855:Generated_Source\PSoC5/CapSense.c ****             CapSense_PRESCALER_PERIOD_REG = prescaler;
 456              		.loc 1 1855 0
 457 0000 024B     		ldr	r3, .L37
 458 0002 1870     		strb	r0, [r3]
1856:Generated_Source\PSoC5/CapSense.c ****             CapSense_PRESCALER_COMPARE_REG = (prescaler >> 1u);
 459              		.loc 1 1856 0
 460 0004 4008     		lsrs	r0, r0, #1
 461              	.LVL32:
 462 0006 1033     		adds	r3, r3, #16
 463              	.LVL33:
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 42


 464 0008 1870     		strb	r0, [r3]
 465              	.LVL34:
 466 000a 7047     		bx	lr
 467              	.L38:
 468              		.align	2
 469              	.L37:
 470 000c 2A640040 		.word	1073767466
 471              		.cfi_endproc
 472              	.LFE15:
 473              		.size	CapSense_SetPrescaler, .-CapSense_SetPrescaler
 474              		.section	.text.CapSense_SetScanSlotSettings,"ax",%progbits
 475              		.align	2
 476              		.global	CapSense_SetScanSlotSettings
 477              		.thumb
 478              		.thumb_func
 479              		.type	CapSense_SetScanSlotSettings, %function
 480              	CapSense_SetScanSlotSettings:
 481              	.LFB5:
 807:Generated_Source\PSoC5/CapSense.c ****     uint8 widget;
 482              		.loc 1 807 0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 0
 485              		@ frame_needed = 0, uses_anonymous_args = 0
 486              	.LVL35:
 487 0000 10B5     		push	{r4, lr}
 488              		.cfi_def_cfa_offset 8
 489              		.cfi_offset 4, -8
 490              		.cfi_offset 14, -4
 491 0002 0446     		mov	r4, r0
 492              	.LVL36:
 816:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 493              		.loc 1 816 0
 494 0004 C820     		movs	r0, #200
 495              	.LVL37:
 496 0006 FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 497              	.LVL38:
 824:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 498              		.loc 1 824 0
 499 000a 0322     		movs	r2, #3
 500 000c 034B     		ldr	r3, .L41
 501 000e 1A70     		strb	r2, [r3]
 829:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
 502              		.loc 1 829 0
 503 0010 034B     		ldr	r3, .L41+4
 504 0012 1C44     		add	r4, r4, r3
 505 0014 2079     		ldrb	r0, [r4, #4]	@ zero_extendqisi2
 506 0016 FFF7FEFF 		bl	CapSense_SetPrescaler
 507              	.LVL39:
 508 001a 10BD     		pop	{r4, pc}
 509              	.L42:
 510              		.align	2
 511              	.L41:
 512 001c 5B640040 		.word	1073767515
 513 0020 00000000 		.word	.LANCHOR0
 514              		.cfi_endproc
 515              	.LFE5:
 516              		.size	CapSense_SetScanSlotSettings, .-CapSense_SetScanSlotSettings
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 43


 517              		.section	.text.CapSense_PreScan,"ax",%progbits
 518              		.align	2
 519              		.global	CapSense_PreScan
 520              		.thumb
 521              		.thumb_func
 522              		.type	CapSense_PreScan, %function
 523              	CapSense_PreScan:
 524              	.LFB13:
1414:Generated_Source\PSoC5/CapSense.c ****     /* Set Sensor Settings */
 525              		.loc 1 1414 0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 0
 528              		@ frame_needed = 0, uses_anonymous_args = 0
 529              	.LVL40:
 530 0000 38B5     		push	{r3, r4, r5, lr}
 531              		.cfi_def_cfa_offset 16
 532              		.cfi_offset 3, -16
 533              		.cfi_offset 4, -12
 534              		.cfi_offset 5, -8
 535              		.cfi_offset 14, -4
 536 0002 0546     		mov	r5, r0
1416:Generated_Source\PSoC5/CapSense.c ****     
 537              		.loc 1 1416 0
 538 0004 FFF7FEFF 		bl	CapSense_SetScanSlotSettings
 539              	.LVL41:
1428:Generated_Source\PSoC5/CapSense.c ****         
 540              		.loc 1 1428 0
 541 0008 084C     		ldr	r4, .L45
 542 000a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 543 000c 43F00103 		orr	r3, r3, #1
 544 0010 2370     		strb	r3, [r4]
1436:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
 545              		.loc 1 1436 0
 546 0012 074A     		ldr	r2, .L45+4
 547 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 548 0016 03F0FE03 		and	r3, r3, #254
 549 001a 1370     		strb	r3, [r2]
1440:Generated_Source\PSoC5/CapSense.c ****             
 550              		.loc 1 1440 0
 551 001c 2846     		mov	r0, r5
 552 001e FFF7FEFF 		bl	CapSense_EnableSensor
 553              	.LVL42:
1544:Generated_Source\PSoC5/CapSense.c ****     
 554              		.loc 1 1544 0
 555 0022 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 556 0024 43F00203 		orr	r3, r3, #2
 557 0028 2370     		strb	r3, [r4]
 558 002a 38BD     		pop	{r3, r4, r5, pc}
 559              	.L46:
 560              		.align	2
 561              	.L45:
 562 002c 79640040 		.word	1073767545
 563 0030 72580040 		.word	1073764466
 564              		.cfi_endproc
 565              	.LFE13:
 566              		.size	CapSense_PreScan, .-CapSense_PreScan
 567              		.section	.text.CapSense_ScanSensor,"ax",%progbits
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 44


 568              		.align	2
 569              		.global	CapSense_ScanSensor
 570              		.thumb
 571              		.thumb_func
 572              		.type	CapSense_ScanSensor, %function
 573              	CapSense_ScanSensor:
 574              	.LFB6:
 919:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 575              		.loc 1 919 0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 0
 578              		@ frame_needed = 0, uses_anonymous_args = 0
 579              	.LVL43:
 580 0000 08B5     		push	{r3, lr}
 581              		.cfi_def_cfa_offset 8
 582              		.cfi_offset 3, -8
 583              		.cfi_offset 14, -4
 921:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = sensor;
 584              		.loc 1 921 0
 585 0002 054B     		ldr	r3, .L49
 586 0004 0022     		movs	r2, #0
 587 0006 1A70     		strb	r2, [r3]
 922:Generated_Source\PSoC5/CapSense.c ****     
 588              		.loc 1 922 0
 589 0008 044A     		ldr	r2, .L49+4
 590 000a 1070     		strb	r0, [r2]
 926:Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan(sensor);
 591              		.loc 1 926 0
 592 000c 8122     		movs	r2, #129
 593 000e 1A70     		strb	r2, [r3]
 927:Generated_Source\PSoC5/CapSense.c ****         
 594              		.loc 1 927 0
 595 0010 FFF7FEFF 		bl	CapSense_PreScan
 596              	.LVL44:
 597 0014 08BD     		pop	{r3, pc}
 598              	.L50:
 599 0016 00BF     		.align	2
 600              	.L49:
 601 0018 00000000 		.word	CapSense_csv
 602 001c 00000000 		.word	CapSense_sensorIndex
 603              		.cfi_endproc
 604              	.LFE6:
 605              		.size	CapSense_ScanSensor, .-CapSense_ScanSensor
 606              		.section	.text.CapSense_ScanEnabledWidgets,"ax",%progbits
 607              		.align	2
 608              		.global	CapSense_ScanEnabledWidgets
 609              		.thumb
 610              		.thumb_func
 611              		.type	CapSense_ScanEnabledWidgets, %function
 612              	CapSense_ScanEnabledWidgets:
 613              	.LFB7:
 996:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 614              		.loc 1 996 0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 0
 617              		@ frame_needed = 0, uses_anonymous_args = 0
 618 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 45


 619              		.cfi_def_cfa_offset 8
 620              		.cfi_offset 4, -8
 621              		.cfi_offset 14, -4
 998:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = 0xFFu;
 622              		.loc 1 998 0
 623 0002 0022     		movs	r2, #0
 624 0004 0A4B     		ldr	r3, .L54
 625 0006 1A70     		strb	r2, [r3]
 999:Generated_Source\PSoC5/CapSense.c ****     
 626              		.loc 1 999 0
 627 0008 0A4C     		ldr	r4, .L54+4
 628 000a FF23     		movs	r3, #255
 629 000c 2370     		strb	r3, [r4]
1003:Generated_Source\PSoC5/CapSense.c **** 
 630              		.loc 1 1003 0
 631 000e 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 632 0010 FFF7FEFF 		bl	CapSense_FindNextSensor
 633              	.LVL45:
 634 0014 2070     		strb	r0, [r4]
1006:Generated_Source\PSoC5/CapSense.c ****         {
 635              		.loc 1 1006 0
 636 0016 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 637 0018 13F0FF0F 		tst	r3, #255
 638 001c 07D1     		bne	.L51
1008:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
 639              		.loc 1 1008 0
 640 001e 044A     		ldr	r2, .L54
 641 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 642 0022 43F00103 		orr	r3, r3, #1
 643 0026 1370     		strb	r3, [r2]
1009:Generated_Source\PSoC5/CapSense.c ****         }
 644              		.loc 1 1009 0
 645 0028 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 646 002a FFF7FEFF 		bl	CapSense_PreScan
 647              	.LVL46:
 648              	.L51:
 649 002e 10BD     		pop	{r4, pc}
 650              	.L55:
 651              		.align	2
 652              	.L54:
 653 0030 00000000 		.word	CapSense_csv
 654 0034 00000000 		.word	CapSense_sensorIndex
 655              		.cfi_endproc
 656              	.LFE7:
 657              		.size	CapSense_ScanEnabledWidgets, .-CapSense_ScanEnabledWidgets
 658              		.section	.text.CapSense_GetPrescaler,"ax",%progbits
 659              		.align	2
 660              		.global	CapSense_GetPrescaler
 661              		.thumb
 662              		.thumb_func
 663              		.type	CapSense_GetPrescaler, %function
 664              	CapSense_GetPrescaler:
 665              	.LFB16:
1857:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
1858:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PRESCALER_PERIOD_PTR, (uint16) prescaler);
1859:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PRESCALER_COMPARE_PTR, (uint16) (prescaler >> 1u));
1860:Generated_Source\PSoC5/CapSense.c ****         #else
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 46


1861:Generated_Source\PSoC5/CapSense.c ****             /* Do nothing = config without prescaler */
1862:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
1863:Generated_Source\PSoC5/CapSense.c ****     }
1864:Generated_Source\PSoC5/CapSense.c **** 
1865:Generated_Source\PSoC5/CapSense.c **** 
1866:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1867:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_GetPrescaler
1868:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1869:Generated_Source\PSoC5/CapSense.c ****     *
1870:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1871:Generated_Source\PSoC5/CapSense.c ****     *  Gets analog switch divider.
1872:Generated_Source\PSoC5/CapSense.c ****     *
1873:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1874:Generated_Source\PSoC5/CapSense.c ****     *  None
1875:Generated_Source\PSoC5/CapSense.c ****     *
1876:Generated_Source\PSoC5/CapSense.c ****     * Return:
1877:Generated_Source\PSoC5/CapSense.c ****     *   Returns the prescaler divider value.
1878:Generated_Source\PSoC5/CapSense.c ****     *
1879:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1880:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_GetPrescaler(void) 
1881:Generated_Source\PSoC5/CapSense.c ****     {
 666              		.loc 1 1881 0
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 0
 669              		@ frame_needed = 0, uses_anonymous_args = 0
 670              		@ link register save eliminated.
 671              	.LVL47:
1882:Generated_Source\PSoC5/CapSense.c ****         uint8 prescaler = 0u;
1883:Generated_Source\PSoC5/CapSense.c **** 
1884:Generated_Source\PSoC5/CapSense.c ****         /* Get Prescaler */
1885:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
1886:Generated_Source\PSoC5/CapSense.c ****             prescaler = CapSense_PRESCALER_PERIOD_REG;
 672              		.loc 1 1886 0
 673 0000 014B     		ldr	r3, .L57
 674 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 675              	.LVL48:
1887:Generated_Source\PSoC5/CapSense.c ****             
1888:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
1889:Generated_Source\PSoC5/CapSense.c ****             prescaler = (uint8) CY_GET_REG16(CapSense_PRESCALER_PERIOD_PTR);
1890:Generated_Source\PSoC5/CapSense.c ****             
1891:Generated_Source\PSoC5/CapSense.c ****         #else
1892:Generated_Source\PSoC5/CapSense.c ****             /* Do nothing = config without prescaler */
1893:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
1894:Generated_Source\PSoC5/CapSense.c ****         
1895:Generated_Source\PSoC5/CapSense.c ****         return (prescaler);
1896:Generated_Source\PSoC5/CapSense.c ****     }
 676              		.loc 1 1896 0
 677 0004 7047     		bx	lr
 678              	.L58:
 679 0006 00BF     		.align	2
 680              	.L57:
 681 0008 2A640040 		.word	1073767466
 682              		.cfi_endproc
 683              	.LFE16:
 684              		.size	CapSense_GetPrescaler, .-CapSense_GetPrescaler
 685              		.section	.text.CapSense_SetScanSpeed,"ax",%progbits
 686              		.align	2
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 47


 687              		.global	CapSense_SetScanSpeed
 688              		.thumb
 689              		.thumb_func
 690              		.type	CapSense_SetScanSpeed, %function
 691              	CapSense_SetScanSpeed:
 692              	.LFB17:
1897:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_PRESCALER_OPTIONS */
1898:Generated_Source\PSoC5/CapSense.c **** 
1899:Generated_Source\PSoC5/CapSense.c **** 
1900:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1901:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_SetScanSpeed
1902:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1903:Generated_Source\PSoC5/CapSense.c **** *
1904:Generated_Source\PSoC5/CapSense.c **** * Summary:
1905:Generated_Source\PSoC5/CapSense.c **** *  Sets ScanSpeed divider.
1906:Generated_Source\PSoC5/CapSense.c **** *
1907:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1908:Generated_Source\PSoC5/CapSense.c **** *  scanspeed:  Sets ScanSpeed divider.
1909:Generated_Source\PSoC5/CapSense.c **** *
1910:Generated_Source\PSoC5/CapSense.c **** * Return:
1911:Generated_Source\PSoC5/CapSense.c **** *  None
1912:Generated_Source\PSoC5/CapSense.c **** *
1913:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1914:Generated_Source\PSoC5/CapSense.c **** void CapSense_SetScanSpeed(uint8 scanSpeed) 
1915:Generated_Source\PSoC5/CapSense.c **** {
 693              		.loc 1 1915 0
 694              		.cfi_startproc
 695              		@ args = 0, pretend = 0, frame = 0
 696              		@ frame_needed = 0, uses_anonymous_args = 0
 697              		@ link register save eliminated.
 698              	.LVL49:
1916:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_PERIOD_REG = scanSpeed; 
 699              		.loc 1 1916 0
 700 0000 014B     		ldr	r3, .L60
 701 0002 1870     		strb	r0, [r3]
 702 0004 7047     		bx	lr
 703              	.L61:
 704 0006 00BF     		.align	2
 705              	.L60:
 706 0008 8B640040 		.word	1073767563
 707              		.cfi_endproc
 708              	.LFE17:
 709              		.size	CapSense_SetScanSpeed, .-CapSense_SetScanSpeed
 710              		.section	.text.CapSense_SetAnalogSwitchesSource,"ax",%progbits
 711              		.align	2
 712              		.global	CapSense_SetAnalogSwitchesSource
 713              		.thumb
 714              		.thumb_func
 715              		.type	CapSense_SetAnalogSwitchesSource, %function
 716              	CapSense_SetAnalogSwitchesSource:
 717              	.LFB18:
1917:Generated_Source\PSoC5/CapSense.c **** }
1918:Generated_Source\PSoC5/CapSense.c **** 
1919:Generated_Source\PSoC5/CapSense.c **** 
1920:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_PRS_OPTIONS)
1921:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1922:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetAnalogSwitchesSource
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 48


1923:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1924:Generated_Source\PSoC5/CapSense.c ****     *
1925:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1926:Generated_Source\PSoC5/CapSense.c ****     *  Selects the Analog switches source between PRS and prescaler. It is useful
1927:Generated_Source\PSoC5/CapSense.c ****     *  for sensor capacitance determination for sensors with low self-capacitance.
1928:Generated_Source\PSoC5/CapSense.c ****     *  This function is used in auto-tuning procedure.
1929:Generated_Source\PSoC5/CapSense.c ****     *
1930:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1931:Generated_Source\PSoC5/CapSense.c ****     *  src:  analog switches source:
1932:Generated_Source\PSoC5/CapSense.c ****     *           CapSense_ANALOG_SWITCHES_SRC_PRESCALER - selects prescaler
1933:Generated_Source\PSoC5/CapSense.c ****     *           CapSense_ANALOG_SWITCHES_SRC_PRS - selects PRS
1934:Generated_Source\PSoC5/CapSense.c ****     *
1935:Generated_Source\PSoC5/CapSense.c ****     * Return:
1936:Generated_Source\PSoC5/CapSense.c ****     *  None
1937:Generated_Source\PSoC5/CapSense.c ****     *
1938:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1939:Generated_Source\PSoC5/CapSense.c ****     *  No
1940:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1941:Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetAnalogSwitchesSource(uint8 src)
1942:Generated_Source\PSoC5/CapSense.c ****                       
1943:Generated_Source\PSoC5/CapSense.c ****     {
 718              		.loc 1 1943 0
 719              		.cfi_startproc
 720              		@ args = 0, pretend = 0, frame = 0
 721              		@ frame_needed = 0, uses_anonymous_args = 0
 722              		@ link register save eliminated.
 723              	.LVL50:
1944:Generated_Source\PSoC5/CapSense.c ****         if(src == CapSense_ANALOG_SWITCHES_SRC_PRESCALER)
 724              		.loc 1 1944 0
 725 0000 0128     		cmp	r0, #1
 726 0002 05D1     		bne	.L63
1945:Generated_Source\PSoC5/CapSense.c ****         {
1946:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= (uint8)~0x10u;
 727              		.loc 1 1946 0
 728 0004 054A     		ldr	r2, .L65
 729 0006 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 730 0008 03F0EF03 		and	r3, r3, #239
 731 000c 1370     		strb	r3, [r2]
 732 000e 7047     		bx	lr
 733              	.L63:
1947:Generated_Source\PSoC5/CapSense.c ****         }
1948:Generated_Source\PSoC5/CapSense.c ****         else
1949:Generated_Source\PSoC5/CapSense.c ****         {
1950:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= 0x10u;
 734              		.loc 1 1950 0
 735 0010 024A     		ldr	r2, .L65
 736 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 737 0014 43F01003 		orr	r3, r3, #16
 738 0018 1370     		strb	r3, [r2]
 739 001a 7047     		bx	lr
 740              	.L66:
 741              		.align	2
 742              	.L65:
 743 001c 79640040 		.word	1073767545
 744              		.cfi_endproc
 745              	.LFE18:
 746              		.size	CapSense_SetAnalogSwitchesSource, .-CapSense_SetAnalogSwitchesSource
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 49


 747              		.section	.text.CapSense_Init,"ax",%progbits
 748              		.align	2
 749              		.global	CapSense_Init
 750              		.thumb
 751              		.thumb_func
 752              		.type	CapSense_Init, %function
 753              	CapSense_Init:
 754              	.LFB0:
 100:Generated_Source\PSoC5/CapSense.c ****     #if ( (CapSense_PRS_OPTIONS) || \
 755              		.loc 1 100 0
 756              		.cfi_startproc
 757              		@ args = 0, pretend = 0, frame = 0
 758              		@ frame_needed = 0, uses_anonymous_args = 0
 759 0000 38B5     		push	{r3, r4, r5, lr}
 760              		.cfi_def_cfa_offset 16
 761              		.cfi_offset 3, -16
 762              		.cfi_offset 4, -12
 763              		.cfi_offset 5, -8
 764              		.cfi_offset 14, -4
 114:Generated_Source\PSoC5/CapSense.c **** 
 765              		.loc 1 114 0
 766 0002 FFF7FEFF 		bl	CapSense_ClearSensors
 767              	.LVL51:
 130:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_PRS_OPTIONS) */
 768              		.loc 1 130 0
 769 0006 0220     		movs	r0, #2
 770 0008 FFF7FEFF 		bl	CapSense_SetAnalogSwitchesSource
 771              	.LVL52:
 146:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 772              		.loc 1 146 0
 773 000c FFF7FEFF 		bl	CyEnterCriticalSection
 774              	.LVL53:
 147:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_B_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 775              		.loc 1 147 0
 776 0010 2E4A     		ldr	r2, .L69
 777 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 778 0014 43F00303 		orr	r3, r3, #3
 779 0018 1370     		strb	r3, [r2]
 148:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 780              		.loc 1 148 0
 781 001a 0132     		adds	r2, r2, #1
 782 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 783 001e 43F00303 		orr	r3, r3, #3
 784 0022 1370     		strb	r3, [r2]
 149:Generated_Source\PSoC5/CapSense.c ****         
 785              		.loc 1 149 0
 786 0024 FFF7FEFF 		bl	CyExitCriticalSection
 787              	.LVL54:
 152:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 788              		.loc 1 152 0
 789 0028 4FF43442 		mov	r2, #46080
 790 002c 284B     		ldr	r3, .L69+4
 791 002e 1A80     		strh	r2, [r3]	@ movhi
 154:Generated_Source\PSoC5/CapSense.c ****                 
 792              		.loc 1 154 0
 793 0030 4FF6FF74 		movw	r4, #65535
 794 0034 2033     		adds	r3, r3, #32
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 50


 795 0036 1C80     		strh	r4, [r3]	@ movhi
 174:Generated_Source\PSoC5/CapSense.c ****     
 796              		.loc 1 174 0
 797 0038 0725     		movs	r5, #7
 798 003a 4333     		adds	r3, r3, #67
 799 003c 1D70     		strb	r5, [r3]
 190:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 800              		.loc 1 190 0
 801 003e FFF7FEFF 		bl	CyEnterCriticalSection
 802              	.LVL55:
 191:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 803              		.loc 1 191 0
 804 0042 244A     		ldr	r2, .L69+8
 805 0044 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 806 0046 43F00303 		orr	r3, r3, #3
 807 004a 1370     		strb	r3, [r2]
 192:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 808              		.loc 1 192 0
 809 004c FD32     		adds	r2, r2, #253
 810 004e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 811 0050 43F00303 		orr	r3, r3, #3
 812 0054 1370     		strb	r3, [r2]
 193:Generated_Source\PSoC5/CapSense.c ****         
 813              		.loc 1 193 0
 814 0056 FFF7FEFF 		bl	CyExitCriticalSection
 815              	.LVL56:
 196:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 816              		.loc 1 196 0
 817 005a FF23     		movs	r3, #255
 818 005c 1E4A     		ldr	r2, .L69+12
 819 005e 1470     		strb	r4, [r2]
 197:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 820              		.loc 1 197 0
 821 0060 2032     		adds	r2, r2, #32
 822 0062 1370     		strb	r3, [r2]
 198:Generated_Source\PSoC5/CapSense.c ****         
 823              		.loc 1 198 0
 824 0064 403A     		subs	r2, r2, #64
 825 0066 1370     		strb	r3, [r2]
 201:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 826              		.loc 1 201 0
 827 0068 02F21D12 		addw	r2, r2, #285
 828 006c 1370     		strb	r3, [r2]
 202:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 829              		.loc 1 202 0
 830 006e 3032     		adds	r2, r2, #48
 831 0070 1370     		strb	r3, [r2]
 203:Generated_Source\PSoC5/CapSense.c ****         
 832              		.loc 1 203 0
 833 0072 103A     		subs	r2, r2, #16
 834 0074 1370     		strb	r3, [r2]
 242:Generated_Source\PSoC5/CapSense.c ****     (void)CyIntSetVector(CapSense_IsrCH0_ISR_NUMBER, &CapSense_IsrCH0_ISR);
 835              		.loc 1 242 0
 836 0076 0124     		movs	r4, #1
 837 0078 03F1E023 		add	r3, r3, #-536813568
 838 007c 8133     		adds	r3, r3, #129
 839 007e 1C60     		str	r4, [r3]
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 51


 243:Generated_Source\PSoC5/CapSense.c ****     CyIntSetPriority(CapSense_IsrCH0_ISR_NUMBER, CapSense_IsrCH0_ISR_PRIORITY);
 840              		.loc 1 243 0
 841 0080 1649     		ldr	r1, .L69+16
 842 0082 0020     		movs	r0, #0
 843 0084 FFF7FEFF 		bl	CyIntSetVector
 844              	.LVL57:
 244:Generated_Source\PSoC5/CapSense.c ****     
 845              		.loc 1 244 0
 846 0088 2946     		mov	r1, r5
 847 008a 0020     		movs	r0, #0
 848 008c FFF7FEFF 		bl	CyIntSetPriority
 849              	.LVL58:
 253:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMOD_CHANNEL);
 850              		.loc 1 253 0
 851 0090 FFF7FEFF 		bl	CapSense_AMuxCH0_Init
 852              	.LVL59:
 254:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMP_VP_CHANNEL);
 853              		.loc 1 254 0
 854 0094 2046     		mov	r0, r4
 855 0096 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 856              	.LVL60:
 255:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 857              		.loc 1 255 0
 858 009a 0220     		movs	r0, #2
 859 009c FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 860              	.LVL61:
 257:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 861              		.loc 1 257 0
 862 00a0 0320     		movs	r0, #3
 863 00a2 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 864              	.LVL62:
 275:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 865              		.loc 1 275 0
 866 00a6 0E4A     		ldr	r2, .L69+20
 867 00a8 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 868 00aa 43F00403 		orr	r3, r3, #4
 869 00ae 1370     		strb	r3, [r2]
 281:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 870              		.loc 1 281 0
 871 00b0 FFF7FEFF 		bl	CapSense_CompCH0_Init
 872              	.LVL63:
 283:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetPolarity(CapSense_IdacCH0_IDIR);
 873              		.loc 1 283 0
 874 00b4 FFF7FEFF 		bl	CapSense_IdacCH0_Init
 875              	.LVL64:
 284:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetRange(CapSense_IDAC_RANGE_VALUE);
 876              		.loc 1 284 0
 877 00b8 0020     		movs	r0, #0
 878 00ba FFF7FEFF 		bl	CapSense_IdacCH0_SetPolarity
 879              	.LVL65:
 285:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 880              		.loc 1 285 0
 881 00be 0020     		movs	r0, #0
 882 00c0 FFF7FEFF 		bl	CapSense_IdacCH0_SetRange
 883              	.LVL66:
 286:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 884              		.loc 1 286 0
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 52


 885 00c4 0020     		movs	r0, #0
 886 00c6 FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 887              	.LVL67:
 888 00ca 38BD     		pop	{r3, r4, r5, pc}
 889              	.L70:
 890              		.align	2
 891              	.L69:
 892 00cc 98640040 		.word	1073767576
 893 00d0 28640040 		.word	1073767464
 894 00d4 9B640040 		.word	1073767579
 895 00d8 2B640040 		.word	1073767467
 896 00dc 00000000 		.word	CapSense_IsrCH0_ISR
 897 00e0 79640040 		.word	1073767545
 898              		.cfi_endproc
 899              	.LFE0:
 900              		.size	CapSense_Init, .-CapSense_Init
 901              		.section	.text.CapSense_Start,"ax",%progbits
 902              		.align	2
 903              		.global	CapSense_Start
 904              		.thumb
 905              		.thumb_func
 906              		.type	CapSense_Start, %function
 907              	CapSense_Start:
 908              	.LFB2:
 478:Generated_Source\PSoC5/CapSense.c ****     if (CapSense_initVar == 0u)
 909              		.loc 1 478 0
 910              		.cfi_startproc
 911              		@ args = 0, pretend = 0, frame = 0
 912              		@ frame_needed = 0, uses_anonymous_args = 0
 913 0000 08B5     		push	{r3, lr}
 914              		.cfi_def_cfa_offset 8
 915              		.cfi_offset 3, -8
 916              		.cfi_offset 14, -4
 479:Generated_Source\PSoC5/CapSense.c ****     {
 917              		.loc 1 479 0
 918 0002 054B     		ldr	r3, .L74
 919 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 920 0006 23B9     		cbnz	r3, .L72
 481:Generated_Source\PSoC5/CapSense.c ****         CapSense_initVar = 1u;
 921              		.loc 1 481 0
 922 0008 FFF7FEFF 		bl	CapSense_Init
 923              	.LVL68:
 482:Generated_Source\PSoC5/CapSense.c ****     }
 924              		.loc 1 482 0
 925 000c 0122     		movs	r2, #1
 926 000e 024B     		ldr	r3, .L74
 927 0010 1A70     		strb	r2, [r3]
 928              	.L72:
 484:Generated_Source\PSoC5/CapSense.c ****     
 929              		.loc 1 484 0
 930 0012 FFF7FEFF 		bl	CapSense_Enable
 931              	.LVL69:
 932 0016 08BD     		pop	{r3, pc}
 933              	.L75:
 934              		.align	2
 935              	.L74:
 936 0018 00000000 		.word	.LANCHOR1
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 53


 937              		.cfi_endproc
 938              	.LFE2:
 939              		.size	CapSense_Start, .-CapSense_Start
 940              		.global	CapSense_widgetNumber
 941              		.global	CapSense_analogSwitchDivider
 942              		.global	CapSense_widgetResolution
 943              		.global	CapSense_idacSettings
 944              		.global	CapSense_csTable
 945              		.global	CapSense_maskTable
 946              		.global	CapSense_portTable
 947              		.global	CapSense_pcTable
 948              		.global	CapSense_sensorEnableMask
 949              		.comm	CapSense_sensorRaw,2,4
 950              		.comm	CapSense_sensorIndex,1,1
 951              		.comm	CapSense_csv,1,1
 952              		.section	.rodata
 953              		.align	2
 954              		.type	CapSense_widgetNumber, %object
 955              		.size	CapSense_widgetNumber, 1
 956              	CapSense_widgetNumber:
 957 0000 00       		.space	1
 958 0001 000000   		.space	3
 959              		.type	CapSense_widgetResolution, %object
 960              		.size	CapSense_widgetResolution, 1
 961              	CapSense_widgetResolution:
 962 0004 03       		.byte	3
 963 0005 000000   		.space	3
 964              		.type	CapSense_idacSettings, %object
 965              		.size	CapSense_idacSettings, 1
 966              	CapSense_idacSettings:
 967 0008 C8       		.byte	-56
 968 0009 000000   		.space	3
 969              		.type	CapSense_csTable, %object
 970              		.size	CapSense_csTable, 32
 971              	CapSense_csTable:
 972 000c 06520040 		.word	1073762822
 973 0010 0E520040 		.word	1073762830
 974 0014 16520040 		.word	1073762838
 975 0018 1E520040 		.word	1073762846
 976 001c 26520040 		.word	1073762854
 977 0020 2E520040 		.word	1073762862
 978 0024 36520040 		.word	1073762870
 979 0028 7E520040 		.word	1073762942
 980              		.type	CapSense_maskTable, %object
 981              		.size	CapSense_maskTable, 1
 982              	CapSense_maskTable:
 983 002c 80       		.byte	-128
 984 002d 000000   		.space	3
 985              		.type	CapSense_portTable, %object
 986              		.size	CapSense_portTable, 1
 987              	CapSense_portTable:
 988 0030 01       		.byte	1
 989 0031 000000   		.space	3
 990              		.type	CapSense_pcTable, %object
 991              		.size	CapSense_pcTable, 4
 992              	CapSense_pcTable:
 993 0034 0F500040 		.word	1073762319
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 54


 994              		.data
 995              		.align	2
 996              		.set	.LANCHOR0,. + 0
 997              		.type	CapSense_sensorEnableMask, %object
 998              		.size	CapSense_sensorEnableMask, 1
 999              	CapSense_sensorEnableMask:
 1000 0000 01       		.byte	1
 1001 0001 000000   		.space	3
 1002              		.type	CapSense_analogSwitchDivider, %object
 1003              		.size	CapSense_analogSwitchDivider, 1
 1004              	CapSense_analogSwitchDivider:
 1005 0004 0B       		.byte	11
 1006              		.bss
 1007              		.set	.LANCHOR1,. + 0
 1008              		.type	CapSense_initVar, %object
 1009              		.size	CapSense_initVar, 1
 1010              	CapSense_initVar:
 1011 0000 00       		.space	1
 1012              		.text
 1013              	.Letext0:
 1014              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1015              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 1016              		.file 4 "Generated_Source\\PSoC5\\CapSense_IntClock.h"
 1017              		.file 5 "Generated_Source\\PSoC5\\CapSense_CompCH0.h"
 1018              		.file 6 "Generated_Source\\PSoC5\\CapSense_IdacCH0.h"
 1019              		.file 7 "Generated_Source\\PSoC5\\cyfitter_cfg.h"
 1020              		.file 8 "Generated_Source\\PSoC5\\CapSense_AMuxCH0.h"
 1021              		.section	.debug_info,"",%progbits
 1022              	.Ldebug_info0:
 1023 0000 07080000 		.4byte	0x807
 1024 0004 0400     		.2byte	0x4
 1025 0006 00000000 		.4byte	.Ldebug_abbrev0
 1026 000a 04       		.byte	0x4
 1027 000b 01       		.uleb128 0x1
 1028 000c A4040000 		.4byte	.LASF79
 1029 0010 0C       		.byte	0xc
 1030 0011 2A000000 		.4byte	.LASF80
 1031 0015 D9020000 		.4byte	.LASF81
 1032 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1033 001d 00000000 		.4byte	0
 1034 0021 00000000 		.4byte	.Ldebug_line0
 1035 0025 02       		.uleb128 0x2
 1036 0026 01       		.byte	0x1
 1037 0027 06       		.byte	0x6
 1038 0028 F4000000 		.4byte	.LASF0
 1039 002c 02       		.uleb128 0x2
 1040 002d 01       		.byte	0x1
 1041 002e 08       		.byte	0x8
 1042 002f 22040000 		.4byte	.LASF1
 1043 0033 02       		.uleb128 0x2
 1044 0034 02       		.byte	0x2
 1045 0035 05       		.byte	0x5
 1046 0036 60040000 		.4byte	.LASF2
 1047 003a 02       		.uleb128 0x2
 1048 003b 02       		.byte	0x2
 1049 003c 07       		.byte	0x7
 1050 003d AF020000 		.4byte	.LASF3
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 55


 1051 0041 02       		.uleb128 0x2
 1052 0042 04       		.byte	0x4
 1053 0043 05       		.byte	0x5
 1054 0044 21010000 		.4byte	.LASF4
 1055 0048 02       		.uleb128 0x2
 1056 0049 04       		.byte	0x4
 1057 004a 07       		.byte	0x7
 1058 004b 48020000 		.4byte	.LASF5
 1059 004f 02       		.uleb128 0x2
 1060 0050 08       		.byte	0x8
 1061 0051 05       		.byte	0x5
 1062 0052 E6000000 		.4byte	.LASF6
 1063 0056 02       		.uleb128 0x2
 1064 0057 08       		.byte	0x8
 1065 0058 07       		.byte	0x7
 1066 0059 91000000 		.4byte	.LASF7
 1067 005d 03       		.uleb128 0x3
 1068 005e 04       		.byte	0x4
 1069 005f 05       		.byte	0x5
 1070 0060 696E7400 		.ascii	"int\000"
 1071 0064 02       		.uleb128 0x2
 1072 0065 04       		.byte	0x4
 1073 0066 07       		.byte	0x7
 1074 0067 0B020000 		.4byte	.LASF8
 1075 006b 04       		.uleb128 0x4
 1076 006c 30010000 		.4byte	.LASF9
 1077 0070 02       		.byte	0x2
 1078 0071 E401     		.2byte	0x1e4
 1079 0073 2C000000 		.4byte	0x2c
 1080 0077 04       		.uleb128 0x4
 1081 0078 00000000 		.4byte	.LASF10
 1082 007c 02       		.byte	0x2
 1083 007d E501     		.2byte	0x1e5
 1084 007f 3A000000 		.4byte	0x3a
 1085 0083 04       		.uleb128 0x4
 1086 0084 AC010000 		.4byte	.LASF11
 1087 0088 02       		.byte	0x2
 1088 0089 E601     		.2byte	0x1e6
 1089 008b 48000000 		.4byte	0x48
 1090 008f 02       		.uleb128 0x2
 1091 0090 04       		.byte	0x4
 1092 0091 04       		.byte	0x4
 1093 0092 F5030000 		.4byte	.LASF12
 1094 0096 02       		.uleb128 0x2
 1095 0097 08       		.byte	0x8
 1096 0098 04       		.byte	0x4
 1097 0099 4C010000 		.4byte	.LASF13
 1098 009d 02       		.uleb128 0x2
 1099 009e 01       		.byte	0x1
 1100 009f 08       		.byte	0x8
 1101 00a0 32050000 		.4byte	.LASF14
 1102 00a4 04       		.uleb128 0x4
 1103 00a5 05040000 		.4byte	.LASF15
 1104 00a9 02       		.byte	0x2
 1105 00aa 8E02     		.2byte	0x28e
 1106 00ac B0000000 		.4byte	0xb0
 1107 00b0 05       		.uleb128 0x5
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 56


 1108 00b1 6B000000 		.4byte	0x6b
 1109 00b5 04       		.uleb128 0x4
 1110 00b6 2A010000 		.4byte	.LASF16
 1111 00ba 02       		.byte	0x2
 1112 00bb 8F02     		.2byte	0x28f
 1113 00bd C1000000 		.4byte	0xc1
 1114 00c1 05       		.uleb128 0x5
 1115 00c2 77000000 		.4byte	0x77
 1116 00c6 04       		.uleb128 0x4
 1117 00c7 49030000 		.4byte	.LASF17
 1118 00cb 02       		.byte	0x2
 1119 00cc 9002     		.2byte	0x290
 1120 00ce D2000000 		.4byte	0xd2
 1121 00d2 05       		.uleb128 0x5
 1122 00d3 83000000 		.4byte	0x83
 1123 00d7 02       		.uleb128 0x2
 1124 00d8 08       		.byte	0x8
 1125 00d9 04       		.byte	0x4
 1126 00da 86030000 		.4byte	.LASF18
 1127 00de 02       		.uleb128 0x2
 1128 00df 04       		.byte	0x4
 1129 00e0 07       		.byte	0x7
 1130 00e1 6C030000 		.4byte	.LASF19
 1131 00e5 06       		.uleb128 0x6
 1132 00e6 C0000000 		.4byte	.LASF26
 1133 00ea 01       		.byte	0x1
 1134 00eb 4401     		.2byte	0x144
 1135 00ed 00000000 		.4byte	.LFB1
 1136 00f1 68000000 		.4byte	.LFE1-.LFB1
 1137 00f5 01       		.uleb128 0x1
 1138 00f6 9C       		.byte	0x9c
 1139 00f7 40010000 		.4byte	0x140
 1140 00fb 07       		.uleb128 0x7
 1141 00fc 9B050000 		.4byte	.LASF20
 1142 0100 01       		.byte	0x1
 1143 0101 4601     		.2byte	0x146
 1144 0103 6B000000 		.4byte	0x6b
 1145 0107 00000000 		.4byte	.LLST0
 1146 010b 08       		.uleb128 0x8
 1147 010c 06000000 		.4byte	.LVL0
 1148 0110 44070000 		.4byte	0x744
 1149 0114 08       		.uleb128 0x8
 1150 0115 16000000 		.4byte	.LVL2
 1151 0119 4F070000 		.4byte	0x74f
 1152 011d 08       		.uleb128 0x8
 1153 011e 1A000000 		.4byte	.LVL3
 1154 0122 5A070000 		.4byte	0x75a
 1155 0126 08       		.uleb128 0x8
 1156 0127 1E000000 		.4byte	.LVL4
 1157 012b 65070000 		.4byte	0x765
 1158 012f 09       		.uleb128 0x9
 1159 0130 46000000 		.4byte	.LVL5
 1160 0134 70070000 		.4byte	0x770
 1161 0138 0A       		.uleb128 0xa
 1162 0139 01       		.uleb128 0x1
 1163 013a 50       		.byte	0x50
 1164 013b 02       		.uleb128 0x2
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 57


 1165 013c 74       		.byte	0x74
 1166 013d 00       		.sleb128 0
 1167 013e 00       		.byte	0
 1168 013f 00       		.byte	0
 1169 0140 0B       		.uleb128 0xb
 1170 0141 0A040000 		.4byte	.LASF22
 1171 0145 01       		.byte	0x1
 1172 0146 8C02     		.2byte	0x28c
 1173 0148 6B000000 		.4byte	0x6b
 1174 014c 00000000 		.4byte	.LFB4
 1175 0150 20000000 		.4byte	.LFE4-.LFB4
 1176 0154 01       		.uleb128 0x1
 1177 0155 9C       		.byte	0x9c
 1178 0156 89010000 		.4byte	0x189
 1179 015a 0C       		.uleb128 0xc
 1180 015b 88000000 		.4byte	.LASF24
 1181 015f 01       		.byte	0x1
 1182 0160 8C02     		.2byte	0x28c
 1183 0162 6B000000 		.4byte	0x6b
 1184 0166 13000000 		.4byte	.LLST1
 1185 016a 0D       		.uleb128 0xd
 1186 016b 706F7300 		.ascii	"pos\000"
 1187 016f 01       		.byte	0x1
 1188 0170 8E02     		.2byte	0x28e
 1189 0172 6B000000 		.4byte	0x6b
 1190 0176 01       		.uleb128 0x1
 1191 0177 52       		.byte	0x52
 1192 0178 07       		.uleb128 0x7
 1193 0179 AA030000 		.4byte	.LASF21
 1194 017d 01       		.byte	0x1
 1195 017e 8F02     		.2byte	0x28f
 1196 0180 6B000000 		.4byte	0x6b
 1197 0184 3F000000 		.4byte	.LLST2
 1198 0188 00       		.byte	0
 1199 0189 0E       		.uleb128 0xe
 1200 018a 3E060000 		.4byte	.LASF82
 1201 018e 01       		.byte	0x1
 1202 018f 1804     		.2byte	0x418
 1203 0191 6B000000 		.4byte	0x6b
 1204 0195 00000000 		.4byte	.LFB8
 1205 0199 10000000 		.4byte	.LFE8-.LFB8
 1206 019d 01       		.uleb128 0x1
 1207 019e 9C       		.byte	0x9c
 1208 019f 0B       		.uleb128 0xb
 1209 01a0 95010000 		.4byte	.LASF23
 1210 01a4 01       		.byte	0x1
 1211 01a5 3104     		.2byte	0x431
 1212 01a7 77000000 		.4byte	0x77
 1213 01ab 00000000 		.4byte	.LFB9
 1214 01af 0C000000 		.4byte	.LFE9-.LFB9
 1215 01b3 01       		.uleb128 0x1
 1216 01b4 9C       		.byte	0x9c
 1217 01b5 CA010000 		.4byte	0x1ca
 1218 01b9 0C       		.uleb128 0xc
 1219 01ba 23030000 		.4byte	.LASF25
 1220 01be 01       		.byte	0x1
 1221 01bf 3104     		.2byte	0x431
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 58


 1222 01c1 6B000000 		.4byte	0x6b
 1223 01c5 52000000 		.4byte	.LLST3
 1224 01c9 00       		.byte	0
 1225 01ca 06       		.uleb128 0x6
 1226 01cb 53010000 		.4byte	.LASF27
 1227 01cf 01       		.byte	0x1
 1228 01d0 DC04     		.2byte	0x4dc
 1229 01d2 00000000 		.4byte	.LFB11
 1230 01d6 20000000 		.4byte	.LFE11-.LFB11
 1231 01da 01       		.uleb128 0x1
 1232 01db 9C       		.byte	0x9c
 1233 01dc 15020000 		.4byte	0x215
 1234 01e0 0C       		.uleb128 0xc
 1235 01e1 23030000 		.4byte	.LASF25
 1236 01e5 01       		.byte	0x1
 1237 01e6 DC04     		.2byte	0x4dc
 1238 01e8 6B000000 		.4byte	0x6b
 1239 01ec 73000000 		.4byte	.LLST4
 1240 01f0 0F       		.uleb128 0xf
 1241 01f1 DD010000 		.4byte	.LASF28
 1242 01f5 01       		.byte	0x1
 1243 01f6 DE04     		.2byte	0x4de
 1244 01f8 6B000000 		.4byte	0x6b
 1245 01fc 01       		.byte	0x1
 1246 01fd 10       		.uleb128 0x10
 1247 01fe C2010000 		.4byte	.LASF29
 1248 0202 01       		.byte	0x1
 1249 0203 DF04     		.2byte	0x4df
 1250 0205 6B000000 		.4byte	0x6b
 1251 0209 807F     		.sleb128 -128
 1252 020b 08       		.uleb128 0x8
 1253 020c 16000000 		.4byte	.LVL15
 1254 0210 7B070000 		.4byte	0x77b
 1255 0214 00       		.byte	0
 1256 0215 06       		.uleb128 0x6
 1257 0216 C2050000 		.4byte	.LASF30
 1258 021a 01       		.byte	0x1
 1259 021b 3105     		.2byte	0x531
 1260 021d 00000000 		.4byte	.LFB12
 1261 0221 20000000 		.4byte	.LFE12-.LFB12
 1262 0225 01       		.uleb128 0x1
 1263 0226 9C       		.byte	0x9c
 1264 0227 60020000 		.4byte	0x260
 1265 022b 0C       		.uleb128 0xc
 1266 022c 23030000 		.4byte	.LASF25
 1267 0230 01       		.byte	0x1
 1268 0231 3105     		.2byte	0x531
 1269 0233 6B000000 		.4byte	0x6b
 1270 0237 94000000 		.4byte	.LLST5
 1271 023b 0F       		.uleb128 0xf
 1272 023c DD010000 		.4byte	.LASF28
 1273 0240 01       		.byte	0x1
 1274 0241 3305     		.2byte	0x533
 1275 0243 6B000000 		.4byte	0x6b
 1276 0247 01       		.byte	0x1
 1277 0248 10       		.uleb128 0x10
 1278 0249 C2010000 		.4byte	.LASF29
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 59


 1279 024d 01       		.byte	0x1
 1280 024e 3405     		.2byte	0x534
 1281 0250 6B000000 		.4byte	0x6b
 1282 0254 807F     		.sleb128 -128
 1283 0256 08       		.uleb128 0x8
 1284 0257 06000000 		.4byte	.LVL18
 1285 025b 86070000 		.4byte	0x786
 1286 025f 00       		.byte	0
 1287 0260 06       		.uleb128 0x6
 1288 0261 18020000 		.4byte	.LASF31
 1289 0265 01       		.byte	0x1
 1290 0266 4604     		.2byte	0x446
 1291 0268 00000000 		.4byte	.LFB10
 1292 026c 16000000 		.4byte	.LFE10-.LFB10
 1293 0270 01       		.uleb128 0x1
 1294 0271 9C       		.byte	0x9c
 1295 0272 95020000 		.4byte	0x295
 1296 0276 11       		.uleb128 0x11
 1297 0277 6900     		.ascii	"i\000"
 1298 0279 01       		.byte	0x1
 1299 027a 4804     		.2byte	0x448
 1300 027c 6B000000 		.4byte	0x6b
 1301 0280 B5000000 		.4byte	.LLST6
 1302 0284 09       		.uleb128 0x9
 1303 0285 0C000000 		.4byte	.LVL21
 1304 0289 15020000 		.4byte	0x215
 1305 028d 0A       		.uleb128 0xa
 1306 028e 01       		.uleb128 0x1
 1307 028f 50       		.byte	0x50
 1308 0290 02       		.uleb128 0x2
 1309 0291 74       		.byte	0x74
 1310 0292 00       		.sleb128 0
 1311 0293 00       		.byte	0
 1312 0294 00       		.byte	0
 1313 0295 06       		.uleb128 0x6
 1314 0296 92030000 		.4byte	.LASF32
 1315 029a 01       		.byte	0x1
 1316 029b 0202     		.2byte	0x202
 1317 029d 00000000 		.4byte	.LFB3
 1318 02a1 68000000 		.4byte	.LFE3-.LFB3
 1319 02a5 01       		.uleb128 0x1
 1320 02a6 9C       		.byte	0x9c
 1321 02a7 D0020000 		.4byte	0x2d0
 1322 02ab 08       		.uleb128 0x8
 1323 02ac 16000000 		.4byte	.LVL24
 1324 02b0 60020000 		.4byte	0x260
 1325 02b4 08       		.uleb128 0x8
 1326 02b5 24000000 		.4byte	.LVL25
 1327 02b9 91070000 		.4byte	0x791
 1328 02bd 08       		.uleb128 0x8
 1329 02be 28000000 		.4byte	.LVL26
 1330 02c2 9C070000 		.4byte	0x79c
 1331 02c6 08       		.uleb128 0x8
 1332 02c7 2C000000 		.4byte	.LVL27
 1333 02cb A7070000 		.4byte	0x7a7
 1334 02cf 00       		.byte	0
 1335 02d0 06       		.uleb128 0x6
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 60


 1336 02d1 89050000 		.4byte	.LASF33
 1337 02d5 01       		.byte	0x1
 1338 02d6 2D06     		.2byte	0x62d
 1339 02d8 00000000 		.4byte	.LFB14
 1340 02dc 4C000000 		.4byte	.LFE14-.LFB14
 1341 02e0 01       		.uleb128 0x1
 1342 02e1 9C       		.byte	0x9c
 1343 02e2 0F030000 		.4byte	0x30f
 1344 02e6 0C       		.uleb128 0xc
 1345 02e7 23030000 		.4byte	.LASF25
 1346 02eb 01       		.byte	0x1
 1347 02ec 2D06     		.2byte	0x62d
 1348 02ee 6B000000 		.4byte	0x6b
 1349 02f2 DF000000 		.4byte	.LLST7
 1350 02f6 08       		.uleb128 0x8
 1351 02f7 28000000 		.4byte	.LVL29
 1352 02fb 15020000 		.4byte	0x215
 1353 02ff 09       		.uleb128 0x9
 1354 0300 2E000000 		.4byte	.LVL30
 1355 0304 B2070000 		.4byte	0x7b2
 1356 0308 0A       		.uleb128 0xa
 1357 0309 01       		.uleb128 0x1
 1358 030a 50       		.byte	0x50
 1359 030b 01       		.uleb128 0x1
 1360 030c 30       		.byte	0x30
 1361 030d 00       		.byte	0
 1362 030e 00       		.byte	0
 1363 030f 06       		.uleb128 0x6
 1364 0310 D0000000 		.4byte	.LASF34
 1365 0314 01       		.byte	0x1
 1366 0315 3B07     		.2byte	0x73b
 1367 0317 00000000 		.4byte	.LFB15
 1368 031b 10000000 		.4byte	.LFE15-.LFB15
 1369 031f 01       		.uleb128 0x1
 1370 0320 9C       		.byte	0x9c
 1371 0321 36030000 		.4byte	0x336
 1372 0325 0C       		.uleb128 0xc
 1373 0326 FB030000 		.4byte	.LASF35
 1374 032a 01       		.byte	0x1
 1375 032b 3B07     		.2byte	0x73b
 1376 032d 6B000000 		.4byte	0x6b
 1377 0331 00010000 		.4byte	.LLST8
 1378 0335 00       		.byte	0
 1379 0336 06       		.uleb128 0x6
 1380 0337 71040000 		.4byte	.LASF36
 1381 033b 01       		.byte	0x1
 1382 033c 2603     		.2byte	0x326
 1383 033e 00000000 		.4byte	.LFB5
 1384 0342 24000000 		.4byte	.LFE5-.LFB5
 1385 0346 01       		.uleb128 0x1
 1386 0347 9C       		.byte	0x9c
 1387 0348 87030000 		.4byte	0x387
 1388 034c 0C       		.uleb128 0xc
 1389 034d 44030000 		.4byte	.LASF37
 1390 0351 01       		.byte	0x1
 1391 0352 2603     		.2byte	0x326
 1392 0354 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 61


 1393 0358 3C010000 		.4byte	.LLST9
 1394 035c 0F       		.uleb128 0xf
 1395 035d 6A040000 		.4byte	.LASF38
 1396 0361 01       		.byte	0x1
 1397 0362 2803     		.2byte	0x328
 1398 0364 6B000000 		.4byte	0x6b
 1399 0368 00       		.byte	0
 1400 0369 12       		.uleb128 0x12
 1401 036a 0A000000 		.4byte	.LVL38
 1402 036e B2070000 		.4byte	0x7b2
 1403 0372 7D030000 		.4byte	0x37d
 1404 0376 0A       		.uleb128 0xa
 1405 0377 01       		.uleb128 0x1
 1406 0378 50       		.byte	0x50
 1407 0379 02       		.uleb128 0x2
 1408 037a 09       		.byte	0x9
 1409 037b C8       		.byte	0xc8
 1410 037c 00       		.byte	0
 1411 037d 08       		.uleb128 0x8
 1412 037e 1A000000 		.4byte	.LVL39
 1413 0382 0F030000 		.4byte	0x30f
 1414 0386 00       		.byte	0
 1415 0387 06       		.uleb128 0x6
 1416 0388 D9050000 		.4byte	.LASF39
 1417 038c 01       		.byte	0x1
 1418 038d 8505     		.2byte	0x585
 1419 038f 00000000 		.4byte	.LFB13
 1420 0393 34000000 		.4byte	.LFE13-.LFB13
 1421 0397 01       		.uleb128 0x1
 1422 0398 9C       		.byte	0x9c
 1423 0399 D2030000 		.4byte	0x3d2
 1424 039d 0C       		.uleb128 0xc
 1425 039e 23030000 		.4byte	.LASF25
 1426 03a2 01       		.byte	0x1
 1427 03a3 8505     		.2byte	0x585
 1428 03a5 6B000000 		.4byte	0x6b
 1429 03a9 5D010000 		.4byte	.LLST10
 1430 03ad 12       		.uleb128 0x12
 1431 03ae 08000000 		.4byte	.LVL41
 1432 03b2 36030000 		.4byte	0x336
 1433 03b6 C1030000 		.4byte	0x3c1
 1434 03ba 0A       		.uleb128 0xa
 1435 03bb 01       		.uleb128 0x1
 1436 03bc 50       		.byte	0x50
 1437 03bd 02       		.uleb128 0x2
 1438 03be 75       		.byte	0x75
 1439 03bf 00       		.sleb128 0
 1440 03c0 00       		.byte	0
 1441 03c1 09       		.uleb128 0x9
 1442 03c2 22000000 		.4byte	.LVL42
 1443 03c6 CA010000 		.4byte	0x1ca
 1444 03ca 0A       		.uleb128 0xa
 1445 03cb 01       		.uleb128 0x1
 1446 03cc 50       		.byte	0x50
 1447 03cd 02       		.uleb128 0x2
 1448 03ce 75       		.byte	0x75
 1449 03cf 00       		.sleb128 0
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 62


 1450 03d0 00       		.byte	0
 1451 03d1 00       		.byte	0
 1452 03d2 06       		.uleb128 0x6
 1453 03d3 F7010000 		.4byte	.LASF40
 1454 03d7 01       		.byte	0x1
 1455 03d8 9603     		.2byte	0x396
 1456 03da 00000000 		.4byte	.LFB6
 1457 03de 20000000 		.4byte	.LFE6-.LFB6
 1458 03e2 01       		.uleb128 0x1
 1459 03e3 9C       		.byte	0x9c
 1460 03e4 02040000 		.4byte	0x402
 1461 03e8 0C       		.uleb128 0xc
 1462 03e9 23030000 		.4byte	.LASF25
 1463 03ed 01       		.byte	0x1
 1464 03ee 9603     		.2byte	0x396
 1465 03f0 6B000000 		.4byte	0x6b
 1466 03f4 7E010000 		.4byte	.LLST11
 1467 03f8 08       		.uleb128 0x8
 1468 03f9 14000000 		.4byte	.LVL44
 1469 03fd 87030000 		.4byte	0x387
 1470 0401 00       		.byte	0
 1471 0402 06       		.uleb128 0x6
 1472 0403 0B060000 		.4byte	.LASF41
 1473 0407 01       		.byte	0x1
 1474 0408 E303     		.2byte	0x3e3
 1475 040a 00000000 		.4byte	.LFB7
 1476 040e 38000000 		.4byte	.LFE7-.LFB7
 1477 0412 01       		.uleb128 0x1
 1478 0413 9C       		.byte	0x9c
 1479 0414 2B040000 		.4byte	0x42b
 1480 0418 08       		.uleb128 0x8
 1481 0419 14000000 		.4byte	.LVL45
 1482 041d 40010000 		.4byte	0x140
 1483 0421 08       		.uleb128 0x8
 1484 0422 2E000000 		.4byte	.LVL46
 1485 0426 87030000 		.4byte	0x387
 1486 042a 00       		.byte	0
 1487 042b 0B       		.uleb128 0xb
 1488 042c 8E040000 		.4byte	.LASF42
 1489 0430 01       		.byte	0x1
 1490 0431 5807     		.2byte	0x758
 1491 0433 6B000000 		.4byte	0x6b
 1492 0437 00000000 		.4byte	.LFB16
 1493 043b 0C000000 		.4byte	.LFE16-.LFB16
 1494 043f 01       		.uleb128 0x1
 1495 0440 9C       		.byte	0x9c
 1496 0441 56040000 		.4byte	0x456
 1497 0445 07       		.uleb128 0x7
 1498 0446 FB030000 		.4byte	.LASF35
 1499 044a 01       		.byte	0x1
 1500 044b 5A07     		.2byte	0x75a
 1501 044d 6B000000 		.4byte	0x6b
 1502 0451 9F010000 		.4byte	.LLST12
 1503 0455 00       		.byte	0
 1504 0456 06       		.uleb128 0x6
 1505 0457 4F050000 		.4byte	.LASF43
 1506 045b 01       		.byte	0x1
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 63


 1507 045c 7A07     		.2byte	0x77a
 1508 045e 00000000 		.4byte	.LFB17
 1509 0462 0C000000 		.4byte	.LFE17-.LFB17
 1510 0466 01       		.uleb128 0x1
 1511 0467 9C       		.byte	0x9c
 1512 0468 7B040000 		.4byte	0x47b
 1513 046c 13       		.uleb128 0x13
 1514 046d A0030000 		.4byte	.LASF44
 1515 0471 01       		.byte	0x1
 1516 0472 7A07     		.2byte	0x77a
 1517 0474 6B000000 		.4byte	0x6b
 1518 0478 01       		.uleb128 0x1
 1519 0479 50       		.byte	0x50
 1520 047a 00       		.byte	0
 1521 047b 06       		.uleb128 0x6
 1522 047c 00010000 		.4byte	.LASF45
 1523 0480 01       		.byte	0x1
 1524 0481 9507     		.2byte	0x795
 1525 0483 00000000 		.4byte	.LFB18
 1526 0487 20000000 		.4byte	.LFE18-.LFB18
 1527 048b 01       		.uleb128 0x1
 1528 048c 9C       		.byte	0x9c
 1529 048d A0040000 		.4byte	0x4a0
 1530 0491 14       		.uleb128 0x14
 1531 0492 73726300 		.ascii	"src\000"
 1532 0496 01       		.byte	0x1
 1533 0497 9507     		.2byte	0x795
 1534 0499 6B000000 		.4byte	0x6b
 1535 049d 01       		.uleb128 0x1
 1536 049e 50       		.byte	0x50
 1537 049f 00       		.byte	0
 1538 04a0 15       		.uleb128 0x15
 1539 04a1 EA050000 		.4byte	.LASF46
 1540 04a5 01       		.byte	0x1
 1541 04a6 63       		.byte	0x63
 1542 04a7 00000000 		.4byte	.LFB0
 1543 04ab E4000000 		.4byte	.LFE0-.LFB0
 1544 04af 01       		.uleb128 0x1
 1545 04b0 9C       		.byte	0x9c
 1546 04b1 BB050000 		.4byte	0x5bb
 1547 04b5 16       		.uleb128 0x16
 1548 04b6 9B050000 		.4byte	.LASF20
 1549 04ba 01       		.byte	0x1
 1550 04bb 6A       		.byte	0x6a
 1551 04bc 6B000000 		.4byte	0x6b
 1552 04c0 BE010000 		.4byte	.LLST13
 1553 04c4 08       		.uleb128 0x8
 1554 04c5 06000000 		.4byte	.LVL51
 1555 04c9 60020000 		.4byte	0x260
 1556 04cd 12       		.uleb128 0x12
 1557 04ce 0C000000 		.4byte	.LVL52
 1558 04d2 7B040000 		.4byte	0x47b
 1559 04d6 E0040000 		.4byte	0x4e0
 1560 04da 0A       		.uleb128 0xa
 1561 04db 01       		.uleb128 0x1
 1562 04dc 50       		.byte	0x50
 1563 04dd 01       		.uleb128 0x1
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 64


 1564 04de 32       		.byte	0x32
 1565 04df 00       		.byte	0
 1566 04e0 08       		.uleb128 0x8
 1567 04e1 10000000 		.4byte	.LVL53
 1568 04e5 44070000 		.4byte	0x744
 1569 04e9 08       		.uleb128 0x8
 1570 04ea 28000000 		.4byte	.LVL54
 1571 04ee 70070000 		.4byte	0x770
 1572 04f2 08       		.uleb128 0x8
 1573 04f3 42000000 		.4byte	.LVL55
 1574 04f7 44070000 		.4byte	0x744
 1575 04fb 08       		.uleb128 0x8
 1576 04fc 5A000000 		.4byte	.LVL56
 1577 0500 70070000 		.4byte	0x770
 1578 0504 12       		.uleb128 0x12
 1579 0505 88000000 		.4byte	.LVL57
 1580 0509 BD070000 		.4byte	0x7bd
 1581 050d 17050000 		.4byte	0x517
 1582 0511 0A       		.uleb128 0xa
 1583 0512 01       		.uleb128 0x1
 1584 0513 50       		.byte	0x50
 1585 0514 01       		.uleb128 0x1
 1586 0515 30       		.byte	0x30
 1587 0516 00       		.byte	0
 1588 0517 12       		.uleb128 0x12
 1589 0518 90000000 		.4byte	.LVL58
 1590 051c C8070000 		.4byte	0x7c8
 1591 0520 30050000 		.4byte	0x530
 1592 0524 0A       		.uleb128 0xa
 1593 0525 01       		.uleb128 0x1
 1594 0526 50       		.byte	0x50
 1595 0527 01       		.uleb128 0x1
 1596 0528 30       		.byte	0x30
 1597 0529 0A       		.uleb128 0xa
 1598 052a 01       		.uleb128 0x1
 1599 052b 51       		.byte	0x51
 1600 052c 02       		.uleb128 0x2
 1601 052d 75       		.byte	0x75
 1602 052e 00       		.sleb128 0
 1603 052f 00       		.byte	0
 1604 0530 08       		.uleb128 0x8
 1605 0531 94000000 		.4byte	.LVL59
 1606 0535 D3070000 		.4byte	0x7d3
 1607 0539 12       		.uleb128 0x12
 1608 053a 9A000000 		.4byte	.LVL60
 1609 053e 7B070000 		.4byte	0x77b
 1610 0542 4D050000 		.4byte	0x54d
 1611 0546 0A       		.uleb128 0xa
 1612 0547 01       		.uleb128 0x1
 1613 0548 50       		.byte	0x50
 1614 0549 02       		.uleb128 0x2
 1615 054a 74       		.byte	0x74
 1616 054b 00       		.sleb128 0
 1617 054c 00       		.byte	0
 1618 054d 12       		.uleb128 0x12
 1619 054e A0000000 		.4byte	.LVL61
 1620 0552 7B070000 		.4byte	0x77b
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 65


 1621 0556 60050000 		.4byte	0x560
 1622 055a 0A       		.uleb128 0xa
 1623 055b 01       		.uleb128 0x1
 1624 055c 50       		.byte	0x50
 1625 055d 01       		.uleb128 0x1
 1626 055e 32       		.byte	0x32
 1627 055f 00       		.byte	0
 1628 0560 12       		.uleb128 0x12
 1629 0561 A6000000 		.4byte	.LVL62
 1630 0565 7B070000 		.4byte	0x77b
 1631 0569 73050000 		.4byte	0x573
 1632 056d 0A       		.uleb128 0xa
 1633 056e 01       		.uleb128 0x1
 1634 056f 50       		.byte	0x50
 1635 0570 01       		.uleb128 0x1
 1636 0571 33       		.byte	0x33
 1637 0572 00       		.byte	0
 1638 0573 08       		.uleb128 0x8
 1639 0574 B4000000 		.4byte	.LVL63
 1640 0578 DE070000 		.4byte	0x7de
 1641 057c 08       		.uleb128 0x8
 1642 057d B8000000 		.4byte	.LVL64
 1643 0581 E9070000 		.4byte	0x7e9
 1644 0585 12       		.uleb128 0x12
 1645 0586 BE000000 		.4byte	.LVL65
 1646 058a F4070000 		.4byte	0x7f4
 1647 058e 98050000 		.4byte	0x598
 1648 0592 0A       		.uleb128 0xa
 1649 0593 01       		.uleb128 0x1
 1650 0594 50       		.byte	0x50
 1651 0595 01       		.uleb128 0x1
 1652 0596 30       		.byte	0x30
 1653 0597 00       		.byte	0
 1654 0598 12       		.uleb128 0x12
 1655 0599 C4000000 		.4byte	.LVL66
 1656 059d FF070000 		.4byte	0x7ff
 1657 05a1 AB050000 		.4byte	0x5ab
 1658 05a5 0A       		.uleb128 0xa
 1659 05a6 01       		.uleb128 0x1
 1660 05a7 50       		.byte	0x50
 1661 05a8 01       		.uleb128 0x1
 1662 05a9 30       		.byte	0x30
 1663 05aa 00       		.byte	0
 1664 05ab 09       		.uleb128 0x9
 1665 05ac CA000000 		.4byte	.LVL67
 1666 05b0 B2070000 		.4byte	0x7b2
 1667 05b4 0A       		.uleb128 0xa
 1668 05b5 01       		.uleb128 0x1
 1669 05b6 50       		.byte	0x50
 1670 05b7 01       		.uleb128 0x1
 1671 05b8 30       		.byte	0x30
 1672 05b9 00       		.byte	0
 1673 05ba 00       		.byte	0
 1674 05bb 06       		.uleb128 0x6
 1675 05bc 7A050000 		.4byte	.LASF47
 1676 05c0 01       		.byte	0x1
 1677 05c1 DD01     		.2byte	0x1dd
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 66


 1678 05c3 00000000 		.4byte	.LFB2
 1679 05c7 1C000000 		.4byte	.LFE2-.LFB2
 1680 05cb 01       		.uleb128 0x1
 1681 05cc 9C       		.byte	0x9c
 1682 05cd E4050000 		.4byte	0x5e4
 1683 05d1 08       		.uleb128 0x8
 1684 05d2 0C000000 		.4byte	.LVL68
 1685 05d6 A0040000 		.4byte	0x4a0
 1686 05da 08       		.uleb128 0x8
 1687 05db 16000000 		.4byte	.LVL69
 1688 05df E5000000 		.4byte	0xe5
 1689 05e3 00       		.byte	0
 1690 05e4 17       		.uleb128 0x17
 1691 05e5 4C000000 		.4byte	.LASF48
 1692 05e9 01       		.byte	0x1
 1693 05ea 16       		.byte	0x16
 1694 05eb 6B000000 		.4byte	0x6b
 1695 05ef 05       		.uleb128 0x5
 1696 05f0 03       		.byte	0x3
 1697 05f1 00000000 		.4byte	CapSense_initVar
 1698 05f5 18       		.uleb128 0x18
 1699 05f6 07000000 		.4byte	.LASF49
 1700 05fa 01       		.byte	0x1
 1701 05fb 19       		.byte	0x19
 1702 05fc B0000000 		.4byte	0xb0
 1703 0600 05       		.uleb128 0x5
 1704 0601 03       		.byte	0x3
 1705 0602 00000000 		.4byte	CapSense_csv
 1706 0606 18       		.uleb128 0x18
 1707 0607 E2010000 		.4byte	.LASF50
 1708 060b 01       		.byte	0x1
 1709 060c 1A       		.byte	0x1a
 1710 060d B0000000 		.4byte	0xb0
 1711 0611 05       		.uleb128 0x5
 1712 0612 03       		.byte	0x3
 1713 0613 00000000 		.4byte	CapSense_sensorIndex
 1714 0617 19       		.uleb128 0x19
 1715 0618 77000000 		.4byte	0x77
 1716 061c 27060000 		.4byte	0x627
 1717 0620 1A       		.uleb128 0x1a
 1718 0621 DE000000 		.4byte	0xde
 1719 0625 00       		.byte	0
 1720 0626 00       		.byte	0
 1721 0627 18       		.uleb128 0x18
 1722 0628 F8050000 		.4byte	.LASF51
 1723 062c 01       		.byte	0x1
 1724 062d 29       		.byte	0x29
 1725 062e 17060000 		.4byte	0x617
 1726 0632 05       		.uleb128 0x5
 1727 0633 03       		.byte	0x3
 1728 0634 00000000 		.4byte	CapSense_sensorRaw
 1729 0638 19       		.uleb128 0x19
 1730 0639 6B000000 		.4byte	0x6b
 1731 063d 48060000 		.4byte	0x648
 1732 0641 1A       		.uleb128 0x1a
 1733 0642 DE000000 		.4byte	0xde
 1734 0646 00       		.byte	0
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 67


 1735 0647 00       		.byte	0
 1736 0648 18       		.uleb128 0x18
 1737 0649 2A030000 		.4byte	.LASF52
 1738 064d 01       		.byte	0x1
 1739 064e 2B       		.byte	0x2b
 1740 064f 38060000 		.4byte	0x638
 1741 0653 05       		.uleb128 0x5
 1742 0654 03       		.byte	0x3
 1743 0655 00000000 		.4byte	CapSense_sensorEnableMask
 1744 0659 19       		.uleb128 0x19
 1745 065a 6F060000 		.4byte	0x66f
 1746 065e 69060000 		.4byte	0x669
 1747 0662 1A       		.uleb128 0x1a
 1748 0663 DE000000 		.4byte	0xde
 1749 0667 00       		.byte	0
 1750 0668 00       		.byte	0
 1751 0669 1B       		.uleb128 0x1b
 1752 066a 04       		.byte	0x4
 1753 066b 6B000000 		.4byte	0x6b
 1754 066f 1C       		.uleb128 0x1c
 1755 0670 69060000 		.4byte	0x669
 1756 0674 18       		.uleb128 0x18
 1757 0675 5D000000 		.4byte	.LASF53
 1758 0679 01       		.byte	0x1
 1759 067a 2E       		.byte	0x2e
 1760 067b 85060000 		.4byte	0x685
 1761 067f 05       		.uleb128 0x5
 1762 0680 03       		.byte	0x3
 1763 0681 00000000 		.4byte	CapSense_pcTable
 1764 0685 1C       		.uleb128 0x1c
 1765 0686 59060000 		.4byte	0x659
 1766 068a 19       		.uleb128 0x19
 1767 068b 9A060000 		.4byte	0x69a
 1768 068f 9A060000 		.4byte	0x69a
 1769 0693 1A       		.uleb128 0x1a
 1770 0694 DE000000 		.4byte	0xde
 1771 0698 00       		.byte	0
 1772 0699 00       		.byte	0
 1773 069a 1C       		.uleb128 0x1c
 1774 069b 6B000000 		.4byte	0x6b
 1775 069f 18       		.uleb128 0x18
 1776 06a0 6D020000 		.4byte	.LASF54
 1777 06a4 01       		.byte	0x1
 1778 06a5 32       		.byte	0x32
 1779 06a6 B0060000 		.4byte	0x6b0
 1780 06aa 05       		.uleb128 0x5
 1781 06ab 03       		.byte	0x3
 1782 06ac 00000000 		.4byte	CapSense_portTable
 1783 06b0 1C       		.uleb128 0x1c
 1784 06b1 8A060000 		.4byte	0x68a
 1785 06b5 18       		.uleb128 0x18
 1786 06b6 5A020000 		.4byte	.LASF55
 1787 06ba 01       		.byte	0x1
 1788 06bb 36       		.byte	0x36
 1789 06bc C6060000 		.4byte	0x6c6
 1790 06c0 05       		.uleb128 0x5
 1791 06c1 03       		.byte	0x3
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 68


 1792 06c2 00000000 		.4byte	CapSense_maskTable
 1793 06c6 1C       		.uleb128 0x1c
 1794 06c7 8A060000 		.4byte	0x68a
 1795 06cb 19       		.uleb128 0x19
 1796 06cc 6F060000 		.4byte	0x66f
 1797 06d0 DB060000 		.4byte	0x6db
 1798 06d4 1A       		.uleb128 0x1a
 1799 06d5 DE000000 		.4byte	0xde
 1800 06d9 07       		.byte	0x7
 1801 06da 00       		.byte	0
 1802 06db 18       		.uleb128 0x18
 1803 06dc 75030000 		.4byte	.LASF56
 1804 06e0 01       		.byte	0x1
 1805 06e1 3A       		.byte	0x3a
 1806 06e2 EC060000 		.4byte	0x6ec
 1807 06e6 05       		.uleb128 0x5
 1808 06e7 03       		.byte	0x3
 1809 06e8 00000000 		.4byte	CapSense_csTable
 1810 06ec 1C       		.uleb128 0x1c
 1811 06ed CB060000 		.4byte	0x6cb
 1812 06f1 18       		.uleb128 0x18
 1813 06f2 DF030000 		.4byte	.LASF57
 1814 06f6 01       		.byte	0x1
 1815 06f7 40       		.byte	0x40
 1816 06f8 02070000 		.4byte	0x702
 1817 06fc 05       		.uleb128 0x5
 1818 06fd 03       		.byte	0x3
 1819 06fe 00000000 		.4byte	CapSense_idacSettings
 1820 0702 1C       		.uleb128 0x1c
 1821 0703 8A060000 		.4byte	0x68a
 1822 0707 18       		.uleb128 0x18
 1823 0708 46040000 		.4byte	.LASF58
 1824 070c 01       		.byte	0x1
 1825 070d 44       		.byte	0x44
 1826 070e 18070000 		.4byte	0x718
 1827 0712 05       		.uleb128 0x5
 1828 0713 03       		.byte	0x3
 1829 0714 00000000 		.4byte	CapSense_widgetResolution
 1830 0718 1C       		.uleb128 0x1c
 1831 0719 8A060000 		.4byte	0x68a
 1832 071d 18       		.uleb128 0x18
 1833 071e 4F030000 		.4byte	.LASF59
 1834 0722 01       		.byte	0x1
 1835 0723 48       		.byte	0x48
 1836 0724 38060000 		.4byte	0x638
 1837 0728 05       		.uleb128 0x5
 1838 0729 03       		.byte	0x3
 1839 072a 00000000 		.4byte	CapSense_analogSwitchDivider
 1840 072e 18       		.uleb128 0x18
 1841 072f 7F010000 		.4byte	.LASF60
 1842 0733 01       		.byte	0x1
 1843 0734 4C       		.byte	0x4c
 1844 0735 3F070000 		.4byte	0x73f
 1845 0739 05       		.uleb128 0x5
 1846 073a 03       		.byte	0x3
 1847 073b 00000000 		.4byte	CapSense_widgetNumber
 1848 073f 1C       		.uleb128 0x1c
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 69


 1849 0740 8A060000 		.4byte	0x68a
 1850 0744 1D       		.uleb128 0x1d
 1851 0745 98020000 		.4byte	.LASF61
 1852 0749 98020000 		.4byte	.LASF61
 1853 074d 03       		.byte	0x3
 1854 074e 7D       		.byte	0x7d
 1855 074f 1D       		.uleb128 0x1d
 1856 0750 80020000 		.4byte	.LASF62
 1857 0754 80020000 		.4byte	.LASF62
 1858 0758 04       		.byte	0x4
 1859 0759 27       		.byte	0x27
 1860 075a 1D       		.uleb128 0x1d
 1861 075b A8000000 		.4byte	.LASF63
 1862 075f A8000000 		.4byte	.LASF63
 1863 0763 05       		.byte	0x5
 1864 0764 46       		.byte	0x46
 1865 0765 1D       		.uleb128 0x1d
 1866 0766 37050000 		.4byte	.LASF64
 1867 076a 37050000 		.4byte	.LASF64
 1868 076e 06       		.byte	0x6
 1869 076f 46       		.byte	0x46
 1870 0770 1D       		.uleb128 0x1d
 1871 0771 14000000 		.4byte	.LASF65
 1872 0775 14000000 		.4byte	.LASF65
 1873 0779 03       		.byte	0x3
 1874 077a 7E       		.byte	0x7e
 1875 077b 1D       		.uleb128 0x1d
 1876 077c 65050000 		.4byte	.LASF66
 1877 0780 65050000 		.4byte	.LASF66
 1878 0784 07       		.byte	0x7
 1879 0785 1A       		.byte	0x1a
 1880 0786 1D       		.uleb128 0x1d
 1881 0787 27060000 		.4byte	.LASF67
 1882 078b 27060000 		.4byte	.LASF67
 1883 078f 07       		.byte	0x7
 1884 0790 1B       		.byte	0x1b
 1885 0791 1D       		.uleb128 0x1d
 1886 0792 C2020000 		.4byte	.LASF68
 1887 0796 C2020000 		.4byte	.LASF68
 1888 079a 04       		.byte	0x4
 1889 079b 28       		.byte	0x28
 1890 079c 1D       		.uleb128 0x1d
 1891 079d AC050000 		.4byte	.LASF69
 1892 07a1 AC050000 		.4byte	.LASF69
 1893 07a5 05       		.byte	0x5
 1894 07a6 40       		.byte	0x40
 1895 07a7 1D       		.uleb128 0x1d
 1896 07a8 69010000 		.4byte	.LASF70
 1897 07ac 69010000 		.4byte	.LASF70
 1898 07b0 06       		.byte	0x6
 1899 07b1 3D       		.byte	0x3d
 1900 07b2 1D       		.uleb128 0x1d
 1901 07b3 6E000000 		.4byte	.LASF71
 1902 07b7 6E000000 		.4byte	.LASF71
 1903 07bb 06       		.byte	0x6
 1904 07bc 41       		.byte	0x41
 1905 07bd 1D       		.uleb128 0x1d
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 70


 1906 07be B3010000 		.4byte	.LASF72
 1907 07c2 B3010000 		.4byte	.LASF72
 1908 07c6 03       		.byte	0x3
 1909 07c7 88       		.byte	0x88
 1910 07c8 1D       		.uleb128 0x1d
 1911 07c9 CE030000 		.4byte	.LASF73
 1912 07cd CE030000 		.4byte	.LASF73
 1913 07d1 03       		.byte	0x3
 1914 07d2 8B       		.byte	0x8b
 1915 07d3 1D       		.uleb128 0x1d
 1916 07d4 36010000 		.4byte	.LASF74
 1917 07d8 36010000 		.4byte	.LASF74
 1918 07dc 08       		.byte	0x8
 1919 07dd 1F       		.byte	0x1f
 1920 07de 1D       		.uleb128 0x1d
 1921 07df C7010000 		.4byte	.LASF75
 1922 07e3 C7010000 		.4byte	.LASF75
 1923 07e7 05       		.byte	0x5
 1924 07e8 45       		.byte	0x45
 1925 07e9 1D       		.uleb128 0x1d
 1926 07ea 30040000 		.4byte	.LASF76
 1927 07ee 30040000 		.4byte	.LASF76
 1928 07f2 06       		.byte	0x6
 1929 07f3 45       		.byte	0x45
 1930 07f4 1D       		.uleb128 0x1d
 1931 07f5 B1030000 		.4byte	.LASF77
 1932 07f9 B1030000 		.4byte	.LASF77
 1933 07fd 06       		.byte	0x6
 1934 07fe 3F       		.byte	0x3f
 1935 07ff 1D       		.uleb128 0x1d
 1936 0800 2E020000 		.4byte	.LASF78
 1937 0804 2E020000 		.4byte	.LASF78
 1938 0808 06       		.byte	0x6
 1939 0809 40       		.byte	0x40
 1940 080a 00       		.byte	0
 1941              		.section	.debug_abbrev,"",%progbits
 1942              	.Ldebug_abbrev0:
 1943 0000 01       		.uleb128 0x1
 1944 0001 11       		.uleb128 0x11
 1945 0002 01       		.byte	0x1
 1946 0003 25       		.uleb128 0x25
 1947 0004 0E       		.uleb128 0xe
 1948 0005 13       		.uleb128 0x13
 1949 0006 0B       		.uleb128 0xb
 1950 0007 03       		.uleb128 0x3
 1951 0008 0E       		.uleb128 0xe
 1952 0009 1B       		.uleb128 0x1b
 1953 000a 0E       		.uleb128 0xe
 1954 000b 55       		.uleb128 0x55
 1955 000c 17       		.uleb128 0x17
 1956 000d 11       		.uleb128 0x11
 1957 000e 01       		.uleb128 0x1
 1958 000f 10       		.uleb128 0x10
 1959 0010 17       		.uleb128 0x17
 1960 0011 00       		.byte	0
 1961 0012 00       		.byte	0
 1962 0013 02       		.uleb128 0x2
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 71


 1963 0014 24       		.uleb128 0x24
 1964 0015 00       		.byte	0
 1965 0016 0B       		.uleb128 0xb
 1966 0017 0B       		.uleb128 0xb
 1967 0018 3E       		.uleb128 0x3e
 1968 0019 0B       		.uleb128 0xb
 1969 001a 03       		.uleb128 0x3
 1970 001b 0E       		.uleb128 0xe
 1971 001c 00       		.byte	0
 1972 001d 00       		.byte	0
 1973 001e 03       		.uleb128 0x3
 1974 001f 24       		.uleb128 0x24
 1975 0020 00       		.byte	0
 1976 0021 0B       		.uleb128 0xb
 1977 0022 0B       		.uleb128 0xb
 1978 0023 3E       		.uleb128 0x3e
 1979 0024 0B       		.uleb128 0xb
 1980 0025 03       		.uleb128 0x3
 1981 0026 08       		.uleb128 0x8
 1982 0027 00       		.byte	0
 1983 0028 00       		.byte	0
 1984 0029 04       		.uleb128 0x4
 1985 002a 16       		.uleb128 0x16
 1986 002b 00       		.byte	0
 1987 002c 03       		.uleb128 0x3
 1988 002d 0E       		.uleb128 0xe
 1989 002e 3A       		.uleb128 0x3a
 1990 002f 0B       		.uleb128 0xb
 1991 0030 3B       		.uleb128 0x3b
 1992 0031 05       		.uleb128 0x5
 1993 0032 49       		.uleb128 0x49
 1994 0033 13       		.uleb128 0x13
 1995 0034 00       		.byte	0
 1996 0035 00       		.byte	0
 1997 0036 05       		.uleb128 0x5
 1998 0037 35       		.uleb128 0x35
 1999 0038 00       		.byte	0
 2000 0039 49       		.uleb128 0x49
 2001 003a 13       		.uleb128 0x13
 2002 003b 00       		.byte	0
 2003 003c 00       		.byte	0
 2004 003d 06       		.uleb128 0x6
 2005 003e 2E       		.uleb128 0x2e
 2006 003f 01       		.byte	0x1
 2007 0040 3F       		.uleb128 0x3f
 2008 0041 19       		.uleb128 0x19
 2009 0042 03       		.uleb128 0x3
 2010 0043 0E       		.uleb128 0xe
 2011 0044 3A       		.uleb128 0x3a
 2012 0045 0B       		.uleb128 0xb
 2013 0046 3B       		.uleb128 0x3b
 2014 0047 05       		.uleb128 0x5
 2015 0048 27       		.uleb128 0x27
 2016 0049 19       		.uleb128 0x19
 2017 004a 11       		.uleb128 0x11
 2018 004b 01       		.uleb128 0x1
 2019 004c 12       		.uleb128 0x12
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 72


 2020 004d 06       		.uleb128 0x6
 2021 004e 40       		.uleb128 0x40
 2022 004f 18       		.uleb128 0x18
 2023 0050 9742     		.uleb128 0x2117
 2024 0052 19       		.uleb128 0x19
 2025 0053 01       		.uleb128 0x1
 2026 0054 13       		.uleb128 0x13
 2027 0055 00       		.byte	0
 2028 0056 00       		.byte	0
 2029 0057 07       		.uleb128 0x7
 2030 0058 34       		.uleb128 0x34
 2031 0059 00       		.byte	0
 2032 005a 03       		.uleb128 0x3
 2033 005b 0E       		.uleb128 0xe
 2034 005c 3A       		.uleb128 0x3a
 2035 005d 0B       		.uleb128 0xb
 2036 005e 3B       		.uleb128 0x3b
 2037 005f 05       		.uleb128 0x5
 2038 0060 49       		.uleb128 0x49
 2039 0061 13       		.uleb128 0x13
 2040 0062 02       		.uleb128 0x2
 2041 0063 17       		.uleb128 0x17
 2042 0064 00       		.byte	0
 2043 0065 00       		.byte	0
 2044 0066 08       		.uleb128 0x8
 2045 0067 898201   		.uleb128 0x4109
 2046 006a 00       		.byte	0
 2047 006b 11       		.uleb128 0x11
 2048 006c 01       		.uleb128 0x1
 2049 006d 31       		.uleb128 0x31
 2050 006e 13       		.uleb128 0x13
 2051 006f 00       		.byte	0
 2052 0070 00       		.byte	0
 2053 0071 09       		.uleb128 0x9
 2054 0072 898201   		.uleb128 0x4109
 2055 0075 01       		.byte	0x1
 2056 0076 11       		.uleb128 0x11
 2057 0077 01       		.uleb128 0x1
 2058 0078 31       		.uleb128 0x31
 2059 0079 13       		.uleb128 0x13
 2060 007a 00       		.byte	0
 2061 007b 00       		.byte	0
 2062 007c 0A       		.uleb128 0xa
 2063 007d 8A8201   		.uleb128 0x410a
 2064 0080 00       		.byte	0
 2065 0081 02       		.uleb128 0x2
 2066 0082 18       		.uleb128 0x18
 2067 0083 9142     		.uleb128 0x2111
 2068 0085 18       		.uleb128 0x18
 2069 0086 00       		.byte	0
 2070 0087 00       		.byte	0
 2071 0088 0B       		.uleb128 0xb
 2072 0089 2E       		.uleb128 0x2e
 2073 008a 01       		.byte	0x1
 2074 008b 3F       		.uleb128 0x3f
 2075 008c 19       		.uleb128 0x19
 2076 008d 03       		.uleb128 0x3
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 73


 2077 008e 0E       		.uleb128 0xe
 2078 008f 3A       		.uleb128 0x3a
 2079 0090 0B       		.uleb128 0xb
 2080 0091 3B       		.uleb128 0x3b
 2081 0092 05       		.uleb128 0x5
 2082 0093 27       		.uleb128 0x27
 2083 0094 19       		.uleb128 0x19
 2084 0095 49       		.uleb128 0x49
 2085 0096 13       		.uleb128 0x13
 2086 0097 11       		.uleb128 0x11
 2087 0098 01       		.uleb128 0x1
 2088 0099 12       		.uleb128 0x12
 2089 009a 06       		.uleb128 0x6
 2090 009b 40       		.uleb128 0x40
 2091 009c 18       		.uleb128 0x18
 2092 009d 9742     		.uleb128 0x2117
 2093 009f 19       		.uleb128 0x19
 2094 00a0 01       		.uleb128 0x1
 2095 00a1 13       		.uleb128 0x13
 2096 00a2 00       		.byte	0
 2097 00a3 00       		.byte	0
 2098 00a4 0C       		.uleb128 0xc
 2099 00a5 05       		.uleb128 0x5
 2100 00a6 00       		.byte	0
 2101 00a7 03       		.uleb128 0x3
 2102 00a8 0E       		.uleb128 0xe
 2103 00a9 3A       		.uleb128 0x3a
 2104 00aa 0B       		.uleb128 0xb
 2105 00ab 3B       		.uleb128 0x3b
 2106 00ac 05       		.uleb128 0x5
 2107 00ad 49       		.uleb128 0x49
 2108 00ae 13       		.uleb128 0x13
 2109 00af 02       		.uleb128 0x2
 2110 00b0 17       		.uleb128 0x17
 2111 00b1 00       		.byte	0
 2112 00b2 00       		.byte	0
 2113 00b3 0D       		.uleb128 0xd
 2114 00b4 34       		.uleb128 0x34
 2115 00b5 00       		.byte	0
 2116 00b6 03       		.uleb128 0x3
 2117 00b7 08       		.uleb128 0x8
 2118 00b8 3A       		.uleb128 0x3a
 2119 00b9 0B       		.uleb128 0xb
 2120 00ba 3B       		.uleb128 0x3b
 2121 00bb 05       		.uleb128 0x5
 2122 00bc 49       		.uleb128 0x49
 2123 00bd 13       		.uleb128 0x13
 2124 00be 02       		.uleb128 0x2
 2125 00bf 18       		.uleb128 0x18
 2126 00c0 00       		.byte	0
 2127 00c1 00       		.byte	0
 2128 00c2 0E       		.uleb128 0xe
 2129 00c3 2E       		.uleb128 0x2e
 2130 00c4 00       		.byte	0
 2131 00c5 3F       		.uleb128 0x3f
 2132 00c6 19       		.uleb128 0x19
 2133 00c7 03       		.uleb128 0x3
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 74


 2134 00c8 0E       		.uleb128 0xe
 2135 00c9 3A       		.uleb128 0x3a
 2136 00ca 0B       		.uleb128 0xb
 2137 00cb 3B       		.uleb128 0x3b
 2138 00cc 05       		.uleb128 0x5
 2139 00cd 27       		.uleb128 0x27
 2140 00ce 19       		.uleb128 0x19
 2141 00cf 49       		.uleb128 0x49
 2142 00d0 13       		.uleb128 0x13
 2143 00d1 11       		.uleb128 0x11
 2144 00d2 01       		.uleb128 0x1
 2145 00d3 12       		.uleb128 0x12
 2146 00d4 06       		.uleb128 0x6
 2147 00d5 40       		.uleb128 0x40
 2148 00d6 18       		.uleb128 0x18
 2149 00d7 9742     		.uleb128 0x2117
 2150 00d9 19       		.uleb128 0x19
 2151 00da 00       		.byte	0
 2152 00db 00       		.byte	0
 2153 00dc 0F       		.uleb128 0xf
 2154 00dd 34       		.uleb128 0x34
 2155 00de 00       		.byte	0
 2156 00df 03       		.uleb128 0x3
 2157 00e0 0E       		.uleb128 0xe
 2158 00e1 3A       		.uleb128 0x3a
 2159 00e2 0B       		.uleb128 0xb
 2160 00e3 3B       		.uleb128 0x3b
 2161 00e4 05       		.uleb128 0x5
 2162 00e5 49       		.uleb128 0x49
 2163 00e6 13       		.uleb128 0x13
 2164 00e7 1C       		.uleb128 0x1c
 2165 00e8 0B       		.uleb128 0xb
 2166 00e9 00       		.byte	0
 2167 00ea 00       		.byte	0
 2168 00eb 10       		.uleb128 0x10
 2169 00ec 34       		.uleb128 0x34
 2170 00ed 00       		.byte	0
 2171 00ee 03       		.uleb128 0x3
 2172 00ef 0E       		.uleb128 0xe
 2173 00f0 3A       		.uleb128 0x3a
 2174 00f1 0B       		.uleb128 0xb
 2175 00f2 3B       		.uleb128 0x3b
 2176 00f3 05       		.uleb128 0x5
 2177 00f4 49       		.uleb128 0x49
 2178 00f5 13       		.uleb128 0x13
 2179 00f6 1C       		.uleb128 0x1c
 2180 00f7 0D       		.uleb128 0xd
 2181 00f8 00       		.byte	0
 2182 00f9 00       		.byte	0
 2183 00fa 11       		.uleb128 0x11
 2184 00fb 34       		.uleb128 0x34
 2185 00fc 00       		.byte	0
 2186 00fd 03       		.uleb128 0x3
 2187 00fe 08       		.uleb128 0x8
 2188 00ff 3A       		.uleb128 0x3a
 2189 0100 0B       		.uleb128 0xb
 2190 0101 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 75


 2191 0102 05       		.uleb128 0x5
 2192 0103 49       		.uleb128 0x49
 2193 0104 13       		.uleb128 0x13
 2194 0105 02       		.uleb128 0x2
 2195 0106 17       		.uleb128 0x17
 2196 0107 00       		.byte	0
 2197 0108 00       		.byte	0
 2198 0109 12       		.uleb128 0x12
 2199 010a 898201   		.uleb128 0x4109
 2200 010d 01       		.byte	0x1
 2201 010e 11       		.uleb128 0x11
 2202 010f 01       		.uleb128 0x1
 2203 0110 31       		.uleb128 0x31
 2204 0111 13       		.uleb128 0x13
 2205 0112 01       		.uleb128 0x1
 2206 0113 13       		.uleb128 0x13
 2207 0114 00       		.byte	0
 2208 0115 00       		.byte	0
 2209 0116 13       		.uleb128 0x13
 2210 0117 05       		.uleb128 0x5
 2211 0118 00       		.byte	0
 2212 0119 03       		.uleb128 0x3
 2213 011a 0E       		.uleb128 0xe
 2214 011b 3A       		.uleb128 0x3a
 2215 011c 0B       		.uleb128 0xb
 2216 011d 3B       		.uleb128 0x3b
 2217 011e 05       		.uleb128 0x5
 2218 011f 49       		.uleb128 0x49
 2219 0120 13       		.uleb128 0x13
 2220 0121 02       		.uleb128 0x2
 2221 0122 18       		.uleb128 0x18
 2222 0123 00       		.byte	0
 2223 0124 00       		.byte	0
 2224 0125 14       		.uleb128 0x14
 2225 0126 05       		.uleb128 0x5
 2226 0127 00       		.byte	0
 2227 0128 03       		.uleb128 0x3
 2228 0129 08       		.uleb128 0x8
 2229 012a 3A       		.uleb128 0x3a
 2230 012b 0B       		.uleb128 0xb
 2231 012c 3B       		.uleb128 0x3b
 2232 012d 05       		.uleb128 0x5
 2233 012e 49       		.uleb128 0x49
 2234 012f 13       		.uleb128 0x13
 2235 0130 02       		.uleb128 0x2
 2236 0131 18       		.uleb128 0x18
 2237 0132 00       		.byte	0
 2238 0133 00       		.byte	0
 2239 0134 15       		.uleb128 0x15
 2240 0135 2E       		.uleb128 0x2e
 2241 0136 01       		.byte	0x1
 2242 0137 3F       		.uleb128 0x3f
 2243 0138 19       		.uleb128 0x19
 2244 0139 03       		.uleb128 0x3
 2245 013a 0E       		.uleb128 0xe
 2246 013b 3A       		.uleb128 0x3a
 2247 013c 0B       		.uleb128 0xb
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 76


 2248 013d 3B       		.uleb128 0x3b
 2249 013e 0B       		.uleb128 0xb
 2250 013f 27       		.uleb128 0x27
 2251 0140 19       		.uleb128 0x19
 2252 0141 11       		.uleb128 0x11
 2253 0142 01       		.uleb128 0x1
 2254 0143 12       		.uleb128 0x12
 2255 0144 06       		.uleb128 0x6
 2256 0145 40       		.uleb128 0x40
 2257 0146 18       		.uleb128 0x18
 2258 0147 9742     		.uleb128 0x2117
 2259 0149 19       		.uleb128 0x19
 2260 014a 01       		.uleb128 0x1
 2261 014b 13       		.uleb128 0x13
 2262 014c 00       		.byte	0
 2263 014d 00       		.byte	0
 2264 014e 16       		.uleb128 0x16
 2265 014f 34       		.uleb128 0x34
 2266 0150 00       		.byte	0
 2267 0151 03       		.uleb128 0x3
 2268 0152 0E       		.uleb128 0xe
 2269 0153 3A       		.uleb128 0x3a
 2270 0154 0B       		.uleb128 0xb
 2271 0155 3B       		.uleb128 0x3b
 2272 0156 0B       		.uleb128 0xb
 2273 0157 49       		.uleb128 0x49
 2274 0158 13       		.uleb128 0x13
 2275 0159 02       		.uleb128 0x2
 2276 015a 17       		.uleb128 0x17
 2277 015b 00       		.byte	0
 2278 015c 00       		.byte	0
 2279 015d 17       		.uleb128 0x17
 2280 015e 34       		.uleb128 0x34
 2281 015f 00       		.byte	0
 2282 0160 03       		.uleb128 0x3
 2283 0161 0E       		.uleb128 0xe
 2284 0162 3A       		.uleb128 0x3a
 2285 0163 0B       		.uleb128 0xb
 2286 0164 3B       		.uleb128 0x3b
 2287 0165 0B       		.uleb128 0xb
 2288 0166 49       		.uleb128 0x49
 2289 0167 13       		.uleb128 0x13
 2290 0168 02       		.uleb128 0x2
 2291 0169 18       		.uleb128 0x18
 2292 016a 00       		.byte	0
 2293 016b 00       		.byte	0
 2294 016c 18       		.uleb128 0x18
 2295 016d 34       		.uleb128 0x34
 2296 016e 00       		.byte	0
 2297 016f 03       		.uleb128 0x3
 2298 0170 0E       		.uleb128 0xe
 2299 0171 3A       		.uleb128 0x3a
 2300 0172 0B       		.uleb128 0xb
 2301 0173 3B       		.uleb128 0x3b
 2302 0174 0B       		.uleb128 0xb
 2303 0175 49       		.uleb128 0x49
 2304 0176 13       		.uleb128 0x13
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 77


 2305 0177 3F       		.uleb128 0x3f
 2306 0178 19       		.uleb128 0x19
 2307 0179 02       		.uleb128 0x2
 2308 017a 18       		.uleb128 0x18
 2309 017b 00       		.byte	0
 2310 017c 00       		.byte	0
 2311 017d 19       		.uleb128 0x19
 2312 017e 01       		.uleb128 0x1
 2313 017f 01       		.byte	0x1
 2314 0180 49       		.uleb128 0x49
 2315 0181 13       		.uleb128 0x13
 2316 0182 01       		.uleb128 0x1
 2317 0183 13       		.uleb128 0x13
 2318 0184 00       		.byte	0
 2319 0185 00       		.byte	0
 2320 0186 1A       		.uleb128 0x1a
 2321 0187 21       		.uleb128 0x21
 2322 0188 00       		.byte	0
 2323 0189 49       		.uleb128 0x49
 2324 018a 13       		.uleb128 0x13
 2325 018b 2F       		.uleb128 0x2f
 2326 018c 0B       		.uleb128 0xb
 2327 018d 00       		.byte	0
 2328 018e 00       		.byte	0
 2329 018f 1B       		.uleb128 0x1b
 2330 0190 0F       		.uleb128 0xf
 2331 0191 00       		.byte	0
 2332 0192 0B       		.uleb128 0xb
 2333 0193 0B       		.uleb128 0xb
 2334 0194 49       		.uleb128 0x49
 2335 0195 13       		.uleb128 0x13
 2336 0196 00       		.byte	0
 2337 0197 00       		.byte	0
 2338 0198 1C       		.uleb128 0x1c
 2339 0199 26       		.uleb128 0x26
 2340 019a 00       		.byte	0
 2341 019b 49       		.uleb128 0x49
 2342 019c 13       		.uleb128 0x13
 2343 019d 00       		.byte	0
 2344 019e 00       		.byte	0
 2345 019f 1D       		.uleb128 0x1d
 2346 01a0 2E       		.uleb128 0x2e
 2347 01a1 00       		.byte	0
 2348 01a2 3F       		.uleb128 0x3f
 2349 01a3 19       		.uleb128 0x19
 2350 01a4 3C       		.uleb128 0x3c
 2351 01a5 19       		.uleb128 0x19
 2352 01a6 6E       		.uleb128 0x6e
 2353 01a7 0E       		.uleb128 0xe
 2354 01a8 03       		.uleb128 0x3
 2355 01a9 0E       		.uleb128 0xe
 2356 01aa 3A       		.uleb128 0x3a
 2357 01ab 0B       		.uleb128 0xb
 2358 01ac 3B       		.uleb128 0x3b
 2359 01ad 0B       		.uleb128 0xb
 2360 01ae 00       		.byte	0
 2361 01af 00       		.byte	0
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 78


 2362 01b0 00       		.byte	0
 2363              		.section	.debug_loc,"",%progbits
 2364              	.Ldebug_loc0:
 2365              	.LLST0:
 2366 0000 08000000 		.4byte	.LVL1
 2367 0004 58000000 		.4byte	.LVL6
 2368 0008 0100     		.2byte	0x1
 2369 000a 54       		.byte	0x54
 2370 000b 00000000 		.4byte	0
 2371 000f 00000000 		.4byte	0
 2372              	.LLST1:
 2373 0013 00000000 		.4byte	.LVL7
 2374 0017 00000000 		.4byte	.LVL7
 2375 001b 0100     		.2byte	0x1
 2376 001d 50       		.byte	0x50
 2377 001e 00000000 		.4byte	.LVL7
 2378 0022 04000000 		.4byte	.LVL8
 2379 0026 0400     		.2byte	0x4
 2380 0028 F3       		.byte	0xf3
 2381 0029 01       		.uleb128 0x1
 2382 002a 50       		.byte	0x50
 2383 002b 9F       		.byte	0x9f
 2384 002c 04000000 		.4byte	.LVL8
 2385 0030 20000000 		.4byte	.LFE4
 2386 0034 0100     		.2byte	0x1
 2387 0036 50       		.byte	0x50
 2388 0037 00000000 		.4byte	0
 2389 003b 00000000 		.4byte	0
 2390              	.LLST2:
 2391 003f 12000000 		.4byte	.LVL9
 2392 0043 1A000000 		.4byte	.LVL10
 2393 0047 0100     		.2byte	0x1
 2394 0049 53       		.byte	0x53
 2395 004a 00000000 		.4byte	0
 2396 004e 00000000 		.4byte	0
 2397              	.LLST3:
 2398 0052 00000000 		.4byte	.LVL11
 2399 0056 06000000 		.4byte	.LVL12
 2400 005a 0100     		.2byte	0x1
 2401 005c 50       		.byte	0x50
 2402 005d 06000000 		.4byte	.LVL12
 2403 0061 0C000000 		.4byte	.LFE9
 2404 0065 0400     		.2byte	0x4
 2405 0067 F3       		.byte	0xf3
 2406 0068 01       		.uleb128 0x1
 2407 0069 50       		.byte	0x50
 2408 006a 9F       		.byte	0x9f
 2409 006b 00000000 		.4byte	0
 2410 006f 00000000 		.4byte	0
 2411              	.LLST4:
 2412 0073 00000000 		.4byte	.LVL13
 2413 0077 15000000 		.4byte	.LVL15-1
 2414 007b 0100     		.2byte	0x1
 2415 007d 50       		.byte	0x50
 2416 007e 15000000 		.4byte	.LVL15-1
 2417 0082 20000000 		.4byte	.LFE11
 2418 0086 0400     		.2byte	0x4
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 79


 2419 0088 F3       		.byte	0xf3
 2420 0089 01       		.uleb128 0x1
 2421 008a 50       		.byte	0x50
 2422 008b 9F       		.byte	0x9f
 2423 008c 00000000 		.4byte	0
 2424 0090 00000000 		.4byte	0
 2425              	.LLST5:
 2426 0094 00000000 		.4byte	.LVL16
 2427 0098 05000000 		.4byte	.LVL18-1
 2428 009c 0100     		.2byte	0x1
 2429 009e 50       		.byte	0x50
 2430 009f 05000000 		.4byte	.LVL18-1
 2431 00a3 20000000 		.4byte	.LFE12
 2432 00a7 0400     		.2byte	0x4
 2433 00a9 F3       		.byte	0xf3
 2434 00aa 01       		.uleb128 0x1
 2435 00ab 50       		.byte	0x50
 2436 00ac 9F       		.byte	0x9f
 2437 00ad 00000000 		.4byte	0
 2438 00b1 00000000 		.4byte	0
 2439              	.LLST6:
 2440 00b5 02000000 		.4byte	.LVL19
 2441 00b9 06000000 		.4byte	.LVL20
 2442 00bd 0200     		.2byte	0x2
 2443 00bf 30       		.byte	0x30
 2444 00c0 9F       		.byte	0x9f
 2445 00c1 06000000 		.4byte	.LVL20
 2446 00c5 0E000000 		.4byte	.LVL22
 2447 00c9 0100     		.2byte	0x1
 2448 00cb 54       		.byte	0x54
 2449 00cc 10000000 		.4byte	.LVL23
 2450 00d0 16000000 		.4byte	.LFE10
 2451 00d4 0100     		.2byte	0x1
 2452 00d6 54       		.byte	0x54
 2453 00d7 00000000 		.4byte	0
 2454 00db 00000000 		.4byte	0
 2455              	.LLST7:
 2456 00df 00000000 		.4byte	.LVL28
 2457 00e3 27000000 		.4byte	.LVL29-1
 2458 00e7 0100     		.2byte	0x1
 2459 00e9 50       		.byte	0x50
 2460 00ea 27000000 		.4byte	.LVL29-1
 2461 00ee 4C000000 		.4byte	.LFE14
 2462 00f2 0400     		.2byte	0x4
 2463 00f4 F3       		.byte	0xf3
 2464 00f5 01       		.uleb128 0x1
 2465 00f6 50       		.byte	0x50
 2466 00f7 9F       		.byte	0x9f
 2467 00f8 00000000 		.4byte	0
 2468 00fc 00000000 		.4byte	0
 2469              	.LLST8:
 2470 0100 00000000 		.4byte	.LVL31
 2471 0104 06000000 		.4byte	.LVL32
 2472 0108 0100     		.2byte	0x1
 2473 010a 50       		.byte	0x50
 2474 010b 06000000 		.4byte	.LVL32
 2475 010f 08000000 		.4byte	.LVL33
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 80


 2476 0113 0200     		.2byte	0x2
 2477 0115 73       		.byte	0x73
 2478 0116 00       		.sleb128 0
 2479 0117 08000000 		.4byte	.LVL33
 2480 011b 0A000000 		.4byte	.LVL34
 2481 011f 0500     		.2byte	0x5
 2482 0121 0C       		.byte	0xc
 2483 0122 2A640040 		.4byte	0x4000642a
 2484 0126 0A000000 		.4byte	.LVL34
 2485 012a 10000000 		.4byte	.LFE15
 2486 012e 0400     		.2byte	0x4
 2487 0130 F3       		.byte	0xf3
 2488 0131 01       		.uleb128 0x1
 2489 0132 50       		.byte	0x50
 2490 0133 9F       		.byte	0x9f
 2491 0134 00000000 		.4byte	0
 2492 0138 00000000 		.4byte	0
 2493              	.LLST9:
 2494 013c 00000000 		.4byte	.LVL35
 2495 0140 06000000 		.4byte	.LVL37
 2496 0144 0100     		.2byte	0x1
 2497 0146 50       		.byte	0x50
 2498 0147 06000000 		.4byte	.LVL37
 2499 014b 24000000 		.4byte	.LFE5
 2500 014f 0400     		.2byte	0x4
 2501 0151 F3       		.byte	0xf3
 2502 0152 01       		.uleb128 0x1
 2503 0153 50       		.byte	0x50
 2504 0154 9F       		.byte	0x9f
 2505 0155 00000000 		.4byte	0
 2506 0159 00000000 		.4byte	0
 2507              	.LLST10:
 2508 015d 00000000 		.4byte	.LVL40
 2509 0161 07000000 		.4byte	.LVL41-1
 2510 0165 0100     		.2byte	0x1
 2511 0167 50       		.byte	0x50
 2512 0168 07000000 		.4byte	.LVL41-1
 2513 016c 34000000 		.4byte	.LFE13
 2514 0170 0400     		.2byte	0x4
 2515 0172 F3       		.byte	0xf3
 2516 0173 01       		.uleb128 0x1
 2517 0174 50       		.byte	0x50
 2518 0175 9F       		.byte	0x9f
 2519 0176 00000000 		.4byte	0
 2520 017a 00000000 		.4byte	0
 2521              	.LLST11:
 2522 017e 00000000 		.4byte	.LVL43
 2523 0182 13000000 		.4byte	.LVL44-1
 2524 0186 0100     		.2byte	0x1
 2525 0188 50       		.byte	0x50
 2526 0189 13000000 		.4byte	.LVL44-1
 2527 018d 20000000 		.4byte	.LFE6
 2528 0191 0400     		.2byte	0x4
 2529 0193 F3       		.byte	0xf3
 2530 0194 01       		.uleb128 0x1
 2531 0195 50       		.byte	0x50
 2532 0196 9F       		.byte	0x9f
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 81


 2533 0197 00000000 		.4byte	0
 2534 019b 00000000 		.4byte	0
 2535              	.LLST12:
 2536 019f 00000000 		.4byte	.LVL47
 2537 01a3 04000000 		.4byte	.LVL48
 2538 01a7 0200     		.2byte	0x2
 2539 01a9 30       		.byte	0x30
 2540 01aa 9F       		.byte	0x9f
 2541 01ab 04000000 		.4byte	.LVL48
 2542 01af 0C000000 		.4byte	.LFE16
 2543 01b3 0100     		.2byte	0x1
 2544 01b5 50       		.byte	0x50
 2545 01b6 00000000 		.4byte	0
 2546 01ba 00000000 		.4byte	0
 2547              	.LLST13:
 2548 01be 10000000 		.4byte	.LVL53
 2549 01c2 27000000 		.4byte	.LVL54-1
 2550 01c6 0100     		.2byte	0x1
 2551 01c8 50       		.byte	0x50
 2552 01c9 42000000 		.4byte	.LVL55
 2553 01cd 59000000 		.4byte	.LVL56-1
 2554 01d1 0100     		.2byte	0x1
 2555 01d3 50       		.byte	0x50
 2556 01d4 00000000 		.4byte	0
 2557 01d8 00000000 		.4byte	0
 2558              		.section	.debug_aranges,"",%progbits
 2559 0000 AC000000 		.4byte	0xac
 2560 0004 0200     		.2byte	0x2
 2561 0006 00000000 		.4byte	.Ldebug_info0
 2562 000a 04       		.byte	0x4
 2563 000b 00       		.byte	0
 2564 000c 0000     		.2byte	0
 2565 000e 0000     		.2byte	0
 2566 0010 00000000 		.4byte	.LFB1
 2567 0014 68000000 		.4byte	.LFE1-.LFB1
 2568 0018 00000000 		.4byte	.LFB4
 2569 001c 20000000 		.4byte	.LFE4-.LFB4
 2570 0020 00000000 		.4byte	.LFB8
 2571 0024 10000000 		.4byte	.LFE8-.LFB8
 2572 0028 00000000 		.4byte	.LFB9
 2573 002c 0C000000 		.4byte	.LFE9-.LFB9
 2574 0030 00000000 		.4byte	.LFB11
 2575 0034 20000000 		.4byte	.LFE11-.LFB11
 2576 0038 00000000 		.4byte	.LFB12
 2577 003c 20000000 		.4byte	.LFE12-.LFB12
 2578 0040 00000000 		.4byte	.LFB10
 2579 0044 16000000 		.4byte	.LFE10-.LFB10
 2580 0048 00000000 		.4byte	.LFB3
 2581 004c 68000000 		.4byte	.LFE3-.LFB3
 2582 0050 00000000 		.4byte	.LFB14
 2583 0054 4C000000 		.4byte	.LFE14-.LFB14
 2584 0058 00000000 		.4byte	.LFB15
 2585 005c 10000000 		.4byte	.LFE15-.LFB15
 2586 0060 00000000 		.4byte	.LFB5
 2587 0064 24000000 		.4byte	.LFE5-.LFB5
 2588 0068 00000000 		.4byte	.LFB13
 2589 006c 34000000 		.4byte	.LFE13-.LFB13
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 82


 2590 0070 00000000 		.4byte	.LFB6
 2591 0074 20000000 		.4byte	.LFE6-.LFB6
 2592 0078 00000000 		.4byte	.LFB7
 2593 007c 38000000 		.4byte	.LFE7-.LFB7
 2594 0080 00000000 		.4byte	.LFB16
 2595 0084 0C000000 		.4byte	.LFE16-.LFB16
 2596 0088 00000000 		.4byte	.LFB17
 2597 008c 0C000000 		.4byte	.LFE17-.LFB17
 2598 0090 00000000 		.4byte	.LFB18
 2599 0094 20000000 		.4byte	.LFE18-.LFB18
 2600 0098 00000000 		.4byte	.LFB0
 2601 009c E4000000 		.4byte	.LFE0-.LFB0
 2602 00a0 00000000 		.4byte	.LFB2
 2603 00a4 1C000000 		.4byte	.LFE2-.LFB2
 2604 00a8 00000000 		.4byte	0
 2605 00ac 00000000 		.4byte	0
 2606              		.section	.debug_ranges,"",%progbits
 2607              	.Ldebug_ranges0:
 2608 0000 00000000 		.4byte	.LFB1
 2609 0004 68000000 		.4byte	.LFE1
 2610 0008 00000000 		.4byte	.LFB4
 2611 000c 20000000 		.4byte	.LFE4
 2612 0010 00000000 		.4byte	.LFB8
 2613 0014 10000000 		.4byte	.LFE8
 2614 0018 00000000 		.4byte	.LFB9
 2615 001c 0C000000 		.4byte	.LFE9
 2616 0020 00000000 		.4byte	.LFB11
 2617 0024 20000000 		.4byte	.LFE11
 2618 0028 00000000 		.4byte	.LFB12
 2619 002c 20000000 		.4byte	.LFE12
 2620 0030 00000000 		.4byte	.LFB10
 2621 0034 16000000 		.4byte	.LFE10
 2622 0038 00000000 		.4byte	.LFB3
 2623 003c 68000000 		.4byte	.LFE3
 2624 0040 00000000 		.4byte	.LFB14
 2625 0044 4C000000 		.4byte	.LFE14
 2626 0048 00000000 		.4byte	.LFB15
 2627 004c 10000000 		.4byte	.LFE15
 2628 0050 00000000 		.4byte	.LFB5
 2629 0054 24000000 		.4byte	.LFE5
 2630 0058 00000000 		.4byte	.LFB13
 2631 005c 34000000 		.4byte	.LFE13
 2632 0060 00000000 		.4byte	.LFB6
 2633 0064 20000000 		.4byte	.LFE6
 2634 0068 00000000 		.4byte	.LFB7
 2635 006c 38000000 		.4byte	.LFE7
 2636 0070 00000000 		.4byte	.LFB16
 2637 0074 0C000000 		.4byte	.LFE16
 2638 0078 00000000 		.4byte	.LFB17
 2639 007c 0C000000 		.4byte	.LFE17
 2640 0080 00000000 		.4byte	.LFB18
 2641 0084 20000000 		.4byte	.LFE18
 2642 0088 00000000 		.4byte	.LFB0
 2643 008c E4000000 		.4byte	.LFE0
 2644 0090 00000000 		.4byte	.LFB2
 2645 0094 1C000000 		.4byte	.LFE2
 2646 0098 00000000 		.4byte	0
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 83


 2647 009c 00000000 		.4byte	0
 2648              		.section	.debug_line,"",%progbits
 2649              	.Ldebug_line0:
 2650 0000 9F020000 		.section	.debug_str,"MS",%progbits,1
 2650      0200BB00 
 2650      00000201 
 2650      FB0E0D00 
 2650      01010101 
 2651              	.LASF10:
 2652 0000 75696E74 		.ascii	"uint16\000"
 2652      313600
 2653              	.LASF49:
 2654 0007 43617053 		.ascii	"CapSense_csv\000"
 2654      656E7365 
 2654      5F637376 
 2654      00
 2655              	.LASF65:
 2656 0014 43794578 		.ascii	"CyExitCriticalSection\000"
 2656      69744372 
 2656      69746963 
 2656      616C5365 
 2656      6374696F 
 2657              	.LASF80:
 2658 002a 47656E65 		.ascii	"Generated_Source\\PSoC5\\CapSense.c\000"
 2658      72617465 
 2658      645F536F 
 2658      75726365 
 2658      5C50536F 
 2659              	.LASF48:
 2660 004c 43617053 		.ascii	"CapSense_initVar\000"
 2660      656E7365 
 2660      5F696E69 
 2660      74566172 
 2660      00
 2661              	.LASF53:
 2662 005d 43617053 		.ascii	"CapSense_pcTable\000"
 2662      656E7365 
 2662      5F706354 
 2662      61626C65 
 2662      00
 2663              	.LASF71:
 2664 006e 43617053 		.ascii	"CapSense_IdacCH0_SetValue\000"
 2664      656E7365 
 2664      5F496461 
 2664      63434830 
 2664      5F536574 
 2665              	.LASF24:
 2666 0088 736E7349 		.ascii	"snsIndex\000"
 2666      6E646578 
 2666      00
 2667              	.LASF7:
 2668 0091 6C6F6E67 		.ascii	"long long unsigned int\000"
 2668      206C6F6E 
 2668      6720756E 
 2668      7369676E 
 2668      65642069 
 2669              	.LASF63:
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 84


 2670 00a8 43617053 		.ascii	"CapSense_CompCH0_Enable\000"
 2670      656E7365 
 2670      5F436F6D 
 2670      70434830 
 2670      5F456E61 
 2671              	.LASF26:
 2672 00c0 43617053 		.ascii	"CapSense_Enable\000"
 2672      656E7365 
 2672      5F456E61 
 2672      626C6500 
 2673              	.LASF34:
 2674 00d0 43617053 		.ascii	"CapSense_SetPrescaler\000"
 2674      656E7365 
 2674      5F536574 
 2674      50726573 
 2674      63616C65 
 2675              	.LASF6:
 2676 00e6 6C6F6E67 		.ascii	"long long int\000"
 2676      206C6F6E 
 2676      6720696E 
 2676      7400
 2677              	.LASF0:
 2678 00f4 7369676E 		.ascii	"signed char\000"
 2678      65642063 
 2678      68617200 
 2679              	.LASF45:
 2680 0100 43617053 		.ascii	"CapSense_SetAnalogSwitchesSource\000"
 2680      656E7365 
 2680      5F536574 
 2680      416E616C 
 2680      6F675377 
 2681              	.LASF4:
 2682 0121 6C6F6E67 		.ascii	"long int\000"
 2682      20696E74 
 2682      00
 2683              	.LASF16:
 2684 012a 72656731 		.ascii	"reg16\000"
 2684      3600
 2685              	.LASF9:
 2686 0130 75696E74 		.ascii	"uint8\000"
 2686      3800
 2687              	.LASF74:
 2688 0136 43617053 		.ascii	"CapSense_AMuxCH0_Init\000"
 2688      656E7365 
 2688      5F414D75 
 2688      78434830 
 2688      5F496E69 
 2689              	.LASF13:
 2690 014c 646F7562 		.ascii	"double\000"
 2690      6C6500
 2691              	.LASF27:
 2692 0153 43617053 		.ascii	"CapSense_EnableSensor\000"
 2692      656E7365 
 2692      5F456E61 
 2692      626C6553 
 2692      656E736F 
 2693              	.LASF70:
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 85


 2694 0169 43617053 		.ascii	"CapSense_IdacCH0_Stop\000"
 2694      656E7365 
 2694      5F496461 
 2694      63434830 
 2694      5F53746F 
 2695              	.LASF60:
 2696 017f 43617053 		.ascii	"CapSense_widgetNumber\000"
 2696      656E7365 
 2696      5F776964 
 2696      6765744E 
 2696      756D6265 
 2697              	.LASF23:
 2698 0195 43617053 		.ascii	"CapSense_ReadSensorRaw\000"
 2698      656E7365 
 2698      5F526561 
 2698      6453656E 
 2698      736F7252 
 2699              	.LASF11:
 2700 01ac 75696E74 		.ascii	"uint32\000"
 2700      333200
 2701              	.LASF72:
 2702 01b3 4379496E 		.ascii	"CyIntSetVector\000"
 2702      74536574 
 2702      56656374 
 2702      6F7200
 2703              	.LASF29:
 2704 01c2 6D61736B 		.ascii	"mask\000"
 2704      00
 2705              	.LASF75:
 2706 01c7 43617053 		.ascii	"CapSense_CompCH0_Init\000"
 2706      656E7365 
 2706      5F436F6D 
 2706      70434830 
 2706      5F496E69 
 2707              	.LASF28:
 2708 01dd 706F7274 		.ascii	"port\000"
 2708      00
 2709              	.LASF50:
 2710 01e2 43617053 		.ascii	"CapSense_sensorIndex\000"
 2710      656E7365 
 2710      5F73656E 
 2710      736F7249 
 2710      6E646578 
 2711              	.LASF40:
 2712 01f7 43617053 		.ascii	"CapSense_ScanSensor\000"
 2712      656E7365 
 2712      5F536361 
 2712      6E53656E 
 2712      736F7200 
 2713              	.LASF8:
 2714 020b 756E7369 		.ascii	"unsigned int\000"
 2714      676E6564 
 2714      20696E74 
 2714      00
 2715              	.LASF31:
 2716 0218 43617053 		.ascii	"CapSense_ClearSensors\000"
 2716      656E7365 
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 86


 2716      5F436C65 
 2716      61725365 
 2716      6E736F72 
 2717              	.LASF78:
 2718 022e 43617053 		.ascii	"CapSense_IdacCH0_SetRange\000"
 2718      656E7365 
 2718      5F496461 
 2718      63434830 
 2718      5F536574 
 2719              	.LASF5:
 2720 0248 6C6F6E67 		.ascii	"long unsigned int\000"
 2720      20756E73 
 2720      69676E65 
 2720      6420696E 
 2720      7400
 2721              	.LASF55:
 2722 025a 43617053 		.ascii	"CapSense_maskTable\000"
 2722      656E7365 
 2722      5F6D6173 
 2722      6B546162 
 2722      6C6500
 2723              	.LASF54:
 2724 026d 43617053 		.ascii	"CapSense_portTable\000"
 2724      656E7365 
 2724      5F706F72 
 2724      74546162 
 2724      6C6500
 2725              	.LASF62:
 2726 0280 43617053 		.ascii	"CapSense_IntClock_Start\000"
 2726      656E7365 
 2726      5F496E74 
 2726      436C6F63 
 2726      6B5F5374 
 2727              	.LASF61:
 2728 0298 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2728      74657243 
 2728      72697469 
 2728      63616C53 
 2728      65637469 
 2729              	.LASF3:
 2730 02af 73686F72 		.ascii	"short unsigned int\000"
 2730      7420756E 
 2730      7369676E 
 2730      65642069 
 2730      6E7400
 2731              	.LASF68:
 2732 02c2 43617053 		.ascii	"CapSense_IntClock_Stop\000"
 2732      656E7365 
 2732      5F496E74 
 2732      436C6F63 
 2732      6B5F5374 
 2733              	.LASF81:
 2734 02d9 433A5C55 		.ascii	"C:\\Users\\Arold\\Documents\\GitHub\\Green-House\\G"
 2734      73657273 
 2734      5C41726F 
 2734      6C645C44 
 2734      6F63756D 
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 87


 2735 0306 7265656E 		.ascii	"reen_House\\Green_House.cydsn\000"
 2735      5F486F75 
 2735      73655C47 
 2735      7265656E 
 2735      5F486F75 
 2736              	.LASF25:
 2737 0323 73656E73 		.ascii	"sensor\000"
 2737      6F7200
 2738              	.LASF52:
 2739 032a 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 2739      656E7365 
 2739      5F73656E 
 2739      736F7245 
 2739      6E61626C 
 2740              	.LASF37:
 2741 0344 736C6F74 		.ascii	"slot\000"
 2741      00
 2742              	.LASF17:
 2743 0349 72656733 		.ascii	"reg32\000"
 2743      3200
 2744              	.LASF59:
 2745 034f 43617053 		.ascii	"CapSense_analogSwitchDivider\000"
 2745      656E7365 
 2745      5F616E61 
 2745      6C6F6753 
 2745      77697463 
 2746              	.LASF19:
 2747 036c 73697A65 		.ascii	"sizetype\000"
 2747      74797065 
 2747      00
 2748              	.LASF56:
 2749 0375 43617053 		.ascii	"CapSense_csTable\000"
 2749      656E7365 
 2749      5F637354 
 2749      61626C65 
 2749      00
 2750              	.LASF18:
 2751 0386 6C6F6E67 		.ascii	"long double\000"
 2751      20646F75 
 2751      626C6500 
 2752              	.LASF32:
 2753 0392 43617053 		.ascii	"CapSense_Stop\000"
 2753      656E7365 
 2753      5F53746F 
 2753      7000
 2754              	.LASF44:
 2755 03a0 7363616E 		.ascii	"scanSpeed\000"
 2755      53706565 
 2755      6400
 2756              	.LASF21:
 2757 03aa 656E4D61 		.ascii	"enMask\000"
 2757      736B00
 2758              	.LASF77:
 2759 03b1 43617053 		.ascii	"CapSense_IdacCH0_SetPolarity\000"
 2759      656E7365 
 2759      5F496461 
 2759      63434830 
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 88


 2759      5F536574 
 2760              	.LASF73:
 2761 03ce 4379496E 		.ascii	"CyIntSetPriority\000"
 2761      74536574 
 2761      5072696F 
 2761      72697479 
 2761      00
 2762              	.LASF57:
 2763 03df 43617053 		.ascii	"CapSense_idacSettings\000"
 2763      656E7365 
 2763      5F696461 
 2763      63536574 
 2763      74696E67 
 2764              	.LASF12:
 2765 03f5 666C6F61 		.ascii	"float\000"
 2765      7400
 2766              	.LASF35:
 2767 03fb 70726573 		.ascii	"prescaler\000"
 2767      63616C65 
 2767      7200
 2768              	.LASF15:
 2769 0405 72656738 		.ascii	"reg8\000"
 2769      00
 2770              	.LASF22:
 2771 040a 43617053 		.ascii	"CapSense_FindNextSensor\000"
 2771      656E7365 
 2771      5F46696E 
 2771      644E6578 
 2771      7453656E 
 2772              	.LASF1:
 2773 0422 756E7369 		.ascii	"unsigned char\000"
 2773      676E6564 
 2773      20636861 
 2773      7200
 2774              	.LASF76:
 2775 0430 43617053 		.ascii	"CapSense_IdacCH0_Init\000"
 2775      656E7365 
 2775      5F496461 
 2775      63434830 
 2775      5F496E69 
 2776              	.LASF58:
 2777 0446 43617053 		.ascii	"CapSense_widgetResolution\000"
 2777      656E7365 
 2777      5F776964 
 2777      67657452 
 2777      65736F6C 
 2778              	.LASF2:
 2779 0460 73686F72 		.ascii	"short int\000"
 2779      7420696E 
 2779      7400
 2780              	.LASF38:
 2781 046a 77696467 		.ascii	"widget\000"
 2781      657400
 2782              	.LASF36:
 2783 0471 43617053 		.ascii	"CapSense_SetScanSlotSettings\000"
 2783      656E7365 
 2783      5F536574 
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 89


 2783      5363616E 
 2783      536C6F74 
 2784              	.LASF42:
 2785 048e 43617053 		.ascii	"CapSense_GetPrescaler\000"
 2785      656E7365 
 2785      5F476574 
 2785      50726573 
 2785      63616C65 
 2786              	.LASF79:
 2787 04a4 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2787      43313120 
 2787      352E342E 
 2787      31203230 
 2787      31363036 
 2788 04d7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2788      20726576 
 2788      6973696F 
 2788      6E203233 
 2788      37373135 
 2789 050a 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2789      66756E63 
 2789      74696F6E 
 2789      2D736563 
 2789      74696F6E 
 2790              	.LASF14:
 2791 0532 63686172 		.ascii	"char\000"
 2791      00
 2792              	.LASF64:
 2793 0537 43617053 		.ascii	"CapSense_IdacCH0_Enable\000"
 2793      656E7365 
 2793      5F496461 
 2793      63434830 
 2793      5F456E61 
 2794              	.LASF43:
 2795 054f 43617053 		.ascii	"CapSense_SetScanSpeed\000"
 2795      656E7365 
 2795      5F536574 
 2795      5363616E 
 2795      53706565 
 2796              	.LASF66:
 2797 0565 43617053 		.ascii	"CapSense_AMuxCH0_Set\000"
 2797      656E7365 
 2797      5F414D75 
 2797      78434830 
 2797      5F536574 
 2798              	.LASF47:
 2799 057a 43617053 		.ascii	"CapSense_Start\000"
 2799      656E7365 
 2799      5F537461 
 2799      727400
 2800              	.LASF33:
 2801 0589 43617053 		.ascii	"CapSense_PostScan\000"
 2801      656E7365 
 2801      5F506F73 
 2801      74536361 
 2801      6E00
 2802              	.LASF20:
ARM GAS  C:\Users\Arold\AppData\Local\Temp\ccLuC8tn.s 			page 90


 2803 059b 656E6162 		.ascii	"enableInterrupts\000"
 2803      6C65496E 
 2803      74657272 
 2803      75707473 
 2803      00
 2804              	.LASF69:
 2805 05ac 43617053 		.ascii	"CapSense_CompCH0_Stop\000"
 2805      656E7365 
 2805      5F436F6D 
 2805      70434830 
 2805      5F53746F 
 2806              	.LASF30:
 2807 05c2 43617053 		.ascii	"CapSense_DisableSensor\000"
 2807      656E7365 
 2807      5F446973 
 2807      61626C65 
 2807      53656E73 
 2808              	.LASF39:
 2809 05d9 43617053 		.ascii	"CapSense_PreScan\000"
 2809      656E7365 
 2809      5F507265 
 2809      5363616E 
 2809      00
 2810              	.LASF46:
 2811 05ea 43617053 		.ascii	"CapSense_Init\000"
 2811      656E7365 
 2811      5F496E69 
 2811      7400
 2812              	.LASF51:
 2813 05f8 43617053 		.ascii	"CapSense_sensorRaw\000"
 2813      656E7365 
 2813      5F73656E 
 2813      736F7252 
 2813      617700
 2814              	.LASF41:
 2815 060b 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 2815      656E7365 
 2815      5F536361 
 2815      6E456E61 
 2815      626C6564 
 2816              	.LASF67:
 2817 0627 43617053 		.ascii	"CapSense_AMuxCH0_Unset\000"
 2817      656E7365 
 2817      5F414D75 
 2817      78434830 
 2817      5F556E73 
 2818              	.LASF82:
 2819 063e 43617053 		.ascii	"CapSense_IsBusy\000"
 2819      656E7365 
 2819      5F497342 
 2819      75737900 
 2820              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
