ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	CapSense_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	CapSense_Enable, %function
  25              	CapSense_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\CapSense.c"
   1:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CapSense.c **** * File Name: CapSense.c
   3:Generated_Source\PSoC5/CapSense.c **** * Version 3.50
   4:Generated_Source\PSoC5/CapSense.c **** *
   5:Generated_Source\PSoC5/CapSense.c **** * Description:
   6:Generated_Source\PSoC5/CapSense.c **** *  This file provides the source code of scanning APIs for the CapSense CSD 
   7:Generated_Source\PSoC5/CapSense.c **** *  component.
   8:Generated_Source\PSoC5/CapSense.c **** *
   9:Generated_Source\PSoC5/CapSense.c **** * Note:
  10:Generated_Source\PSoC5/CapSense.c **** *
  11:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
  12:Generated_Source\PSoC5/CapSense.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/CapSense.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/CapSense.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/CapSense.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/CapSense.c **** 
  18:Generated_Source\PSoC5/CapSense.c **** #include "CapSense.h"
  19:Generated_Source\PSoC5/CapSense.c **** #include "cyapicallbacks.h"
  20:Generated_Source\PSoC5/CapSense.c **** 
  21:Generated_Source\PSoC5/CapSense.c **** 
  22:Generated_Source\PSoC5/CapSense.c **** static uint8 CapSense_initVar = 0u;
  23:Generated_Source\PSoC5/CapSense.c ****             
  24:Generated_Source\PSoC5/CapSense.c **** /* Global software variables */
  25:Generated_Source\PSoC5/CapSense.c **** volatile uint8 CapSense_csv;            /* CapSense CSD status, control variable */
  26:Generated_Source\PSoC5/CapSense.c **** volatile uint8 CapSense_sensorIndex;    /* Index of scannig sensor */
  27:Generated_Source\PSoC5/CapSense.c **** 
  28:Generated_Source\PSoC5/CapSense.c **** /* AutoTunning start */
  29:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
  30:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_lowLevelTuningDone = 1u;
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 2


  31:Generated_Source\PSoC5/CapSense.c **** #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
  32:Generated_Source\PSoC5/CapSense.c **** 
  33:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
  34:Generated_Source\PSoC5/CapSense.c ****     uint8  CapSense_extRbCh0Cur = CapSense_RBLEED1;
  35:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
  36:Generated_Source\PSoC5/CapSense.c ****         uint8  CapSense_extRbCh1Cur = (CapSense_RBLEED1 + CapSense_TOTAL_RB_NUMBER__CH0);
  37:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)*/ 
  38:Generated_Source\PSoC5/CapSense.c **** #endif /* (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB) */ 
  39:Generated_Source\PSoC5/CapSense.c ****         
  40:Generated_Source\PSoC5/CapSense.c **** /* Global array of Raw Counts */
  41:Generated_Source\PSoC5/CapSense.c **** uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT]; 
  42:Generated_Source\PSoC5/CapSense.c **** 
  43:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_sensorEnableMask[(((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)] = {
  44:Generated_Source\PSoC5/CapSense.c **** 0x1u, };
  45:Generated_Source\PSoC5/CapSense.c **** 
  46:Generated_Source\PSoC5/CapSense.c **** uint8 CYXDATA * const CYCODE CapSense_pcTable[] = {
  47:Generated_Source\PSoC5/CapSense.c **** 0,
  48:Generated_Source\PSoC5/CapSense.c **** };
  49:Generated_Source\PSoC5/CapSense.c **** 
  50:Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_portTable[] = {
  51:Generated_Source\PSoC5/CapSense.c **** 0,
  52:Generated_Source\PSoC5/CapSense.c **** };
  53:Generated_Source\PSoC5/CapSense.c **** 
  54:Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_maskTable[] = {
  55:Generated_Source\PSoC5/CapSense.c **** 0,
  56:Generated_Source\PSoC5/CapSense.c **** };
  57:Generated_Source\PSoC5/CapSense.c **** 
  58:Generated_Source\PSoC5/CapSense.c **** uint8 CYXDATA * const CYCODE CapSense_csTable[] = {
  59:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT0_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT1_CAPS_SEL, (uint8 CYXDATA *)CY
  60:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT3_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT4_CAPS_SEL, (uint8 CYXDATA *)CY
  61:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT6_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT15_CAPS_SEL,
  62:Generated_Source\PSoC5/CapSense.c **** };
  63:Generated_Source\PSoC5/CapSense.c **** 
  64:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_idacSettings[] = {
  65:Generated_Source\PSoC5/CapSense.c ****     200u,
  66:Generated_Source\PSoC5/CapSense.c **** };
  67:Generated_Source\PSoC5/CapSense.c **** 
  68:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_widgetResolution[] = {
  69:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
  70:Generated_Source\PSoC5/CapSense.c **** };
  71:Generated_Source\PSoC5/CapSense.c **** 
  72:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_analogSwitchDivider[CapSense_TOTAL_SCANSLOT_COUNT];
  73:Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_widgetNumber[] = {
  74:Generated_Source\PSoC5/CapSense.c ****     0u, /* DummyWidget__BTN */
  75:Generated_Source\PSoC5/CapSense.c ****     
  76:Generated_Source\PSoC5/CapSense.c **** };
  77:Generated_Source\PSoC5/CapSense.c **** 
  78:Generated_Source\PSoC5/CapSense.c **** 
  79:Generated_Source\PSoC5/CapSense.c **** 
  80:Generated_Source\PSoC5/CapSense.c **** 
  81:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
  82:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Init
  83:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
  84:Generated_Source\PSoC5/CapSense.c **** *
  85:Generated_Source\PSoC5/CapSense.c **** * Summary:
  86:Generated_Source\PSoC5/CapSense.c **** *  Inits default CapSense configuration provided with customizer that defines 
  87:Generated_Source\PSoC5/CapSense.c **** *  mode of component operations and resets all sensors to an inactive state.
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 3


  88:Generated_Source\PSoC5/CapSense.c **** *
  89:Generated_Source\PSoC5/CapSense.c **** * Parameters:
  90:Generated_Source\PSoC5/CapSense.c **** *  None
  91:Generated_Source\PSoC5/CapSense.c **** *
  92:Generated_Source\PSoC5/CapSense.c **** * Return:
  93:Generated_Source\PSoC5/CapSense.c **** *  None
  94:Generated_Source\PSoC5/CapSense.c **** *
  95:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
  96:Generated_Source\PSoC5/CapSense.c **** void CapSense_Init(void) 
  97:Generated_Source\PSoC5/CapSense.c **** {
  98:Generated_Source\PSoC5/CapSense.c ****     #if ( (CapSense_PRS_OPTIONS) || \
  99:Generated_Source\PSoC5/CapSense.c ****           (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_UDB) || \
 100:Generated_Source\PSoC5/CapSense.c ****           ( (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
 101:Generated_Source\PSoC5/CapSense.c ****             (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_UDB)) )
 102:Generated_Source\PSoC5/CapSense.c ****         
 103:Generated_Source\PSoC5/CapSense.c ****         uint8 enableInterrupts;
 104:Generated_Source\PSoC5/CapSense.c ****     #endif /* ( (CapSense_PRS_OPTIONS) || \
 105:Generated_Source\PSoC5/CapSense.c ****            * (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_UDB) || \
 106:Generated_Source\PSoC5/CapSense.c ****            * ( (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
 107:Generated_Source\PSoC5/CapSense.c ****            * (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_UDB)) ) 
 108:Generated_Source\PSoC5/CapSense.c ****            */
 109:Generated_Source\PSoC5/CapSense.c ****     
 110:Generated_Source\PSoC5/CapSense.c ****     /* Clear all sensors */
 111:Generated_Source\PSoC5/CapSense.c ****     CapSense_ClearSensors();
 112:Generated_Source\PSoC5/CapSense.c **** 
 113:Generated_Source\PSoC5/CapSense.c ****     /* Set Prescaler */
 114:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 115:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 116:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
 117:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_CONTROL_REG   = (CapSense_PRESCALER_CTRL_ENABLE |
 118:Generated_Source\PSoC5/CapSense.c ****                                                     CapSense_PRESCALER_CTRL_MODE_CMP);
 119:Generated_Source\PSoC5/CapSense.c ****                                                
 120:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_CONTROL2_REG |= CapSense_PRESCALER_CTRL_CMP_LESS_EQ;
 121:Generated_Source\PSoC5/CapSense.c ****     #else
 122:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 123:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 124:Generated_Source\PSoC5/CapSense.c **** 
 125:Generated_Source\PSoC5/CapSense.c ****     /* Set PRS */
 126:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRS_OPTIONS)
 127:Generated_Source\PSoC5/CapSense.c ****         CapSense_SetAnalogSwitchesSource(CapSense_ANALOG_SWITCHES_SRC_PRS);
 128:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_PRS_OPTIONS) */
 129:Generated_Source\PSoC5/CapSense.c **** 
 130:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRS_OPTIONS == CapSense_PRS_8BITS)
 131:Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */
 132:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 133:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 134:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 135:Generated_Source\PSoC5/CapSense.c ****         
 136:Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 137:Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_REG   = CapSense_PRS8_DEFAULT_POLYNOM;
 138:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 139:Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_REG = CapSense_MEASURE_FULL_RANGE_LOW;
 140:Generated_Source\PSoC5/CapSense.c ****         
 141:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRS_OPTIONS == CapSense_PRS_16BITS)
 142:Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */ 
 143:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();  
 144:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 4


 145:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_B_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 146:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 147:Generated_Source\PSoC5/CapSense.c ****         
 148:Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 149:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_POLYNOM_PTR, CapSense_PRS16_DEFAULT_POLYNOM);
 150:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 151:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_SEED_COPY_PTR, CapSense_MEASURE_FULL_RANGE);
 152:Generated_Source\PSoC5/CapSense.c ****                 
 153:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRS_OPTIONS == CapSense_PRS_16BITS_4X)
 154:Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */
 155:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 156:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG  |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 157:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 158:Generated_Source\PSoC5/CapSense.c ****         
 159:Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 160:Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_A__D1_REG   = HI8(CapSense_PRS16_DEFAULT_POLYNOM);
 161:Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_A__D0_REG   = LO8(CapSense_PRS16_DEFAULT_POLYNOM);
 162:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 163:Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_A__F1_REG = CapSense_MEASURE_FULL_RANGE_LOW;
 164:Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_A__F0_REG = CapSense_MEASURE_FULL_RANGE_LOW; 
 165:Generated_Source\PSoC5/CapSense.c ****         
 166:Generated_Source\PSoC5/CapSense.c ****     #else
 167:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without PRS */
 168:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRS_OPTIONS == CapSense_PRS_8BITS) */ 
 169:Generated_Source\PSoC5/CapSense.c ****     
 170:Generated_Source\PSoC5/CapSense.c ****     /* Set ScanSpeed */
 171:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_PERIOD_REG = CapSense_SCANSPEED_VALUE;
 172:Generated_Source\PSoC5/CapSense.c ****     
 173:Generated_Source\PSoC5/CapSense.c ****     /* Set the Measure */
 174:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 175:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 176:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 177:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 178:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_PWM_CH0_COUNTER_PTR, CapSense_MEASURE_FULL_RANGE);
 179:Generated_Source\PSoC5/CapSense.c ****         
 180:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 181:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 182:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 183:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_RAW_CH0_PERIOD_PTR, CapSense_MEASURE_FULL_RANGE);
 184:Generated_Source\PSoC5/CapSense.c ****     
 185:Generated_Source\PSoC5/CapSense.c ****     #else
 186:Generated_Source\PSoC5/CapSense.c ****         /*Window PWM and Raw Counter AUX set */
 187:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 188:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 189:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 190:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 191:Generated_Source\PSoC5/CapSense.c ****         
 192:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 193:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 194:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 195:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 196:Generated_Source\PSoC5/CapSense.c ****         
 197:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 198:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 199:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 200:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 201:Generated_Source\PSoC5/CapSense.c ****         
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 5


 202:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 203:Generated_Source\PSoC5/CapSense.c ****     
 204:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 205:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 206:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 207:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 208:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 209:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PWM_CH1_COUNTER_PTR, CapSense_MEASURE_FULL_RANGE);
 210:Generated_Source\PSoC5/CapSense.c ****             
 211:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 212:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 213:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 214:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_RAW_CH1_PERIOD_PTR, CapSense_MEASURE_FULL_RANGE);
 215:Generated_Source\PSoC5/CapSense.c ****            
 216:Generated_Source\PSoC5/CapSense.c ****         #else
 217:Generated_Source\PSoC5/CapSense.c ****             /*Window PWM and Raw Counter AUX set */
 218:Generated_Source\PSoC5/CapSense.c ****             enableInterrupts = CyEnterCriticalSection();
 219:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 220:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 221:Generated_Source\PSoC5/CapSense.c ****             CyExitCriticalSection(enableInterrupts);
 222:Generated_Source\PSoC5/CapSense.c ****             
 223:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 224:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 225:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 226:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 227:Generated_Source\PSoC5/CapSense.c ****             
 228:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 229:Generated_Source\PSoC5/CapSense.c ****             
 230:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 231:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 232:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 233:Generated_Source\PSoC5/CapSense.c ****             
 234:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 235:Generated_Source\PSoC5/CapSense.c ****     
 236:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN) */
 237:Generated_Source\PSoC5/CapSense.c ****     
 238:Generated_Source\PSoC5/CapSense.c ****     /* Setup ISR */
 239:Generated_Source\PSoC5/CapSense.c ****     CyIntDisable(CapSense_IsrCH0_ISR_NUMBER);
 240:Generated_Source\PSoC5/CapSense.c ****     (void)CyIntSetVector(CapSense_IsrCH0_ISR_NUMBER, &CapSense_IsrCH0_ISR);
 241:Generated_Source\PSoC5/CapSense.c ****     CyIntSetPriority(CapSense_IsrCH0_ISR_NUMBER, CapSense_IsrCH0_ISR_PRIORITY);
 242:Generated_Source\PSoC5/CapSense.c ****     
 243:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 244:Generated_Source\PSoC5/CapSense.c ****         CyIntDisable(CapSense_IsrCH1_ISR_NUMBER);
 245:Generated_Source\PSoC5/CapSense.c ****         CyIntSetVector(CapSense_IsrCH1_ISR_NUMBER, CapSense_IsrCH1_ISR);
 246:Generated_Source\PSoC5/CapSense.c ****         CyIntSetPriority(CapSense_IsrCH1_ISR_NUMBER, CapSense_IsrCH1_ISR_PRIORITY);
 247:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 248:Generated_Source\PSoC5/CapSense.c ****     
 249:Generated_Source\PSoC5/CapSense.c ****     /* Setup AMux Bus: Connect Cmod, Cmp, Idac */
 250:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Init();
 251:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMOD_CHANNEL);
 252:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMP_VP_CHANNEL);
 253:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 254:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
 255:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 256:Generated_Source\PSoC5/CapSense.c ****     
 257:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 258:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Init();
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 6


 259:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_CMOD_CHANNEL);
 260:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_CMP_VP_CHANNEL);
 261:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 262:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_IDAC_CHANNEL);
 263:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 264:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 265:Generated_Source\PSoC5/CapSense.c ****     
 266:Generated_Source\PSoC5/CapSense.c ****     /* Int Rb */
 267:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
 268:Generated_Source\PSoC5/CapSense.c ****         CapSense_InitRb();
 269:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB) */
 270:Generated_Source\PSoC5/CapSense.c ****     
 271:Generated_Source\PSoC5/CapSense.c ****     /* Enable window generation */
 272:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH0;
 273:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 274:Generated_Source\PSoC5/CapSense.c ****         CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH1;
 275:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 276:Generated_Source\PSoC5/CapSense.c ****     
 277:Generated_Source\PSoC5/CapSense.c ****     /* Initialize Cmp and Idac */
 278:Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Init();
 279:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 280:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Init();
 281:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetPolarity(CapSense_IdacCH0_IDIR);
 282:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetRange(CapSense_IDAC_RANGE_VALUE);
 283:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 284:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 285:Generated_Source\PSoC5/CapSense.c ****     
 286:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 287:Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Init();
 288:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 289:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Init();
 290:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetPolarity(CapSense_IdacCH1_IDIR);
 291:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetRange(CapSense_IDAC_RANGE_VALUE);
 292:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetValue(CapSense_TURN_OFF_IDAC);
 293:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 294:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 295:Generated_Source\PSoC5/CapSense.c ****     
 296:Generated_Source\PSoC5/CapSense.c ****     /* Initialize Vref if as VDAC */
 297:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 298:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Init();
 299:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 300:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Init();
 301:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE */
 302:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_VREF_OPTIONS */
 303:Generated_Source\PSoC5/CapSense.c **** }
 304:Generated_Source\PSoC5/CapSense.c **** 
 305:Generated_Source\PSoC5/CapSense.c **** 
 306:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 307:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Enable
 308:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 309:Generated_Source\PSoC5/CapSense.c **** *
 310:Generated_Source\PSoC5/CapSense.c **** * Summary:
 311:Generated_Source\PSoC5/CapSense.c **** *  Enables active mode power template bits for number of component used within 
 312:Generated_Source\PSoC5/CapSense.c **** *  CapSense.
 313:Generated_Source\PSoC5/CapSense.c **** *
 314:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 315:Generated_Source\PSoC5/CapSense.c **** *  None
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 7


 316:Generated_Source\PSoC5/CapSense.c **** *
 317:Generated_Source\PSoC5/CapSense.c **** * Return:
 318:Generated_Source\PSoC5/CapSense.c **** *  None
 319:Generated_Source\PSoC5/CapSense.c **** *
 320:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 321:Generated_Source\PSoC5/CapSense.c **** void CapSense_Enable(void) 
 322:Generated_Source\PSoC5/CapSense.c **** {
  28              		.loc 1 322 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 323:Generated_Source\PSoC5/CapSense.c ****     uint8 enableInterrupts;
 324:Generated_Source\PSoC5/CapSense.c ****     
 325:Generated_Source\PSoC5/CapSense.c ****     enableInterrupts = CyEnterCriticalSection();
  36              		.loc 1 325 0
  37 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  38              	.LVL0:
  39 0006 0446     		mov	r4, r0
  40              	.LVL1:
 326:Generated_Source\PSoC5/CapSense.c ****     
 327:Generated_Source\PSoC5/CapSense.c ****     /* Enable Prescaler */
 328:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 329:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing  for UDB */
 330:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
 331:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_ACT_PWRMGR_REG  |= CapSense_PRESCALER_ACT_PWR_EN;
 332:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_STBY_PWRMGR_REG |= CapSense_PRESCALER_STBY_PWR_EN;
 333:Generated_Source\PSoC5/CapSense.c ****         
 334:Generated_Source\PSoC5/CapSense.c ****     #else
 335:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 336:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 337:Generated_Source\PSoC5/CapSense.c ****     
 338:Generated_Source\PSoC5/CapSense.c ****     /* Enable ScanSpeed */
 339:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_AUX_CONTROL_REG |= CapSense_SCANSPEED_CTRL_ENABLE;
  41              		.loc 1 339 0
  42 0008 134A     		ldr	r2, .L3
  43 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  44 000c 43F02003 		orr	r3, r3, #32
  45 0010 1370     		strb	r3, [r2]
 340:Generated_Source\PSoC5/CapSense.c ****     
 341:Generated_Source\PSoC5/CapSense.c ****     /* Enable Measure CH0 */
 342:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 343:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 344:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ACT_PWRMGR_REG  |= CapSense_PWM_CH0_ACT_PWR_EN;
 345:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_STBY_PWRMGR_REG |= CapSense_PWM_CH0_STBY_PWR_EN;
 346:Generated_Source\PSoC5/CapSense.c ****         
 347:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 348:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ACT_PWRMGR_REG  |= CapSense_RAW_CH0_ACT_PWR_EN;
 349:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_STBY_PWRMGR_REG |= CapSense_RAW_CH0_STBY_PWR_EN;
 350:Generated_Source\PSoC5/CapSense.c ****         
 351:Generated_Source\PSoC5/CapSense.c ****     #else
 352:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 353:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 354:Generated_Source\PSoC5/CapSense.c ****         
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 8


 355:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 356:Generated_Source\PSoC5/CapSense.c ****     
 357:Generated_Source\PSoC5/CapSense.c ****     /* Enable Measure CH1*/
 358:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 359:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 360:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 361:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ACT_PWRMGR_REG  |= CapSense_PWM_CH1_ACT_PWR_EN;
 362:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_STBY_PWRMGR_REG |= CapSense_PWM_CH1_STBY_PWR_EN;
 363:Generated_Source\PSoC5/CapSense.c ****             
 364:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 365:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ACT_PWRMGR_REG  |= CapSense_RAW_CH1_ACT_PWR_EN;
 366:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_STBY_PWRMGR_REG |= CapSense_RAW_CH1_STBY_PWR_EN;
 367:Generated_Source\PSoC5/CapSense.c ****            
 368:Generated_Source\PSoC5/CapSense.c ****         #else
 369:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 370:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 371:Generated_Source\PSoC5/CapSense.c ****         
 372:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 373:Generated_Source\PSoC5/CapSense.c ****     
 374:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 375:Generated_Source\PSoC5/CapSense.c ****     
 376:Generated_Source\PSoC5/CapSense.c ****     /* Enable the Clock */
 377:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CLOCK_SOURCE == CapSense_INTERNAL_CLOCK)
 378:Generated_Source\PSoC5/CapSense.c ****        CapSense_IntClock_Enable();
  46              		.loc 1 378 0
  47 0012 FFF7FEFF 		bl	CapSense_IntClock_Start
  48              	.LVL2:
 379:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 380:Generated_Source\PSoC5/CapSense.c ****     
 381:Generated_Source\PSoC5/CapSense.c ****     /* Setup Cmp and Idac */
 382:Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Enable();
  49              		.loc 1 382 0
  50 0016 FFF7FEFF 		bl	CapSense_CompCH0_Enable
  51              	.LVL3:
 383:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 384:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Enable();
  52              		.loc 1 384 0
  53 001a FFF7FEFF 		bl	CapSense_IdacCH0_Enable
  54              	.LVL4:
 385:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 386:Generated_Source\PSoC5/CapSense.c ****     
 387:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 388:Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Enable();
 389:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 390:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Enable();
 391:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 392:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 393:Generated_Source\PSoC5/CapSense.c ****     
 394:Generated_Source\PSoC5/CapSense.c ****     /* Enable Vref */
 395:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 396:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Enable();
 397:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_SetValue(CapSense_VdacRefCH0_DEFAULT_DATA);
 398:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 399:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Enable();
 400:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_SetValue(CapSense_VdacRefCH1_DEFAULT_DATA);
 401:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 402:Generated_Source\PSoC5/CapSense.c ****     #else
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 9


 403:Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 404:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG |= CapSense_BufCH0_STBY_PWR_EN;
  55              		.loc 1 404 0
  56 001e 0F4A     		ldr	r2, .L3+4
  57 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  58 0022 43F02003 		orr	r3, r3, #32
  59 0026 1370     		strb	r3, [r2]
 405:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG  |= CapSense_BufCH0_ACT_PWR_EN;
  60              		.loc 1 405 0
  61 0028 103A     		subs	r2, r2, #16
  62 002a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  63 002c 43F02003 		orr	r3, r3, #32
  64 0030 1370     		strb	r3, [r2]
 406:Generated_Source\PSoC5/CapSense.c ****         
 407:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 408:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_STBY_PWRMGR_REG |= CapSense_BufCH1_STBY_PWR_EN;
 409:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_ACT_PWRMGR_REG  |= CapSense_BufCH1_ACT_PWR_EN;
 410:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 411:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
 412:Generated_Source\PSoC5/CapSense.c ****     
 413:Generated_Source\PSoC5/CapSense.c ****     /* Set reference on AMux Bus */
 414:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 415:Generated_Source\PSoC5/CapSense.c ****         /* Connect Vdac to AMux Bus */
 416:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
 417:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 418:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_VREF_CHANNEL);
 419:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 420:Generated_Source\PSoC5/CapSense.c ****         
 421:Generated_Source\PSoC5/CapSense.c ****     #else
 422:Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 423:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
  65              		.loc 1 423 0
  66 0032 02F5A652 		add	r2, r2, #5312
  67 0036 0732     		adds	r2, r2, #7
  68 0038 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  69 003a 43F00103 		orr	r3, r3, #1
  70 003e 1370     		strb	r3, [r2]
 424:Generated_Source\PSoC5/CapSense.c ****         
 425:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 426:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 427:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 428:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)*/
 429:Generated_Source\PSoC5/CapSense.c ****     
 430:Generated_Source\PSoC5/CapSense.c ****     CyExitCriticalSection(enableInterrupts);
  71              		.loc 1 430 0
  72 0040 2046     		mov	r0, r4
  73 0042 FFF7FEFF 		bl	CyExitCriticalSection
  74              	.LVL5:
 431:Generated_Source\PSoC5/CapSense.c ****     
 432:Generated_Source\PSoC5/CapSense.c ****     /* Enable interrupt */
 433:Generated_Source\PSoC5/CapSense.c ****     CyIntEnable(CapSense_IsrCH0_ISR_NUMBER);
  75              		.loc 1 433 0
  76 0046 0122     		movs	r2, #1
  77 0048 054B     		ldr	r3, .L3+8
  78 004a 1A60     		str	r2, [r3]
 434:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 435:Generated_Source\PSoC5/CapSense.c ****         CyIntEnable(CapSense_IsrCH1_ISR_NUMBER);
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 10


 436:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 437:Generated_Source\PSoC5/CapSense.c ****     
 438:Generated_Source\PSoC5/CapSense.c ****     /* Set CapSense Enable state */
 439:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_CAPSENSE_EN;
  79              		.loc 1 439 0
  80 004c 054A     		ldr	r2, .L3+12
  81 004e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  82 0050 43F08003 		orr	r3, r3, #128
  83 0054 1370     		strb	r3, [r2]
  84 0056 10BD     		pop	{r4, pc}
  85              	.LVL6:
  86              	.L4:
  87              		.align	2
  88              	.L3:
  89 0058 9C640040 		.word	1073767580
  90 005c BB430040 		.word	1073759163
  91 0060 00E100E0 		.word	-536813312
  92 0064 7B640040 		.word	1073767547
  93              		.cfi_endproc
  94              	.LFE1:
  95              		.size	CapSense_Enable, .-CapSense_Enable
  96              		.section	.text.CapSense_FindNextSensor,"ax",%progbits
  97              		.align	2
  98              		.global	CapSense_FindNextSensor
  99              		.thumb
 100              		.thumb_func
 101              		.type	CapSense_FindNextSensor, %function
 102              	CapSense_FindNextSensor:
 103              	.LFB4:
 440:Generated_Source\PSoC5/CapSense.c **** }
 441:Generated_Source\PSoC5/CapSense.c **** 
 442:Generated_Source\PSoC5/CapSense.c **** 
 443:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 444:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Start
 445:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 446:Generated_Source\PSoC5/CapSense.c **** *
 447:Generated_Source\PSoC5/CapSense.c **** * Summary:
 448:Generated_Source\PSoC5/CapSense.c **** *  Initializes registers and starts the CSD method of CapSense component. Reset 
 449:Generated_Source\PSoC5/CapSense.c **** *  all sensors to an inactive state. Enables interrupts for sensors scanning.
 450:Generated_Source\PSoC5/CapSense.c **** *  When Auto Tuning (SmartSense) mode is selected the tuning procedure is 
 451:Generated_Source\PSoC5/CapSense.c **** *  applied for all sensors.
 452:Generated_Source\PSoC5/CapSense.c **** *
 453:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 454:Generated_Source\PSoC5/CapSense.c **** *  None
 455:Generated_Source\PSoC5/CapSense.c **** *
 456:Generated_Source\PSoC5/CapSense.c **** * Return:
 457:Generated_Source\PSoC5/CapSense.c **** *  None
 458:Generated_Source\PSoC5/CapSense.c **** *
 459:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 460:Generated_Source\PSoC5/CapSense.c **** *  CapSense_initVar - used to check initial configuration, modified on 
 461:Generated_Source\PSoC5/CapSense.c **** *  first function call.
 462:Generated_Source\PSoC5/CapSense.c **** *  CapSense_lowLevelTuningDone - used to notify the Tuner GUI that 
 463:Generated_Source\PSoC5/CapSense.c **** *  tuning of scanning parameters are done.
 464:Generated_Source\PSoC5/CapSense.c **** *
 465:Generated_Source\PSoC5/CapSense.c **** * Reentrant:
 466:Generated_Source\PSoC5/CapSense.c **** *  No
 467:Generated_Source\PSoC5/CapSense.c **** *
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 11


 468:Generated_Source\PSoC5/CapSense.c **** * Note:
 469:Generated_Source\PSoC5/CapSense.c **** *  All widgets are enabled by default except proximity widgets. Proximity widgets 
 470:Generated_Source\PSoC5/CapSense.c **** *  must be manually enabled as their long scan time is incompatible 
 471:Generated_Source\PSoC5/CapSense.c **** *  with the fast response required of other widget types. 
 472:Generated_Source\PSoC5/CapSense.c **** *
 473:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 474:Generated_Source\PSoC5/CapSense.c **** void CapSense_Start(void)  
 475:Generated_Source\PSoC5/CapSense.c **** {
 476:Generated_Source\PSoC5/CapSense.c ****     if (CapSense_initVar == 0u)
 477:Generated_Source\PSoC5/CapSense.c ****     {
 478:Generated_Source\PSoC5/CapSense.c ****         CapSense_Init();
 479:Generated_Source\PSoC5/CapSense.c ****         CapSense_initVar = 1u;
 480:Generated_Source\PSoC5/CapSense.c ****     }
 481:Generated_Source\PSoC5/CapSense.c ****     CapSense_Enable();
 482:Generated_Source\PSoC5/CapSense.c ****     
 483:Generated_Source\PSoC5/CapSense.c ****     /* AutoTunning start */
 484:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
 485:Generated_Source\PSoC5/CapSense.c ****         /* AutoTune by sensor or pair of sensor basis */
 486:Generated_Source\PSoC5/CapSense.c ****         CapSense_AutoTune();
 487:Generated_Source\PSoC5/CapSense.c ****         CapSense_lowLevelTuningDone = 1u;
 488:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
 489:Generated_Source\PSoC5/CapSense.c **** }
 490:Generated_Source\PSoC5/CapSense.c **** 
 491:Generated_Source\PSoC5/CapSense.c **** 
 492:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 493:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Stop
 494:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 495:Generated_Source\PSoC5/CapSense.c **** *
 496:Generated_Source\PSoC5/CapSense.c **** * Summary:
 497:Generated_Source\PSoC5/CapSense.c **** *  Stops the sensors scanner, disables internal interrupts, and resets all 
 498:Generated_Source\PSoC5/CapSense.c **** *  sensors to an inactive state. Disables Active mode power template bits for 
 499:Generated_Source\PSoC5/CapSense.c **** *  number of component used within CapSense.
 500:Generated_Source\PSoC5/CapSense.c **** *
 501:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 502:Generated_Source\PSoC5/CapSense.c **** *  None
 503:Generated_Source\PSoC5/CapSense.c **** *
 504:Generated_Source\PSoC5/CapSense.c **** * Return:
 505:Generated_Source\PSoC5/CapSense.c **** *  None
 506:Generated_Source\PSoC5/CapSense.c **** *
 507:Generated_Source\PSoC5/CapSense.c **** * Side Effects:
 508:Generated_Source\PSoC5/CapSense.c **** *  This function should be called after scans will be completed.
 509:Generated_Source\PSoC5/CapSense.c **** *
 510:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 511:Generated_Source\PSoC5/CapSense.c **** void CapSense_Stop(void) 
 512:Generated_Source\PSoC5/CapSense.c **** {
 513:Generated_Source\PSoC5/CapSense.c ****     /* Stop Capsensing */
 514:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG &= (uint8)(~CapSense_CTRL_START);
 515:Generated_Source\PSoC5/CapSense.c ****     
 516:Generated_Source\PSoC5/CapSense.c ****     /* Disable interrupt */
 517:Generated_Source\PSoC5/CapSense.c ****     CyIntDisable(CapSense_IsrCH0_ISR_NUMBER);
 518:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 519:Generated_Source\PSoC5/CapSense.c ****         CyIntDisable(CapSense_IsrCH1_ISR_NUMBER);
 520:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 521:Generated_Source\PSoC5/CapSense.c ****     
 522:Generated_Source\PSoC5/CapSense.c ****     /* Clear all sensors */
 523:Generated_Source\PSoC5/CapSense.c ****     CapSense_ClearSensors();
 524:Generated_Source\PSoC5/CapSense.c ****     
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 12


 525:Generated_Source\PSoC5/CapSense.c ****     /* Disable Prescaler */
 526:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 527:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing  for UDB */
 528:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)        
 529:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_ACT_PWRMGR_REG  &= ~CapSense_PRESCALER_ACT_PWR_EN;
 530:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_STBY_PWRMGR_REG &= ~CapSense_PRESCALER_STBY_PWR_EN;
 531:Generated_Source\PSoC5/CapSense.c ****         
 532:Generated_Source\PSoC5/CapSense.c ****     #else
 533:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 534:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 535:Generated_Source\PSoC5/CapSense.c ****     
 536:Generated_Source\PSoC5/CapSense.c ****     /* Disable ScanSpeed */
 537:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_AUX_CONTROL_REG &= (uint8)(~CapSense_SCANSPEED_CTRL_ENABLE);
 538:Generated_Source\PSoC5/CapSense.c ****     
 539:Generated_Source\PSoC5/CapSense.c ****     /* Disable Measure CH0 */
 540:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 541:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 542:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ACT_PWRMGR_REG  &= ~CapSense_PWM_CH0_ACT_PWR_EN;
 543:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_STBY_PWRMGR_REG &= ~CapSense_PWM_CH0_STBY_PWR_EN;
 544:Generated_Source\PSoC5/CapSense.c **** 
 545:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 546:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ACT_PWRMGR_REG  &= ~CapSense_RAW_CH0_ACT_PWR_EN;
 547:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_STBY_PWRMGR_REG &= ~CapSense_RAW_CH0_STBY_PWR_EN;
 548:Generated_Source\PSoC5/CapSense.c **** 
 549:Generated_Source\PSoC5/CapSense.c ****     #else
 550:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 551:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 552:Generated_Source\PSoC5/CapSense.c ****         
 553:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 554:Generated_Source\PSoC5/CapSense.c ****     
 555:Generated_Source\PSoC5/CapSense.c ****     /* Disable Measure CH1 */
 556:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 557:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 558:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 559:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ACT_PWRMGR_REG  &= ~CapSense_PWM_CH1_ACT_PWR_EN;
 560:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_STBY_PWRMGR_REG &= ~CapSense_PWM_CH1_STBY_PWR_EN;
 561:Generated_Source\PSoC5/CapSense.c ****     
 562:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 563:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ACT_PWRMGR_REG  &= ~CapSense_RAW_CH1_ACT_PWR_EN;
 564:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_STBY_PWRMGR_REG &= ~CapSense_RAW_CH1_STBY_PWR_EN;
 565:Generated_Source\PSoC5/CapSense.c ****            
 566:Generated_Source\PSoC5/CapSense.c ****         #else
 567:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 568:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 569:Generated_Source\PSoC5/CapSense.c ****         
 570:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 571:Generated_Source\PSoC5/CapSense.c ****     
 572:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 573:Generated_Source\PSoC5/CapSense.c ****     
 574:Generated_Source\PSoC5/CapSense.c ****     /* Disable the Clock */
 575:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CLOCK_SOURCE == CapSense_INTERNAL_CLOCK)
 576:Generated_Source\PSoC5/CapSense.c ****        CapSense_IntClock_Stop();
 577:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 578:Generated_Source\PSoC5/CapSense.c ****     
 579:Generated_Source\PSoC5/CapSense.c ****     /* Disable power from Cmp and Idac */
 580:Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Stop();
 581:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 13


 582:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Stop();
 583:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 584:Generated_Source\PSoC5/CapSense.c ****     
 585:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 586:Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Stop();
 587:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 588:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Stop();
 589:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 590:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */    
 591:Generated_Source\PSoC5/CapSense.c ****     
 592:Generated_Source\PSoC5/CapSense.c ****     /* Disable Vref if as VDAC */
 593:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 594:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Stop();
 595:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 596:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Stop();
 597:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE */
 598:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_VREF_OPTIONS */
 599:Generated_Source\PSoC5/CapSense.c **** 
 600:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
 601:Generated_Source\PSoC5/CapSense.c ****         /* The Idac turn off before */
 602:Generated_Source\PSoC5/CapSense.c ****     #else
 603:Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 604:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_CAPS_CFG0_REG &= (uint8)(~CapSense_CSBUF_ENABLE);
 605:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_ACT_PWR_EN);
 606:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_STBY_PWR_EN);
 607:Generated_Source\PSoC5/CapSense.c ****         
 608:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 609:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG &= (uint8)(~CapSense_CSBUF_ENABLE);
 610:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH1_ACT_PWR_EN);
 611:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH1_STBY_PWR_EN);
 612:Generated_Source\PSoC5/CapSense.c ****         #endif  /*(CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 613:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
 614:Generated_Source\PSoC5/CapSense.c ****     
 615:Generated_Source\PSoC5/CapSense.c ****     /* Set CapSense Disable state */
 616:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG &= (uint8)(~CapSense_CTRL_CAPSENSE_EN);
 617:Generated_Source\PSoC5/CapSense.c **** }
 618:Generated_Source\PSoC5/CapSense.c **** 
 619:Generated_Source\PSoC5/CapSense.c **** 
 620:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 621:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
 622:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_FindNextSensor
 623:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
 624:Generated_Source\PSoC5/CapSense.c ****     *
 625:Generated_Source\PSoC5/CapSense.c ****     * Summary:
 626:Generated_Source\PSoC5/CapSense.c ****     *  Finds next sensor to scan. 
 627:Generated_Source\PSoC5/CapSense.c ****     *
 628:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
 629:Generated_Source\PSoC5/CapSense.c ****     *  snsIndex:  Current index of sensor.
 630:Generated_Source\PSoC5/CapSense.c ****     *
 631:Generated_Source\PSoC5/CapSense.c ****     * Return:
 632:Generated_Source\PSoC5/CapSense.c ****     *  Returns the next sensor index to scan.
 633:Generated_Source\PSoC5/CapSense.c ****     *
 634:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
 635:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[ ] - used to store bit masks of enabled 
 636:Generated_Source\PSoC5/CapSense.c ****     *  sensors.
 637:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 0
 638:Generated_Source\PSoC5/CapSense.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 14


 639:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[1] contains the masked bits for sensors 
 640:Generated_Source\PSoC5/CapSense.c ****     *  8 through 15 (if needed), and so on.
 641:Generated_Source\PSoC5/CapSense.c ****     *    0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 642:Generated_Source\PSoC5/CapSense.c ****     *    1 - sensor scans by CapSense_ScanEnabledWidgets().
 643:Generated_Source\PSoC5/CapSense.c ****     *
 644:Generated_Source\PSoC5/CapSense.c ****     * Note: 
 645:Generated_Source\PSoC5/CapSense.c ****     *  This function has effect on current scanning scanning and should not
 646:Generated_Source\PSoC5/CapSense.c ****     *  be used outisde of component.
 647:Generated_Source\PSoC5/CapSense.c ****     *
 648:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
 649:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_FindNextSensor(uint8 snsIndex) CYREENTRANT
 650:Generated_Source\PSoC5/CapSense.c ****     {
 104              		.loc 1 650 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 109              	.LVL7:
 110              	.L7:
 651:Generated_Source\PSoC5/CapSense.c ****         uint8 pos;
 652:Generated_Source\PSoC5/CapSense.c ****         uint8 enMask;
 653:Generated_Source\PSoC5/CapSense.c ****         
 654:Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor enabled */
 655:Generated_Source\PSoC5/CapSense.c ****         do
 656:Generated_Source\PSoC5/CapSense.c ****         {
 657:Generated_Source\PSoC5/CapSense.c ****             /* Proceed with the next sensor */
 658:Generated_Source\PSoC5/CapSense.c ****             snsIndex++;
 111              		.loc 1 658 0
 112 0000 0130     		adds	r0, r0, #1
 113 0002 C0B2     		uxtb	r0, r0
 114              	.LVL8:
 659:Generated_Source\PSoC5/CapSense.c ****             if(snsIndex == CapSense_TOTAL_SENSOR_COUNT)
 115              		.loc 1 659 0
 116 0004 0128     		cmp	r0, #1
 117 0006 08D0     		beq	.L6
 660:Generated_Source\PSoC5/CapSense.c ****             {
 661:Generated_Source\PSoC5/CapSense.c ****                 break;
 662:Generated_Source\PSoC5/CapSense.c ****             }
 663:Generated_Source\PSoC5/CapSense.c ****             pos = (snsIndex >> 3u);
 118              		.loc 1 663 0
 119 0008 C208     		lsrs	r2, r0, #3
 664:Generated_Source\PSoC5/CapSense.c ****             enMask = 0x01u << (snsIndex & 0x07u);
 120              		.loc 1 664 0
 121 000a 00F00701 		and	r1, r0, #7
 122 000e 0123     		movs	r3, #1
 123 0010 8B40     		lsls	r3, r3, r1
 124              	.LVL9:
 665:Generated_Source\PSoC5/CapSense.c ****         }    
 666:Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[pos] & enMask) == 0u);
 125              		.loc 1 666 0
 126 0012 0249     		ldr	r1, .L8
 127 0014 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 128 0016 1342     		tst	r3, r2
 129 0018 F2D0     		beq	.L7
 130              	.LVL10:
 131              	.L6:
 667:Generated_Source\PSoC5/CapSense.c ****         
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 15


 668:Generated_Source\PSoC5/CapSense.c ****         return snsIndex;
 669:Generated_Source\PSoC5/CapSense.c ****     }
 132              		.loc 1 669 0
 133 001a 7047     		bx	lr
 134              	.L9:
 135              		.align	2
 136              	.L8:
 137 001c 00000000 		.word	.LANCHOR0
 138              		.cfi_endproc
 139              	.LFE4:
 140              		.size	CapSense_FindNextSensor, .-CapSense_FindNextSensor
 141              		.section	.text.CapSense_IsBusy,"ax",%progbits
 142              		.align	2
 143              		.global	CapSense_IsBusy
 144              		.thumb
 145              		.thumb_func
 146              		.type	CapSense_IsBusy, %function
 147              	CapSense_IsBusy:
 148              	.LFB8:
 670:Generated_Source\PSoC5/CapSense.c ****  #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */
 671:Generated_Source\PSoC5/CapSense.c ****  
 672:Generated_Source\PSoC5/CapSense.c ****  
 673:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 674:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
 675:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_FindNextPair
 676:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
 677:Generated_Source\PSoC5/CapSense.c ****     *
 678:Generated_Source\PSoC5/CapSense.c ****     * Summary:
 679:Generated_Source\PSoC5/CapSense.c ****     *  Finds next pair or sensor to scan. Sets condition bits to skip scanning.
 680:Generated_Source\PSoC5/CapSense.c ****     *  
 681:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
 682:Generated_Source\PSoC5/CapSense.c ****     *  snsIndex:  Current index pair of sensors.
 683:Generated_Source\PSoC5/CapSense.c ****     *
 684:Generated_Source\PSoC5/CapSense.c ****     * Return:
 685:Generated_Source\PSoC5/CapSense.c ****     *  Returns the next pair of sensors index to scan.
 686:Generated_Source\PSoC5/CapSense.c ****     *
 687:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
 688:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[ ] - used to store bit masks of enabled 
 689:Generated_Source\PSoC5/CapSense.c ****     *  sensors.
 690:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 0
 691:Generated_Source\PSoC5/CapSense.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 692:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[1] contains the masked bits for sensors 
 693:Generated_Source\PSoC5/CapSense.c ****     *  8 through 15 (if needed), and so on.
 694:Generated_Source\PSoC5/CapSense.c ****     *    0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 695:Generated_Source\PSoC5/CapSense.c ****     *    1 - sensor scans by CapSense_ScanEnabledWidgets().
 696:Generated_Source\PSoC5/CapSense.c ****     *
 697:Generated_Source\PSoC5/CapSense.c ****     * Note: 
 698:Generated_Source\PSoC5/CapSense.c ****     *  This function has effect on control signals set for scanning and should not
 699:Generated_Source\PSoC5/CapSense.c ****     *  be used outisde of component.
 700:Generated_Source\PSoC5/CapSense.c ****     *
 701:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
 702:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_FindNextPair(uint8 snsIndex) CYREENTRANT
 703:Generated_Source\PSoC5/CapSense.c ****     {
 704:Generated_Source\PSoC5/CapSense.c ****         uint8 posCh;
 705:Generated_Source\PSoC5/CapSense.c ****         uint8 enMaskCh;
 706:Generated_Source\PSoC5/CapSense.c ****         uint8 newRegValue;
 707:Generated_Source\PSoC5/CapSense.c ****         uint8 indexCh0 = snsIndex;
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 16


 708:Generated_Source\PSoC5/CapSense.c ****         uint8 indexCh1 = snsIndex + CapSense_TOTAL_SENSOR_COUNT__CH0;
 709:Generated_Source\PSoC5/CapSense.c ****         
 710:Generated_Source\PSoC5/CapSense.c ****         /* Find enabled sensor on channel 0 */
 711:Generated_Source\PSoC5/CapSense.c ****         do
 712:Generated_Source\PSoC5/CapSense.c ****         {
 713:Generated_Source\PSoC5/CapSense.c ****             /* Procced the scanning */
 714:Generated_Source\PSoC5/CapSense.c ****             indexCh0++;
 715:Generated_Source\PSoC5/CapSense.c ****             if (indexCh0 >= CapSense_TOTAL_SENSOR_COUNT__CH0)
 716:Generated_Source\PSoC5/CapSense.c ****             {
 717:Generated_Source\PSoC5/CapSense.c ****                 /* Lets hadle now all from CH1 */
 718:Generated_Source\PSoC5/CapSense.c ****                 indexCh0 = CapSense_END_OF_SCAN__CH0;
 719:Generated_Source\PSoC5/CapSense.c ****                 break;
 720:Generated_Source\PSoC5/CapSense.c ****             }
 721:Generated_Source\PSoC5/CapSense.c ****             
 722:Generated_Source\PSoC5/CapSense.c ****             posCh = (indexCh0 >> 3u);
 723:Generated_Source\PSoC5/CapSense.c ****             enMaskCh = 0x01u << (indexCh0 & 0x07u);
 724:Generated_Source\PSoC5/CapSense.c ****         }
 725:Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[posCh] & enMaskCh) == 0u);
 726:Generated_Source\PSoC5/CapSense.c ****         
 727:Generated_Source\PSoC5/CapSense.c ****         /* Find enabled sensor on channel 1 */
 728:Generated_Source\PSoC5/CapSense.c ****         do
 729:Generated_Source\PSoC5/CapSense.c ****         {
 730:Generated_Source\PSoC5/CapSense.c ****             /* Procced the scanning */
 731:Generated_Source\PSoC5/CapSense.c ****             indexCh1++;        
 732:Generated_Source\PSoC5/CapSense.c ****             if (indexCh1 >= CapSense_TOTAL_SENSOR_COUNT)
 733:Generated_Source\PSoC5/CapSense.c ****             {
 734:Generated_Source\PSoC5/CapSense.c ****                 /* Lets hadle now all from CH0 */
 735:Generated_Source\PSoC5/CapSense.c ****                 indexCh1 = CapSense_END_OF_SCAN__CH1;
 736:Generated_Source\PSoC5/CapSense.c ****                 break;
 737:Generated_Source\PSoC5/CapSense.c ****             }
 738:Generated_Source\PSoC5/CapSense.c ****             
 739:Generated_Source\PSoC5/CapSense.c ****             posCh = (indexCh1 >> 3u);
 740:Generated_Source\PSoC5/CapSense.c ****             enMaskCh = 0x01u << (indexCh1 & 0x07u);
 741:Generated_Source\PSoC5/CapSense.c ****         } 
 742:Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[posCh] & enMaskCh) == 0u);
 743:Generated_Source\PSoC5/CapSense.c ****         
 744:Generated_Source\PSoC5/CapSense.c ****         indexCh1 -= CapSense_TOTAL_SENSOR_COUNT__CH0;
 745:Generated_Source\PSoC5/CapSense.c ****         
 746:Generated_Source\PSoC5/CapSense.c ****         /* Find the pair to scan */
 747:Generated_Source\PSoC5/CapSense.c ****         if(indexCh0 == indexCh1)
 748:Generated_Source\PSoC5/CapSense.c ****         {
 749:Generated_Source\PSoC5/CapSense.c ****             /* Scans TWO Channels */
 750:Generated_Source\PSoC5/CapSense.c ****             snsIndex = indexCh0;
 751:Generated_Source\PSoC5/CapSense.c ****             
 752:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= (CapSense_CTRL_WINDOW_EN__CH0 | 
 753:Generated_Source\PSoC5/CapSense.c ****                                              CapSense_CTRL_WINDOW_EN__CH1);
 754:Generated_Source\PSoC5/CapSense.c ****         }
 755:Generated_Source\PSoC5/CapSense.c ****         else if(indexCh0 < indexCh1)
 756:Generated_Source\PSoC5/CapSense.c ****         {
 757:Generated_Source\PSoC5/CapSense.c ****            /* Scans Channel ONE only */
 758:Generated_Source\PSoC5/CapSense.c ****            snsIndex = indexCh0;
 759:Generated_Source\PSoC5/CapSense.c ****            
 760:Generated_Source\PSoC5/CapSense.c ****             newRegValue = CapSense_CONTROL_REG;
 761:Generated_Source\PSoC5/CapSense.c ****             newRegValue |= CapSense_CTRL_WINDOW_EN__CH0;
 762:Generated_Source\PSoC5/CapSense.c ****             newRegValue &= ~CapSense_CTRL_WINDOW_EN__CH1;
 763:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG = newRegValue;
 764:Generated_Source\PSoC5/CapSense.c ****         }
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 17


 765:Generated_Source\PSoC5/CapSense.c ****         else
 766:Generated_Source\PSoC5/CapSense.c ****         {
 767:Generated_Source\PSoC5/CapSense.c ****             /* Scans Channel TWO only */
 768:Generated_Source\PSoC5/CapSense.c ****             snsIndex = indexCh1;
 769:Generated_Source\PSoC5/CapSense.c ****             
 770:Generated_Source\PSoC5/CapSense.c ****             newRegValue = CapSense_CONTROL_REG;
 771:Generated_Source\PSoC5/CapSense.c ****             newRegValue |= CapSense_CTRL_WINDOW_EN__CH1;
 772:Generated_Source\PSoC5/CapSense.c ****             newRegValue &= ~CapSense_CTRL_WINDOW_EN__CH0;
 773:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG = newRegValue;
 774:Generated_Source\PSoC5/CapSense.c ****         }
 775:Generated_Source\PSoC5/CapSense.c ****         
 776:Generated_Source\PSoC5/CapSense.c ****         return (snsIndex);
 777:Generated_Source\PSoC5/CapSense.c ****     }
 778:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN */
 779:Generated_Source\PSoC5/CapSense.c **** 
 780:Generated_Source\PSoC5/CapSense.c **** 
 781:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 782:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_SetScanSlotSettings
 783:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 784:Generated_Source\PSoC5/CapSense.c **** *
 785:Generated_Source\PSoC5/CapSense.c **** * Summary:
 786:Generated_Source\PSoC5/CapSense.c **** *  Sets the scan settings of the selected scan slot (sensor or pair of sensors). 
 787:Generated_Source\PSoC5/CapSense.c **** *  The scan settings incorporate IDAC value (for IDAC configurations) for every 
 788:Generated_Source\PSoC5/CapSense.c **** *  sensor and resolution. The resolution is the same for all sensors within 
 789:Generated_Source\PSoC5/CapSense.c **** *  widget.
 790:Generated_Source\PSoC5/CapSense.c **** *
 791:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 792:Generated_Source\PSoC5/CapSense.c **** *  slot:  Scan slot number (sensor or pair of sensors).
 793:Generated_Source\PSoC5/CapSense.c **** *
 794:Generated_Source\PSoC5/CapSense.c **** * Return:
 795:Generated_Source\PSoC5/CapSense.c **** *  None
 796:Generated_Source\PSoC5/CapSense.c **** *
 797:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 798:Generated_Source\PSoC5/CapSense.c **** *  CapSense_idacSettings[] - used to store idac value for every sensor.
 799:Generated_Source\PSoC5/CapSense.c **** *  CapSense_widgetResolution[] - used to store scan resolution of every 
 800:Generated_Source\PSoC5/CapSense.c **** *  widget.
 801:Generated_Source\PSoC5/CapSense.c **** *
 802:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 803:Generated_Source\PSoC5/CapSense.c **** void CapSense_SetScanSlotSettings(uint8 slot) CYREENTRANT
 804:Generated_Source\PSoC5/CapSense.c **** {
 805:Generated_Source\PSoC5/CapSense.c ****     uint8 widget;
 806:Generated_Source\PSoC5/CapSense.c ****     
 807:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 808:Generated_Source\PSoC5/CapSense.c ****         /* Define widget sensor belongs to */
 809:Generated_Source\PSoC5/CapSense.c ****         widget = CapSense_widgetNumber[slot];
 810:Generated_Source\PSoC5/CapSense.c ****         
 811:Generated_Source\PSoC5/CapSense.c ****         /* Set Idac Value */
 812:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 813:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_idacSettings[slot]);
 814:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 815:Generated_Source\PSoC5/CapSense.c ****         
 816:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 817:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 818:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PWM_CH0_PERIOD_PTR,
 819:Generated_Source\PSoC5/CapSense.c ****                 ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_LO
 820:Generated_Source\PSoC5/CapSense.c ****         #else
 821:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH0_PERIOD_HI_REG = CapSense_widgetResolution[widget];
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 18


 822:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 823:Generated_Source\PSoC5/CapSense.c **** 
 824:Generated_Source\PSoC5/CapSense.c ****         #if ( (CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 825:Generated_Source\PSoC5/CapSense.c ****               (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) )
 826:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider[slot]);
 827:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
 828:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider);
 829:Generated_Source\PSoC5/CapSense.c ****         #endif /* ((CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 830:Generated_Source\PSoC5/CapSense.c ****                *   (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING))
 831:Generated_Source\PSoC5/CapSense.c ****                */
 832:Generated_Source\PSoC5/CapSense.c **** 
 833:Generated_Source\PSoC5/CapSense.c ****     #else
 834:Generated_Source\PSoC5/CapSense.c ****         if(slot < CapSense_TOTAL_SENSOR_COUNT__CH0)
 835:Generated_Source\PSoC5/CapSense.c ****         {
 836:Generated_Source\PSoC5/CapSense.c ****             /* Define widget sensor belongs to */
 837:Generated_Source\PSoC5/CapSense.c ****             widget = CapSense_widgetNumber[slot];
 838:Generated_Source\PSoC5/CapSense.c ****             
 839:Generated_Source\PSoC5/CapSense.c ****             /* Set Idac Value */
 840:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE)
 841:Generated_Source\PSoC5/CapSense.c ****                 CapSense_IdacCH0_SetValue(CapSense_idacSettings[slot]);
 842:Generated_Source\PSoC5/CapSense.c ****             #endif  /* CapSense_CURRENT_SOURCE */
 843:Generated_Source\PSoC5/CapSense.c ****             
 844:Generated_Source\PSoC5/CapSense.c ****             /* Set Pwm Resolution */
 845:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 846:Generated_Source\PSoC5/CapSense.c ****                 CY_SET_REG16(CapSense_PWM_CH0_PERIOD_PTR,
 847:Generated_Source\PSoC5/CapSense.c ****                   ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_
 848:Generated_Source\PSoC5/CapSense.c ****             #else
 849:Generated_Source\PSoC5/CapSense.c ****                 CapSense_PWM_CH0_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 850:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)*/ 
 851:Generated_Source\PSoC5/CapSense.c ****         }
 852:Generated_Source\PSoC5/CapSense.c ****         
 853:Generated_Source\PSoC5/CapSense.c ****         if(slot < CapSense_TOTAL_SENSOR_COUNT__CH1)
 854:Generated_Source\PSoC5/CapSense.c ****         {
 855:Generated_Source\PSoC5/CapSense.c ****             widget = CapSense_widgetNumber[slot+CapSense_TOTAL_SENSOR_COUNT__CH0];
 856:Generated_Source\PSoC5/CapSense.c ****         
 857:Generated_Source\PSoC5/CapSense.c ****             /* Set Idac Value */
 858:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE)
 859:Generated_Source\PSoC5/CapSense.c ****                 CapSense_IdacCH1_SetValue(CapSense_idacSettings[slot+
 860:Generated_Source\PSoC5/CapSense.c ****                                                                              CapSense_TOTAL_SENSOR_
 861:Generated_Source\PSoC5/CapSense.c ****             #endif  /* CapSense_CURRENT_SOURCE */
 862:Generated_Source\PSoC5/CapSense.c ****             
 863:Generated_Source\PSoC5/CapSense.c ****             /* Set Pwm Resolution */
 864:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 865:Generated_Source\PSoC5/CapSense.c ****                 CY_SET_REG16(CapSense_PWM_CH1_PERIOD_PTR,
 866:Generated_Source\PSoC5/CapSense.c ****                   ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_
 867:Generated_Source\PSoC5/CapSense.c ****             #else
 868:Generated_Source\PSoC5/CapSense.c ****                 CapSense_PWM_CH1_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 869:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)*/ 
 870:Generated_Source\PSoC5/CapSense.c ****         }
 871:Generated_Source\PSoC5/CapSense.c **** 
 872:Generated_Source\PSoC5/CapSense.c ****         #if ( (CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 873:Generated_Source\PSoC5/CapSense.c ****               (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) )
 874:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider[slot]);
 875:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
 876:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider);
 877:Generated_Source\PSoC5/CapSense.c ****         #endif /* ((CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 878:Generated_Source\PSoC5/CapSense.c ****                *   (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING))
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 19


 879:Generated_Source\PSoC5/CapSense.c ****                */
 880:Generated_Source\PSoC5/CapSense.c **** 
 881:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 882:Generated_Source\PSoC5/CapSense.c **** }
 883:Generated_Source\PSoC5/CapSense.c **** 
 884:Generated_Source\PSoC5/CapSense.c **** 
 885:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 886:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ScanSensor
 887:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 888:Generated_Source\PSoC5/CapSense.c **** *
 889:Generated_Source\PSoC5/CapSense.c **** * Summary:
 890:Generated_Source\PSoC5/CapSense.c **** *  Sets scan settings and starts scanning a sensor or pair of combined sensors
 891:Generated_Source\PSoC5/CapSense.c **** *  on each channel. If two channels are configured, two sensors may be scanned 
 892:Generated_Source\PSoC5/CapSense.c **** *  at the same time. After scanning is complete the isr copies the measured 
 893:Generated_Source\PSoC5/CapSense.c **** *  sensor raw data to the global array. Use of the isr ensures this function 
 894:Generated_Source\PSoC5/CapSense.c **** *  is non-blocking. Each sensor has a unique number within the sensor array. 
 895:Generated_Source\PSoC5/CapSense.c **** *  This number is assigned by the CapSense customizer in sequence.
 896:Generated_Source\PSoC5/CapSense.c **** *
 897:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 898:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
 899:Generated_Source\PSoC5/CapSense.c **** *
 900:Generated_Source\PSoC5/CapSense.c **** * Return:
 901:Generated_Source\PSoC5/CapSense.c **** *  None
 902:Generated_Source\PSoC5/CapSense.c **** *
 903:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 904:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
 905:Generated_Source\PSoC5/CapSense.c **** *  Sets busy status(scan in progress) and mode of scan as single scan.
 906:Generated_Source\PSoC5/CapSense.c **** *  For two channel design the additional bits are set to define if scan a 
 907:Generated_Source\PSoC5/CapSense.c **** *  pair of sensors or single one.
 908:Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorIndex - used to store sensor scanning sensor number.
 909:Generated_Source\PSoC5/CapSense.c **** *  Sets to provided sensor argument.
 910:Generated_Source\PSoC5/CapSense.c **** *
 911:Generated_Source\PSoC5/CapSense.c **** * Reentrant:
 912:Generated_Source\PSoC5/CapSense.c **** *  No
 913:Generated_Source\PSoC5/CapSense.c **** *
 914:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 915:Generated_Source\PSoC5/CapSense.c **** void CapSense_ScanSensor(uint8 sensor)  
 916:Generated_Source\PSoC5/CapSense.c **** {
 917:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 918:Generated_Source\PSoC5/CapSense.c ****     CapSense_csv = 0u;
 919:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = sensor;
 920:Generated_Source\PSoC5/CapSense.c ****     
 921:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 922:Generated_Source\PSoC5/CapSense.c ****         /* Start of sensor scan */
 923:Generated_Source\PSoC5/CapSense.c ****         CapSense_csv = (CapSense_SW_STS_BUSY | CapSense_SW_CTRL_SINGLE_SCAN);
 924:Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan(sensor);
 925:Generated_Source\PSoC5/CapSense.c ****         
 926:Generated_Source\PSoC5/CapSense.c ****     #else
 927:Generated_Source\PSoC5/CapSense.c ****         /* CH0: check end of scan conditions */
 928:Generated_Source\PSoC5/CapSense.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH0)
 929:Generated_Source\PSoC5/CapSense.c ****         {
 930:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH0;
 931:Generated_Source\PSoC5/CapSense.c ****         }
 932:Generated_Source\PSoC5/CapSense.c ****         else
 933:Generated_Source\PSoC5/CapSense.c ****         {
 934:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~CapSense_CTRL_WINDOW_EN__CH0;
 935:Generated_Source\PSoC5/CapSense.c ****         }
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 20


 936:Generated_Source\PSoC5/CapSense.c ****         
 937:Generated_Source\PSoC5/CapSense.c ****         /* CH1: check end of scan conditions */
 938:Generated_Source\PSoC5/CapSense.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH1)
 939:Generated_Source\PSoC5/CapSense.c ****         {
 940:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH1;
 941:Generated_Source\PSoC5/CapSense.c ****         }
 942:Generated_Source\PSoC5/CapSense.c ****         else
 943:Generated_Source\PSoC5/CapSense.c ****         {
 944:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~CapSense_CTRL_WINDOW_EN__CH1;
 945:Generated_Source\PSoC5/CapSense.c ****         }
 946:Generated_Source\PSoC5/CapSense.c ****         
 947:Generated_Source\PSoC5/CapSense.c ****         /* Start sensor scan */
 948:Generated_Source\PSoC5/CapSense.c ****         if( ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) != 0u) || 
 949:Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) != 0u) )
 950:Generated_Source\PSoC5/CapSense.c ****         {
 951:Generated_Source\PSoC5/CapSense.c ****         
 952:Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= (CapSense_SW_STS_BUSY | CapSense_SW_CTRL_SINGLE_SCAN);
 953:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(sensor);
 954:Generated_Source\PSoC5/CapSense.c ****         }
 955:Generated_Source\PSoC5/CapSense.c ****         
 956:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 957:Generated_Source\PSoC5/CapSense.c **** }
 958:Generated_Source\PSoC5/CapSense.c **** 
 959:Generated_Source\PSoC5/CapSense.c **** 
 960:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 961:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ScanEnableWidgets
 962:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 963:Generated_Source\PSoC5/CapSense.c **** *
 964:Generated_Source\PSoC5/CapSense.c **** * Summary:
 965:Generated_Source\PSoC5/CapSense.c **** *  Scans all of the enabled widgets. Starts scanning a sensor or pair of sensors 
 966:Generated_Source\PSoC5/CapSense.c **** *  within enabled widget. The isr proceeding scanning next sensor or pair till 
 967:Generated_Source\PSoC5/CapSense.c **** *  all enabled widgets will be scanned. Use of the isr ensures this function is 
 968:Generated_Source\PSoC5/CapSense.c **** *  non-blocking. All widgets are enabled by default except proximity widgets. 
 969:Generated_Source\PSoC5/CapSense.c **** *  Proximity widgets must be manually enabled as their long scan time is 
 970:Generated_Source\PSoC5/CapSense.c **** *  incompatible with fast response desired of other widget types.
 971:Generated_Source\PSoC5/CapSense.c **** *
 972:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 973:Generated_Source\PSoC5/CapSense.c **** *  None
 974:Generated_Source\PSoC5/CapSense.c **** *
 975:Generated_Source\PSoC5/CapSense.c **** * Return:
 976:Generated_Source\PSoC5/CapSense.c **** *  None
 977:Generated_Source\PSoC5/CapSense.c **** *
 978:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 979:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
 980:Generated_Source\PSoC5/CapSense.c **** *  Sets busy status(scan in progress) and clears single scan mode.
 981:Generated_Source\PSoC5/CapSense.c **** *  For two channel design the additional bits are set to define if scan a 
 982:Generated_Source\PSoC5/CapSense.c **** *  pair of sensors or single one. 
 983:Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorIndex - used to store sensor scanning sensor number.
 984:Generated_Source\PSoC5/CapSense.c **** *  Sets to 0xFF and provided to function CapSense_FindNextSensor or
 985:Generated_Source\PSoC5/CapSense.c **** *  CapSense_FindNextPair, these functions starts with sensor index
 986:Generated_Source\PSoC5/CapSense.c **** *  increment and overflow of uint8 gives desired index 0.
 987:Generated_Source\PSoC5/CapSense.c **** *
 988:Generated_Source\PSoC5/CapSense.c **** * Reentrant:
 989:Generated_Source\PSoC5/CapSense.c **** *  No
 990:Generated_Source\PSoC5/CapSense.c **** *
 991:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 992:Generated_Source\PSoC5/CapSense.c **** void CapSense_ScanEnabledWidgets(void) 
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 21


 993:Generated_Source\PSoC5/CapSense.c **** {
 994:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 995:Generated_Source\PSoC5/CapSense.c ****     CapSense_csv = 0u;
 996:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = 0xFFu;
 997:Generated_Source\PSoC5/CapSense.c ****     
 998:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 999:Generated_Source\PSoC5/CapSense.c ****         /* Find next sensor */
1000:Generated_Source\PSoC5/CapSense.c ****         CapSense_sensorIndex = CapSense_FindNextSensor(CapSense_sensorIndex);
1001:Generated_Source\PSoC5/CapSense.c **** 
1002:Generated_Source\PSoC5/CapSense.c ****         /* Check end of scan condition */
1003:Generated_Source\PSoC5/CapSense.c ****         if(CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT)
1004:Generated_Source\PSoC5/CapSense.c ****         {
1005:Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= CapSense_SW_STS_BUSY;
1006:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
1007:Generated_Source\PSoC5/CapSense.c ****         }
1008:Generated_Source\PSoC5/CapSense.c ****         
1009:Generated_Source\PSoC5/CapSense.c ****     #else
1010:Generated_Source\PSoC5/CapSense.c ****         /* Find next sensor and set proper control register */
1011:Generated_Source\PSoC5/CapSense.c ****         CapSense_sensorIndex = CapSense_FindNextPair(CapSense_sensorIndex);
1012:Generated_Source\PSoC5/CapSense.c ****         
1013:Generated_Source\PSoC5/CapSense.c ****         /* Start sensor scan */
1014:Generated_Source\PSoC5/CapSense.c ****         if((CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT__CH0) || 
1015:Generated_Source\PSoC5/CapSense.c ****            (CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT__CH1))
1016:Generated_Source\PSoC5/CapSense.c ****         {
1017:Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= CapSense_SW_STS_BUSY;
1018:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
1019:Generated_Source\PSoC5/CapSense.c ****         }
1020:Generated_Source\PSoC5/CapSense.c ****         
1021:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
1022:Generated_Source\PSoC5/CapSense.c **** }
1023:Generated_Source\PSoC5/CapSense.c **** 
1024:Generated_Source\PSoC5/CapSense.c **** 
1025:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1026:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_IsBusy
1027:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1028:Generated_Source\PSoC5/CapSense.c **** *
1029:Generated_Source\PSoC5/CapSense.c **** * Summary:
1030:Generated_Source\PSoC5/CapSense.c **** *  Returns the state of CapSense component. The 1 means that scanning in 
1031:Generated_Source\PSoC5/CapSense.c **** *  progress and 0 means that scanning is complete.
1032:Generated_Source\PSoC5/CapSense.c **** *
1033:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1034:Generated_Source\PSoC5/CapSense.c **** *  None
1035:Generated_Source\PSoC5/CapSense.c **** *
1036:Generated_Source\PSoC5/CapSense.c **** * Return:
1037:Generated_Source\PSoC5/CapSense.c **** *  Returns the state of scanning. 1 - scanning in progress, 0 - scanning 
1038:Generated_Source\PSoC5/CapSense.c **** *  completed.
1039:Generated_Source\PSoC5/CapSense.c **** *
1040:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1041:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
1042:Generated_Source\PSoC5/CapSense.c **** *  Checks the busy status.
1043:Generated_Source\PSoC5/CapSense.c **** *
1044:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1045:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_IsBusy(void) 
1046:Generated_Source\PSoC5/CapSense.c **** {
 149              		.loc 1 1046 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 22


 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
1047:Generated_Source\PSoC5/CapSense.c ****     return ((0u != (CapSense_csv & CapSense_SW_STS_BUSY)) ? 1u : 0u);
 154              		.loc 1 1047 0
 155 0000 024B     		ldr	r3, .L11
 156 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1048:Generated_Source\PSoC5/CapSense.c **** }
 157              		.loc 1 1048 0
 158 0004 00F00100 		and	r0, r0, #1
 159 0008 7047     		bx	lr
 160              	.L12:
 161 000a 00BF     		.align	2
 162              	.L11:
 163 000c 00000000 		.word	CapSense_csv
 164              		.cfi_endproc
 165              	.LFE8:
 166              		.size	CapSense_IsBusy, .-CapSense_IsBusy
 167              		.section	.text.CapSense_ReadSensorRaw,"ax",%progbits
 168              		.align	2
 169              		.global	CapSense_ReadSensorRaw
 170              		.thumb
 171              		.thumb_func
 172              		.type	CapSense_ReadSensorRaw, %function
 173              	CapSense_ReadSensorRaw:
 174              	.LFB9:
1049:Generated_Source\PSoC5/CapSense.c **** 
1050:Generated_Source\PSoC5/CapSense.c **** 
1051:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1052:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ReadSensorRaw
1053:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1054:Generated_Source\PSoC5/CapSense.c **** *
1055:Generated_Source\PSoC5/CapSense.c **** * Summary:
1056:Generated_Source\PSoC5/CapSense.c **** *  Returns scan sensor raw data from the CapSense_sensorRaw[] array. 
1057:Generated_Source\PSoC5/CapSense.c **** *  Each scan sensor has a unique number within the sensor array. This number 
1058:Generated_Source\PSoC5/CapSense.c **** *  is assigned by the CapSense customizer in sequence.
1059:Generated_Source\PSoC5/CapSense.c **** *
1060:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1061:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1062:Generated_Source\PSoC5/CapSense.c **** *
1063:Generated_Source\PSoC5/CapSense.c **** * Return:
1064:Generated_Source\PSoC5/CapSense.c **** *  Returns current raw data value for defined sensor number.
1065:Generated_Source\PSoC5/CapSense.c **** *
1066:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1067:Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorRaw[] - used to store sensors raw data.
1068:Generated_Source\PSoC5/CapSense.c **** *
1069:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1070:Generated_Source\PSoC5/CapSense.c **** uint16 CapSense_ReadSensorRaw(uint8 sensor) 
1071:Generated_Source\PSoC5/CapSense.c **** {
 175              		.loc 1 1071 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		@ link register save eliminated.
 180              	.LVL11:
1072:Generated_Source\PSoC5/CapSense.c ****     return (CapSense_sensorRaw[sensor]);
1073:Generated_Source\PSoC5/CapSense.c **** }
 181              		.loc 1 1073 0
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 23


 182 0000 014B     		ldr	r3, .L14
 183 0002 33F81000 		ldrh	r0, [r3, r0, lsl #1]
 184              	.LVL12:
 185 0006 7047     		bx	lr
 186              	.L15:
 187              		.align	2
 188              	.L14:
 189 0008 00000000 		.word	CapSense_sensorRaw
 190              		.cfi_endproc
 191              	.LFE9:
 192              		.size	CapSense_ReadSensorRaw, .-CapSense_ReadSensorRaw
 193              		.section	.text.CapSense_EnableSensor,"ax",%progbits
 194              		.align	2
 195              		.global	CapSense_EnableSensor
 196              		.thumb
 197              		.thumb_func
 198              		.type	CapSense_EnableSensor, %function
 199              	CapSense_EnableSensor:
 200              	.LFB11:
1074:Generated_Source\PSoC5/CapSense.c **** 
1075:Generated_Source\PSoC5/CapSense.c **** 
1076:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1077:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ClearSensors
1078:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1079:Generated_Source\PSoC5/CapSense.c **** *
1080:Generated_Source\PSoC5/CapSense.c **** * Summary:
1081:Generated_Source\PSoC5/CapSense.c **** *  Resets all sensors to the non-sampling state by sequentially disconnecting
1082:Generated_Source\PSoC5/CapSense.c **** *  all sensors from Analog MUX Bus and putting them to inactive state.
1083:Generated_Source\PSoC5/CapSense.c **** *
1084:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1085:Generated_Source\PSoC5/CapSense.c **** *  None
1086:Generated_Source\PSoC5/CapSense.c **** *
1087:Generated_Source\PSoC5/CapSense.c **** * Return:
1088:Generated_Source\PSoC5/CapSense.c **** *  None
1089:Generated_Source\PSoC5/CapSense.c **** *
1090:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1091:Generated_Source\PSoC5/CapSense.c **** void CapSense_ClearSensors(void) 
1092:Generated_Source\PSoC5/CapSense.c **** {
1093:Generated_Source\PSoC5/CapSense.c ****     uint8 i;
1094:Generated_Source\PSoC5/CapSense.c ****    
1095:Generated_Source\PSoC5/CapSense.c ****     for (i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
1096:Generated_Source\PSoC5/CapSense.c ****     {
1097:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(i);
1098:Generated_Source\PSoC5/CapSense.c ****     }
1099:Generated_Source\PSoC5/CapSense.c **** }
1100:Generated_Source\PSoC5/CapSense.c **** 
1101:Generated_Source\PSoC5/CapSense.c **** 
1102:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_IS_COMPLEX_SCANSLOTS)
1103:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1104:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_EnableScanSlot
1105:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1106:Generated_Source\PSoC5/CapSense.c ****     *
1107:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1108:Generated_Source\PSoC5/CapSense.c ****     *  Configures the selected slot to measure during the next measurement 
1109:Generated_Source\PSoC5/CapSense.c ****     *  cycle. The corresponding pin/pins are set to Analog High-Z mode and 
1110:Generated_Source\PSoC5/CapSense.c ****     *  connected to the Analog Mux Bus. This also enables the comparator function.
1111:Generated_Source\PSoC5/CapSense.c ****     *
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 24


1112:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1113:Generated_Source\PSoC5/CapSense.c ****     *  slot:  Slot number.
1114:Generated_Source\PSoC5/CapSense.c ****     *
1115:Generated_Source\PSoC5/CapSense.c ****     * Return:
1116:Generated_Source\PSoC5/CapSense.c ****     *  None
1117:Generated_Source\PSoC5/CapSense.c ****     *
1118:Generated_Source\PSoC5/CapSense.c ****     * Global Constants:
1119:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_portTable[]  - used to store the port number that pin 
1120:Generated_Source\PSoC5/CapSense.c ****     *  belongs to for every sensor.
1121:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_maskTable[]  - used to store the pin within the port for 
1122:Generated_Source\PSoC5/CapSense.c ****     *  every sensor.
1123:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_indexTable[] - used to store indexes of complex sensors.
1124:Generated_Source\PSoC5/CapSense.c ****     *  The offset and position in this array are stored in port and mask table for 
1125:Generated_Source\PSoC5/CapSense.c ****     *  complex sensors.
1126:Generated_Source\PSoC5/CapSense.c ****     *  The bit 7 (msb) is used to define the sensor type: single or complex.
1127:Generated_Source\PSoC5/CapSense.c ****     *
1128:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1129:Generated_Source\PSoC5/CapSense.c ****     void CapSense_EnableScanSlot(uint8 slot) CYREENTRANT
1130:Generated_Source\PSoC5/CapSense.c ****     {
1131:Generated_Source\PSoC5/CapSense.c ****         uint8 j;
1132:Generated_Source\PSoC5/CapSense.c ****         uint8 snsNumber;
1133:Generated_Source\PSoC5/CapSense.c ****         const uint8 CYCODE *index;
1134:Generated_Source\PSoC5/CapSense.c ****         /* Read the sensor type: single or complex */
1135:Generated_Source\PSoC5/CapSense.c ****         uint8 snsType = CapSense_portTable[slot];
1136:Generated_Source\PSoC5/CapSense.c ****         
1137:Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor is complex */
1138:Generated_Source\PSoC5/CapSense.c ****         if ((snsType & CapSense_COMPLEX_SS_FLAG) == 0u)
1139:Generated_Source\PSoC5/CapSense.c ****         {
1140:Generated_Source\PSoC5/CapSense.c ****             /* Enable sensor (signle) */
1141:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableSensor(slot);
1142:Generated_Source\PSoC5/CapSense.c ****         }
1143:Generated_Source\PSoC5/CapSense.c ****         else
1144:Generated_Source\PSoC5/CapSense.c ****         {
1145:Generated_Source\PSoC5/CapSense.c ****             /* Enable complex sensor */
1146:Generated_Source\PSoC5/CapSense.c ****             snsType &= ~CapSense_COMPLEX_SS_FLAG;
1147:Generated_Source\PSoC5/CapSense.c ****             index = &CapSense_indexTable[snsType];
1148:Generated_Source\PSoC5/CapSense.c ****             snsNumber = CapSense_maskTable[slot];
1149:Generated_Source\PSoC5/CapSense.c ****                         
1150:Generated_Source\PSoC5/CapSense.c ****             for (j=0u; j < snsNumber; j++)
1151:Generated_Source\PSoC5/CapSense.c ****             {
1152:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableSensor(index[j]);
1153:Generated_Source\PSoC5/CapSense.c ****             }
1154:Generated_Source\PSoC5/CapSense.c ****         } 
1155:Generated_Source\PSoC5/CapSense.c ****     }
1156:Generated_Source\PSoC5/CapSense.c ****     
1157:Generated_Source\PSoC5/CapSense.c ****     
1158:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1159:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_DisableScanSlot
1160:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1161:Generated_Source\PSoC5/CapSense.c ****     *
1162:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1163:Generated_Source\PSoC5/CapSense.c ****     *  Disables the selected slot. The corresponding pin/pis is/are disconnected 
1164:Generated_Source\PSoC5/CapSense.c ****     *  from the Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1165:Generated_Source\PSoC5/CapSense.c ****     *
1166:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1167:Generated_Source\PSoC5/CapSense.c ****     *  slot:  Slot number.
1168:Generated_Source\PSoC5/CapSense.c ****     *
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 25


1169:Generated_Source\PSoC5/CapSense.c ****     * Return:
1170:Generated_Source\PSoC5/CapSense.c ****     *  None
1171:Generated_Source\PSoC5/CapSense.c ****     *
1172:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1173:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_portTable[]  - used to store the port number that pin 
1174:Generated_Source\PSoC5/CapSense.c ****     *  belongs to for every sensor.
1175:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_maskTable[]  - used to store the pin within the port for 
1176:Generated_Source\PSoC5/CapSense.c ****     *  every sensor.
1177:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_indexTable[] - used to store indexes of complex sensors.
1178:Generated_Source\PSoC5/CapSense.c ****     *  The offset and position in this array are stored in port and mask table for 
1179:Generated_Source\PSoC5/CapSense.c ****     *  complex sensors.
1180:Generated_Source\PSoC5/CapSense.c ****     *  The 7bit(msb) is used to define the sensor type: single or complex.
1181:Generated_Source\PSoC5/CapSense.c ****     *
1182:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1183:Generated_Source\PSoC5/CapSense.c ****     void CapSense_DisableScanSlot(uint8 slot) CYREENTRANT
1184:Generated_Source\PSoC5/CapSense.c ****     {
1185:Generated_Source\PSoC5/CapSense.c ****         uint8 j;
1186:Generated_Source\PSoC5/CapSense.c ****         uint8 snsNumber;
1187:Generated_Source\PSoC5/CapSense.c ****         const uint8 CYCODE *index;
1188:Generated_Source\PSoC5/CapSense.c ****         /* Read the sensor type: single or complex */
1189:Generated_Source\PSoC5/CapSense.c ****         uint8 snsType = CapSense_portTable[slot];
1190:Generated_Source\PSoC5/CapSense.c ****         
1191:Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor is complex */
1192:Generated_Source\PSoC5/CapSense.c ****         if ((snsType & CapSense_COMPLEX_SS_FLAG) == 0u)
1193:Generated_Source\PSoC5/CapSense.c ****         {
1194:Generated_Source\PSoC5/CapSense.c ****             /* Disable sensor (signle) */
1195:Generated_Source\PSoC5/CapSense.c ****             CapSense_DisableSensor(slot);
1196:Generated_Source\PSoC5/CapSense.c ****         }
1197:Generated_Source\PSoC5/CapSense.c ****         else
1198:Generated_Source\PSoC5/CapSense.c ****         {
1199:Generated_Source\PSoC5/CapSense.c ****             /* Disable complex sensor */
1200:Generated_Source\PSoC5/CapSense.c ****             snsType &= ~CapSense_COMPLEX_SS_FLAG;
1201:Generated_Source\PSoC5/CapSense.c ****             index = &CapSense_indexTable[snsType];
1202:Generated_Source\PSoC5/CapSense.c ****             snsNumber = CapSense_maskTable[slot];
1203:Generated_Source\PSoC5/CapSense.c ****                         
1204:Generated_Source\PSoC5/CapSense.c ****             for (j=0u; j < snsNumber; j++)
1205:Generated_Source\PSoC5/CapSense.c ****             {
1206:Generated_Source\PSoC5/CapSense.c ****                 CapSense_DisableSensor(index[j]);
1207:Generated_Source\PSoC5/CapSense.c ****             }
1208:Generated_Source\PSoC5/CapSense.c ****         } 
1209:Generated_Source\PSoC5/CapSense.c ****     }
1210:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1211:Generated_Source\PSoC5/CapSense.c **** 
1212:Generated_Source\PSoC5/CapSense.c **** 
1213:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1214:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_EnableSensor
1215:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1216:Generated_Source\PSoC5/CapSense.c **** *
1217:Generated_Source\PSoC5/CapSense.c **** * Summary:
1218:Generated_Source\PSoC5/CapSense.c **** *  Configures the selected sensor to measure during the next measurement cycle.
1219:Generated_Source\PSoC5/CapSense.c **** *  The corresponding pins are set to Analog High-Z mode and connected to the
1220:Generated_Source\PSoC5/CapSense.c **** *  Analog Mux Bus. This also enables the comparator function.
1221:Generated_Source\PSoC5/CapSense.c **** *
1222:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1223:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1224:Generated_Source\PSoC5/CapSense.c **** *
1225:Generated_Source\PSoC5/CapSense.c **** * Return:
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 26


1226:Generated_Source\PSoC5/CapSense.c **** *  None
1227:Generated_Source\PSoC5/CapSense.c **** *
1228:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1229:Generated_Source\PSoC5/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin 
1230:Generated_Source\PSoC5/CapSense.c **** *  belongs to for every sensor.
1231:Generated_Source\PSoC5/CapSense.c **** *  CapSense_maskTable[] - used to store the pin within the port for 
1232:Generated_Source\PSoC5/CapSense.c **** *  every sensor.
1233:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csTable[]   - used to store the pointers to CAPS_SEL 
1234:Generated_Source\PSoC5/CapSense.c **** *  registers for every port.
1235:Generated_Source\PSoC5/CapSense.c **** *  CapSense_pcTable[]   - used to store the pointers to PC pin 
1236:Generated_Source\PSoC5/CapSense.c **** *  register for every sensor.
1237:Generated_Source\PSoC5/CapSense.c **** *  CapSense_amuxIndex[] - used to store corrected AMUX index when 
1238:Generated_Source\PSoC5/CapSense.c **** *  complex sensors are defeined.
1239:Generated_Source\PSoC5/CapSense.c **** *
1240:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1241:Generated_Source\PSoC5/CapSense.c **** void CapSense_EnableSensor(uint8 sensor) CYREENTRANT
1242:Generated_Source\PSoC5/CapSense.c **** {
 201              		.loc 1 1242 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              	.LVL13:
 206 0000 08B5     		push	{r3, lr}
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 3, -8
 209              		.cfi_offset 14, -4
 210              	.LVL14:
1243:Generated_Source\PSoC5/CapSense.c ****     uint8 port = CapSense_portTable[sensor];
1244:Generated_Source\PSoC5/CapSense.c ****     uint8 mask = CapSense_maskTable[sensor];
1245:Generated_Source\PSoC5/CapSense.c ****     
1246:Generated_Source\PSoC5/CapSense.c ****     #if ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1247:Generated_Source\PSoC5/CapSense.c ****          (CapSense_IS_COMPLEX_SCANSLOTS))
1248:Generated_Source\PSoC5/CapSense.c ****         uint8 amuxCh = CapSense_amuxIndex[sensor];
1249:Generated_Source\PSoC5/CapSense.c ****     #endif  /* ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1250:Generated_Source\PSoC5/CapSense.c ****             *   (CapSense_IS_COMPLEX_SCANSLOTS))
1251:Generated_Source\PSoC5/CapSense.c ****             */
1252:Generated_Source\PSoC5/CapSense.c ****     
1253:Generated_Source\PSoC5/CapSense.c ****     /* Make sensor High-Z */
1254:Generated_Source\PSoC5/CapSense.c ****     *CapSense_pcTable[sensor] = CapSense_PRT_PC_HIGHZ;
 211              		.loc 1 1254 0
 212 0002 0922     		movs	r2, #9
 213 0004 0023     		movs	r3, #0
 214 0006 1A70     		strb	r2, [r3]
1255:Generated_Source\PSoC5/CapSense.c ****     
1256:Generated_Source\PSoC5/CapSense.c ****     /* Connect to DSI output */
1257:Generated_Source\PSoC5/CapSense.c **** 	if(port == 15u)
1258:Generated_Source\PSoC5/CapSense.c **** 	{
1259:Generated_Source\PSoC5/CapSense.c **** 		port = 7u;
1260:Generated_Source\PSoC5/CapSense.c **** 	}
1261:Generated_Source\PSoC5/CapSense.c ****     *CapSense_csTable[port] |= mask;
1262:Generated_Source\PSoC5/CapSense.c ****     
1263:Generated_Source\PSoC5/CapSense.c ****     /* Connect to AMUX */
1264:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1265:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1266:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_amuxIndex[sensor]);
1267:Generated_Source\PSoC5/CapSense.c ****         #else
1268:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(sensor);
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 27


 215              		.loc 1 1268 0
 216 0008 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 217              	.LVL15:
 218 000c 08BD     		pop	{r3, pc}
 219              		.cfi_endproc
 220              	.LFE11:
 221              		.size	CapSense_EnableSensor, .-CapSense_EnableSensor
 222 000e 00BF     		.section	.text.CapSense_DisableSensor,"ax",%progbits
 223              		.align	2
 224              		.global	CapSense_DisableSensor
 225              		.thumb
 226              		.thumb_func
 227              		.type	CapSense_DisableSensor, %function
 228              	CapSense_DisableSensor:
 229              	.LFB12:
1269:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1270:Generated_Source\PSoC5/CapSense.c ****                 
1271:Generated_Source\PSoC5/CapSense.c ****     #else
1272:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1273:Generated_Source\PSoC5/CapSense.c ****             if ((amuxCh & CapSense_CHANNEL1_FLAG) == 0u)
1274:Generated_Source\PSoC5/CapSense.c ****             {
1275:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(amuxCh);
1276:Generated_Source\PSoC5/CapSense.c ****             } 
1277:Generated_Source\PSoC5/CapSense.c ****             else
1278:Generated_Source\PSoC5/CapSense.c ****             {
1279:Generated_Source\PSoC5/CapSense.c ****                 amuxCh &= ~ CapSense_CHANNEL1_FLAG;
1280:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(amuxCh);
1281:Generated_Source\PSoC5/CapSense.c ****             }
1282:Generated_Source\PSoC5/CapSense.c ****             
1283:Generated_Source\PSoC5/CapSense.c ****         #else
1284:Generated_Source\PSoC5/CapSense.c ****             if (sensor < CapSense_TOTAL_SENSOR_COUNT__CH0) 
1285:Generated_Source\PSoC5/CapSense.c ****             {
1286:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(sensor);
1287:Generated_Source\PSoC5/CapSense.c ****             } 
1288:Generated_Source\PSoC5/CapSense.c ****             else
1289:Generated_Source\PSoC5/CapSense.c ****             {
1290:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(sensor - CapSense_TOTAL_SENSOR_COUNT__CH0);
1291:Generated_Source\PSoC5/CapSense.c ****             }
1292:Generated_Source\PSoC5/CapSense.c ****             
1293:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1294:Generated_Source\PSoC5/CapSense.c ****         
1295:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */
1296:Generated_Source\PSoC5/CapSense.c **** }
1297:Generated_Source\PSoC5/CapSense.c **** 
1298:Generated_Source\PSoC5/CapSense.c **** 
1299:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1300:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_DisableSensor
1301:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1302:Generated_Source\PSoC5/CapSense.c **** *
1303:Generated_Source\PSoC5/CapSense.c **** * Summary:
1304:Generated_Source\PSoC5/CapSense.c **** *  Disables the selected sensor. The corresponding pin is disconnected from the
1305:Generated_Source\PSoC5/CapSense.c **** *  Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1306:Generated_Source\PSoC5/CapSense.c **** *
1307:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1308:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number
1309:Generated_Source\PSoC5/CapSense.c **** *
1310:Generated_Source\PSoC5/CapSense.c **** * Return:
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 28


1311:Generated_Source\PSoC5/CapSense.c **** *  None
1312:Generated_Source\PSoC5/CapSense.c **** *
1313:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1314:Generated_Source\PSoC5/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin 
1315:Generated_Source\PSoC5/CapSense.c **** *  belongs to for every sensor.
1316:Generated_Source\PSoC5/CapSense.c **** *  CapSense_maskTable[] - used to store the pin within the port for 
1317:Generated_Source\PSoC5/CapSense.c **** *  every sensor.
1318:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csTable[]   - used to store the pointers to CAPS_SEL 
1319:Generated_Source\PSoC5/CapSense.c **** *  registers for every port.
1320:Generated_Source\PSoC5/CapSense.c **** *  CapSense_pcTable[]   - used to store the pointers to PC pin 
1321:Generated_Source\PSoC5/CapSense.c **** *  register for every sensor.
1322:Generated_Source\PSoC5/CapSense.c **** *  CapSense_amuxIndex[] - used to store corrected AMUX index when 
1323:Generated_Source\PSoC5/CapSense.c **** *  complex sensors are defeined.
1324:Generated_Source\PSoC5/CapSense.c **** *
1325:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1326:Generated_Source\PSoC5/CapSense.c **** void CapSense_DisableSensor(uint8 sensor) CYREENTRANT
1327:Generated_Source\PSoC5/CapSense.c **** {
 230              		.loc 1 1327 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234              	.LVL16:
 235 0000 08B5     		push	{r3, lr}
 236              		.cfi_def_cfa_offset 8
 237              		.cfi_offset 3, -8
 238              		.cfi_offset 14, -4
 239              	.LVL17:
1328:Generated_Source\PSoC5/CapSense.c ****     uint8 port = CapSense_portTable[sensor];
1329:Generated_Source\PSoC5/CapSense.c ****     uint8 mask = CapSense_maskTable[sensor];
1330:Generated_Source\PSoC5/CapSense.c ****     
1331:Generated_Source\PSoC5/CapSense.c ****     #if ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1332:Generated_Source\PSoC5/CapSense.c ****          (CapSense_IS_COMPLEX_SCANSLOTS))
1333:Generated_Source\PSoC5/CapSense.c ****         uint8 amuxCh = CapSense_amuxIndex[sensor];
1334:Generated_Source\PSoC5/CapSense.c ****     #endif  /* ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1335:Generated_Source\PSoC5/CapSense.c ****             *   (CapSense_IS_COMPLEX_SCANSLOTS))
1336:Generated_Source\PSoC5/CapSense.c ****             */
1337:Generated_Source\PSoC5/CapSense.c ****     
1338:Generated_Source\PSoC5/CapSense.c ****     /* Disconnect from AMUX */
1339:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1340:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1341:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Disconnect(CapSense_amuxIndex[sensor]);
1342:Generated_Source\PSoC5/CapSense.c ****         #else
1343:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Disconnect(sensor);
 240              		.loc 1 1343 0
 241 0002 FFF7FEFF 		bl	CapSense_AMuxCH0_Unset
 242              	.LVL18:
1344:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1345:Generated_Source\PSoC5/CapSense.c ****                 
1346:Generated_Source\PSoC5/CapSense.c ****     #else
1347:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1348:Generated_Source\PSoC5/CapSense.c ****             if ((amuxCh & CapSense_CHANNEL1_FLAG) == 0u)
1349:Generated_Source\PSoC5/CapSense.c ****             {
1350:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(amuxCh);
1351:Generated_Source\PSoC5/CapSense.c ****             } 
1352:Generated_Source\PSoC5/CapSense.c ****             else
1353:Generated_Source\PSoC5/CapSense.c ****             {
1354:Generated_Source\PSoC5/CapSense.c ****                 amuxCh &= ~ CapSense_CHANNEL1_FLAG;
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 29


1355:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(amuxCh);
1356:Generated_Source\PSoC5/CapSense.c ****             }
1357:Generated_Source\PSoC5/CapSense.c ****             
1358:Generated_Source\PSoC5/CapSense.c ****         #else
1359:Generated_Source\PSoC5/CapSense.c ****             if (sensor < CapSense_TOTAL_SENSOR_COUNT__CH0) 
1360:Generated_Source\PSoC5/CapSense.c ****             {
1361:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(sensor);
1362:Generated_Source\PSoC5/CapSense.c ****             } 
1363:Generated_Source\PSoC5/CapSense.c ****             else
1364:Generated_Source\PSoC5/CapSense.c ****             {
1365:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(sensor - CapSense_TOTAL_SENSOR_COUNT__CH0);
1366:Generated_Source\PSoC5/CapSense.c ****             }
1367:Generated_Source\PSoC5/CapSense.c ****             
1368:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1369:Generated_Source\PSoC5/CapSense.c ****         
1370:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
1371:Generated_Source\PSoC5/CapSense.c ****     
1372:Generated_Source\PSoC5/CapSense.c ****     /* Disconnect from DSI output */
1373:Generated_Source\PSoC5/CapSense.c **** 	if(port == 15u)
1374:Generated_Source\PSoC5/CapSense.c **** 	{
1375:Generated_Source\PSoC5/CapSense.c **** 		port = 7u;
1376:Generated_Source\PSoC5/CapSense.c **** 	}
1377:Generated_Source\PSoC5/CapSense.c ****     *CapSense_csTable[port] &= (uint8)~mask;
1378:Generated_Source\PSoC5/CapSense.c ****     
1379:Generated_Source\PSoC5/CapSense.c ****     /* Set sensor to inactive state */
1380:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_GND)
1381:Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_GND;
 243              		.loc 1 1381 0
 244 0006 0822     		movs	r2, #8
 245 0008 0023     		movs	r3, #0
 246 000a 1A70     		strb	r2, [r3]
 247 000c 08BD     		pop	{r3, pc}
 248              		.cfi_endproc
 249              	.LFE12:
 250              		.size	CapSense_DisableSensor, .-CapSense_DisableSensor
 251 000e 00BF     		.section	.text.CapSense_ClearSensors,"ax",%progbits
 252              		.align	2
 253              		.global	CapSense_ClearSensors
 254              		.thumb
 255              		.thumb_func
 256              		.type	CapSense_ClearSensors, %function
 257              	CapSense_ClearSensors:
 258              	.LFB10:
1092:Generated_Source\PSoC5/CapSense.c ****     uint8 i;
 259              		.loc 1 1092 0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263 0000 10B5     		push	{r4, lr}
 264              		.cfi_def_cfa_offset 8
 265              		.cfi_offset 4, -8
 266              		.cfi_offset 14, -4
 267              	.LVL19:
1095:Generated_Source\PSoC5/CapSense.c ****     {
 268              		.loc 1 1095 0
 269 0002 0024     		movs	r4, #0
 270 0004 04E0     		b	.L21
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 30


 271              	.LVL20:
 272              	.L22:
1097:Generated_Source\PSoC5/CapSense.c ****     }
 273              		.loc 1 1097 0 discriminator 3
 274 0006 2046     		mov	r0, r4
 275 0008 FFF7FEFF 		bl	CapSense_DisableSensor
 276              	.LVL21:
1095:Generated_Source\PSoC5/CapSense.c ****     {
 277              		.loc 1 1095 0 discriminator 3
 278 000c 0134     		adds	r4, r4, #1
 279              	.LVL22:
 280 000e E4B2     		uxtb	r4, r4
 281              	.LVL23:
 282              	.L21:
1095:Generated_Source\PSoC5/CapSense.c ****     {
 283              		.loc 1 1095 0 is_stmt 0 discriminator 1
 284 0010 002C     		cmp	r4, #0
 285 0012 F8D0     		beq	.L22
1099:Generated_Source\PSoC5/CapSense.c **** 
 286              		.loc 1 1099 0 is_stmt 1
 287 0014 10BD     		pop	{r4, pc}
 288              		.cfi_endproc
 289              	.LFE10:
 290              		.size	CapSense_ClearSensors, .-CapSense_ClearSensors
 291 0016 00BF     		.section	.text.CapSense_Stop,"ax",%progbits
 292              		.align	2
 293              		.global	CapSense_Stop
 294              		.thumb
 295              		.thumb_func
 296              		.type	CapSense_Stop, %function
 297              	CapSense_Stop:
 298              	.LFB3:
 512:Generated_Source\PSoC5/CapSense.c ****     /* Stop Capsensing */
 299              		.loc 1 512 0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303 0000 10B5     		push	{r4, lr}
 304              		.cfi_def_cfa_offset 8
 305              		.cfi_offset 4, -8
 306              		.cfi_offset 14, -4
 514:Generated_Source\PSoC5/CapSense.c ****     
 307              		.loc 1 514 0
 308 0002 154C     		ldr	r4, .L26
 309 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 310 0006 03F0FD03 		and	r3, r3, #253
 311 000a 2370     		strb	r3, [r4]
 517:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 312              		.loc 1 517 0
 313 000c 0122     		movs	r2, #1
 314 000e 134B     		ldr	r3, .L26+4
 315 0010 1A60     		str	r2, [r3]
 523:Generated_Source\PSoC5/CapSense.c ****     
 316              		.loc 1 523 0
 317 0012 FFF7FEFF 		bl	CapSense_ClearSensors
 318              	.LVL24:
 537:Generated_Source\PSoC5/CapSense.c ****     
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 31


 319              		.loc 1 537 0
 320 0016 124A     		ldr	r2, .L26+8
 321 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 322 001a 03F0DF03 		and	r3, r3, #223
 323 001e 1370     		strb	r3, [r2]
 576:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 324              		.loc 1 576 0
 325 0020 FFF7FEFF 		bl	CapSense_IntClock_Stop
 326              	.LVL25:
 580:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 327              		.loc 1 580 0
 328 0024 FFF7FEFF 		bl	CapSense_CompCH0_Stop
 329              	.LVL26:
 582:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 330              		.loc 1 582 0
 331 0028 FFF7FEFF 		bl	CapSense_IdacCH0_Stop
 332              	.LVL27:
 604:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_ACT_PWR_EN);
 333              		.loc 1 604 0
 334 002c 0D4A     		ldr	r2, .L26+12
 335 002e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 336 0030 03F0FE03 		and	r3, r3, #254
 337 0034 1370     		strb	r3, [r2]
 605:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_STBY_PWR_EN);
 338              		.loc 1 605 0
 339 0036 A2F5A652 		sub	r2, r2, #5312
 340 003a 073A     		subs	r2, r2, #7
 341 003c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 342 003e 03F0DF03 		and	r3, r3, #223
 343 0042 1370     		strb	r3, [r2]
 606:Generated_Source\PSoC5/CapSense.c ****         
 344              		.loc 1 606 0
 345 0044 1032     		adds	r2, r2, #16
 346 0046 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 347 0048 03F0DF03 		and	r3, r3, #223
 348 004c 1370     		strb	r3, [r2]
 616:Generated_Source\PSoC5/CapSense.c **** }
 349              		.loc 1 616 0
 350 004e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 351 0050 03F07F03 		and	r3, r3, #127
 352 0054 2370     		strb	r3, [r4]
 353 0056 10BD     		pop	{r4, pc}
 354              	.L27:
 355              		.align	2
 356              	.L26:
 357 0058 7B640040 		.word	1073767547
 358 005c 80E100E0 		.word	-536813184
 359 0060 9C640040 		.word	1073767580
 360 0064 72580040 		.word	1073764466
 361              		.cfi_endproc
 362              	.LFE3:
 363              		.size	CapSense_Stop, .-CapSense_Stop
 364              		.section	.text.CapSense_PostScan,"ax",%progbits
 365              		.align	2
 366              		.global	CapSense_PostScan
 367              		.thumb
 368              		.thumb_func
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 32


 369              		.type	CapSense_PostScan, %function
 370              	CapSense_PostScan:
 371              	.LFB14:
1382:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_HIGHZ)
1383:Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_HIGHZ;
1384:Generated_Source\PSoC5/CapSense.c ****     #else
1385:Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_SHIELD;
1386:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_GND) */
1387:Generated_Source\PSoC5/CapSense.c **** }
1388:Generated_Source\PSoC5/CapSense.c **** 
1389:Generated_Source\PSoC5/CapSense.c **** 
1390:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1391:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_PreScan
1392:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1393:Generated_Source\PSoC5/CapSense.c **** *
1394:Generated_Source\PSoC5/CapSense.c **** * Summary:
1395:Generated_Source\PSoC5/CapSense.c **** *  Set required settings, enable sensor, remove Vref from AMUX and start the 
1396:Generated_Source\PSoC5/CapSense.c **** *  scanning process of the sensor.
1397:Generated_Source\PSoC5/CapSense.c **** *
1398:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1399:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1400:Generated_Source\PSoC5/CapSense.c **** *
1401:Generated_Source\PSoC5/CapSense.c **** * Return:
1402:Generated_Source\PSoC5/CapSense.c **** *  None
1403:Generated_Source\PSoC5/CapSense.c **** *
1404:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1405:Generated_Source\PSoC5/CapSense.c **** *  CapSense_rbTable[] - used to store pointers to PC pin registers for 
1406:Generated_Source\PSoC5/CapSense.c **** *  every bleed resistor (Rb). Only available when Current Source is External 
1407:Generated_Source\PSoC5/CapSense.c **** *  resistor.
1408:Generated_Source\PSoC5/CapSense.c **** *
1409:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1410:Generated_Source\PSoC5/CapSense.c **** void CapSense_PreScan(uint8 sensor) CYREENTRANT
1411:Generated_Source\PSoC5/CapSense.c **** {
1412:Generated_Source\PSoC5/CapSense.c ****     /* Set Sensor Settings */
1413:Generated_Source\PSoC5/CapSense.c ****     CapSense_SetScanSlotSettings(sensor);
1414:Generated_Source\PSoC5/CapSense.c ****     
1415:Generated_Source\PSoC5/CapSense.c ****     /* Place disable interrupts here to eliminate influence on start of scanning */
1416:Generated_Source\PSoC5/CapSense.c ****     /* `#START CapSense_PreScan_DisableInt` */
1417:Generated_Source\PSoC5/CapSense.c **** 
1418:Generated_Source\PSoC5/CapSense.c ****     /* `#END` */
1419:Generated_Source\PSoC5/CapSense.c ****     
1420:Generated_Source\PSoC5/CapSense.c ****     #ifdef CapSense_PRE_SCAN_DISABLE_INT_CALLBACK
1421:Generated_Source\PSoC5/CapSense.c ****     CapSense_PreScan_DisableInt_Callback();
1422:Generated_Source\PSoC5/CapSense.c ****     #endif /* CapSense_PRE_SCAN_DISABLE_INT_CALLBACK */
1423:Generated_Source\PSoC5/CapSense.c **** 
1424:Generated_Source\PSoC5/CapSense.c ****     /* Resets digital and pre-charge clocks */
1425:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_SYNC_EN;
1426:Generated_Source\PSoC5/CapSense.c ****         
1427:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1428:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1429:Generated_Source\PSoC5/CapSense.c ****             /* Disable Vref from AMux */
1430:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1431:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_VREF_CHANNEL);
1432:Generated_Source\PSoC5/CapSense.c ****             #else
1433:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1434:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
1435:Generated_Source\PSoC5/CapSense.c **** 
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 33


1436:Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1437:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1438:Generated_Source\PSoC5/CapSense.c ****             
1439:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1440:Generated_Source\PSoC5/CapSense.c ****             /* Connect IDAC */
1441:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
1442:Generated_Source\PSoC5/CapSense.c ****             
1443:Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1444:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1445:Generated_Source\PSoC5/CapSense.c ****                 
1446:Generated_Source\PSoC5/CapSense.c ****             /* Disable CapSense Buffer */
1447:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG &= (uint8)~CapSense_CSBUF_ENABLE;
1448:Generated_Source\PSoC5/CapSense.c ****             
1449:Generated_Source\PSoC5/CapSense.c ****         #else
1450:Generated_Source\PSoC5/CapSense.c ****             /* Connect DSI output to Rb */
1451:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] |= CapSense_BYP_MASK;
1452:Generated_Source\PSoC5/CapSense.c ****             
1453:Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1454:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1455:Generated_Source\PSoC5/CapSense.c ****              
1456:Generated_Source\PSoC5/CapSense.c ****             /* Disable CapSense Buffer */
1457:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1458:Generated_Source\PSoC5/CapSense.c ****         
1459:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1460:Generated_Source\PSoC5/CapSense.c ****         
1461:Generated_Source\PSoC5/CapSense.c ****     #else
1462:Generated_Source\PSoC5/CapSense.c **** 
1463:Generated_Source\PSoC5/CapSense.c ****         if((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) != 0u)
1464:Generated_Source\PSoC5/CapSense.c ****         {
1465:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1466:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1467:Generated_Source\PSoC5/CapSense.c ****                 #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1468:Generated_Source\PSoC5/CapSense.c ****                     CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_VREF_CHANNEL);
1469:Generated_Source\PSoC5/CapSense.c ****                 #else
1470:Generated_Source\PSoC5/CapSense.c ****                     CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1471:Generated_Source\PSoC5/CapSense.c ****                 #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
1472:Generated_Source\PSoC5/CapSense.c ****                 
1473:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1474:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1475:Generated_Source\PSoC5/CapSense.c ****                 
1476:Generated_Source\PSoC5/CapSense.c ****             #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1477:Generated_Source\PSoC5/CapSense.c ****                 /* Connect IDAC */
1478:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
1479:Generated_Source\PSoC5/CapSense.c ****                 
1480:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1481:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1482:Generated_Source\PSoC5/CapSense.c ****                     
1483:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1484:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1485:Generated_Source\PSoC5/CapSense.c ****                 
1486:Generated_Source\PSoC5/CapSense.c ****             #else
1487:Generated_Source\PSoC5/CapSense.c ****                 /* Connect DSI output to Rb */
1488:Generated_Source\PSoC5/CapSense.c ****                 *CapSense_rbTable[CapSense_extRbCh0Cur] |= CapSense_BYP_MASK;
1489:Generated_Source\PSoC5/CapSense.c ****                 
1490:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1491:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1492:Generated_Source\PSoC5/CapSense.c ****                     
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 34


1493:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1494:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1495:Generated_Source\PSoC5/CapSense.c ****             
1496:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1497:Generated_Source\PSoC5/CapSense.c ****             
1498:Generated_Source\PSoC5/CapSense.c ****         }
1499:Generated_Source\PSoC5/CapSense.c ****         
1500:Generated_Source\PSoC5/CapSense.c ****         if((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) != 0u)
1501:Generated_Source\PSoC5/CapSense.c ****         {
1502:Generated_Source\PSoC5/CapSense.c ****             sensor += CapSense_TOTAL_SENSOR_COUNT__CH0;
1503:Generated_Source\PSoC5/CapSense.c ****             
1504:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1505:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1506:Generated_Source\PSoC5/CapSense.c ****                 #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1507:Generated_Source\PSoC5/CapSense.c ****                    CapSense_AMuxCH1_Disconnect(CapSense_AMuxCH1_VREF_CHANNEL);
1508:Generated_Source\PSoC5/CapSense.c ****                 #else 
1509:Generated_Source\PSoC5/CapSense.c ****                     CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1510:Generated_Source\PSoC5/CapSense.c ****                 #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1511:Generated_Source\PSoC5/CapSense.c ****                 
1512:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1513:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1514:Generated_Source\PSoC5/CapSense.c ****                 
1515:Generated_Source\PSoC5/CapSense.c ****             #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1516:Generated_Source\PSoC5/CapSense.c ****                 /* Connect IDAC */
1517:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_IDAC_CHANNEL);
1518:Generated_Source\PSoC5/CapSense.c ****                 
1519:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1520:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1521:Generated_Source\PSoC5/CapSense.c ****                     
1522:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1523:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1524:Generated_Source\PSoC5/CapSense.c ****                 
1525:Generated_Source\PSoC5/CapSense.c ****             #else
1526:Generated_Source\PSoC5/CapSense.c ****                 /* Connect DSI output to Rb */
1527:Generated_Source\PSoC5/CapSense.c ****                 *CapSense_rbTable[CapSense_extRbCh1Cur] |= CapSense_BYP_MASK;
1528:Generated_Source\PSoC5/CapSense.c ****                 
1529:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1530:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1531:Generated_Source\PSoC5/CapSense.c ****                 
1532:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1533:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1534:Generated_Source\PSoC5/CapSense.c ****             
1535:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1536:Generated_Source\PSoC5/CapSense.c ****         }
1537:Generated_Source\PSoC5/CapSense.c ****     
1538:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN) */
1539:Generated_Source\PSoC5/CapSense.c ****     
1540:Generated_Source\PSoC5/CapSense.c ****     /* Start measurament, pre-charge clocks are running and PRS as well */
1541:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_START;
1542:Generated_Source\PSoC5/CapSense.c ****     
1543:Generated_Source\PSoC5/CapSense.c ****     /* Place enable interrupts here to eliminate influence on start of scanning */
1544:Generated_Source\PSoC5/CapSense.c ****     /* `#START CapSense_PreScan_EnableInt` */
1545:Generated_Source\PSoC5/CapSense.c **** 
1546:Generated_Source\PSoC5/CapSense.c ****     /* `#END` */
1547:Generated_Source\PSoC5/CapSense.c **** 
1548:Generated_Source\PSoC5/CapSense.c ****     #ifdef CapSense_PRE_SCAN_ENABLE_INT_CALLBACK
1549:Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan_EnableInt_Callback();
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 35


1550:Generated_Source\PSoC5/CapSense.c ****     #endif /* CapSense_PRE_SCAN_ENABLE_INT_CALLBACK */
1551:Generated_Source\PSoC5/CapSense.c **** }
1552:Generated_Source\PSoC5/CapSense.c **** 
1553:Generated_Source\PSoC5/CapSense.c **** 
1554:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1555:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1556:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScan
1557:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1558:Generated_Source\PSoC5/CapSense.c ****     *
1559:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1560:Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1561:Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1562:Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1563:Generated_Source\PSoC5/CapSense.c ****     *  Only one channel designs.
1564:Generated_Source\PSoC5/CapSense.c ****     *
1565:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1566:Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1567:Generated_Source\PSoC5/CapSense.c ****     *
1568:Generated_Source\PSoC5/CapSense.c ****     * Return:
1569:Generated_Source\PSoC5/CapSense.c ****     *  None
1570:Generated_Source\PSoC5/CapSense.c ****     *
1571:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1572:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1573:Generated_Source\PSoC5/CapSense.c ****     *
1574:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1575:Generated_Source\PSoC5/CapSense.c ****     *  No
1576:Generated_Source\PSoC5/CapSense.c ****     *
1577:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1578:Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScan(uint8 sensor) CYREENTRANT
1579:Generated_Source\PSoC5/CapSense.c ****     {
 372              		.loc 1 1579 0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 0
 375              		@ frame_needed = 0, uses_anonymous_args = 0
 376              	.LVL28:
 377 0000 10B5     		push	{r4, lr}
 378              		.cfi_def_cfa_offset 8
 379              		.cfi_offset 4, -8
 380              		.cfi_offset 14, -4
1580:Generated_Source\PSoC5/CapSense.c ****         /* Stop Capsensing and rearm sync */
1581:Generated_Source\PSoC5/CapSense.c ****         CapSense_CONTROL_REG &= (uint8)~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
 381              		.loc 1 1581 0
 382 0002 0E4A     		ldr	r2, .L30
 383 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 384 0006 03F0FC03 		and	r3, r3, #252
 385 000a 1370     		strb	r3, [r2]
1582:Generated_Source\PSoC5/CapSense.c ****         
1583:Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1584:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
1585:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1586:Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH0_COUNTER_PTR);
1587:Generated_Source\PSoC5/CapSense.c ****         #else
1588:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH0_COUNTER_HI_REG << 8u);
 386              		.loc 1 1588 0
 387 000c 0C4B     		ldr	r3, .L30+4
 388 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 389 0010 1B02     		lsls	r3, r3, #8
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 36


 390 0012 0C49     		ldr	r1, .L30+8
 391 0014 21F81030 		strh	r3, [r1, r0, lsl #1]	@ movhi
1589:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH0_COUNTER_LO_REG;
 392              		.loc 1 1589 0
 393 0018 8D32     		adds	r2, r2, #141
 394 001a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 395 001c 1343     		orrs	r3, r3, r2
1590:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE -
 396              		.loc 1 1590 0
 397 001e DB43     		mvns	r3, r3
 398 0020 21F81030 		strh	r3, [r1, r0, lsl #1]	@ movhi
1591:Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1592:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION == CapSense_MEASURE_IMPLEMENTATION_FF) */
1593:Generated_Source\PSoC5/CapSense.c ****         
1594:Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1595:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
 399              		.loc 1 1595 0
 400 0024 FFF7FEFF 		bl	CapSense_DisableSensor
 401              	.LVL29:
1596:Generated_Source\PSoC5/CapSense.c ****         
1597:Generated_Source\PSoC5/CapSense.c ****         #if(CapSense_CURRENT_SOURCE)
1598:Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1599:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 402              		.loc 1 1599 0
 403 0028 0020     		movs	r0, #0
 404 002a FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 405              	.LVL30:
1600:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1601:Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1602:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_IDAC_CHANNEL);
1603:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1604:Generated_Source\PSoC5/CapSense.c ****         #else
1605:Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1606:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] &= ~CapSense_BYP_MASK; 
1607:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1608:Generated_Source\PSoC5/CapSense.c ****             
1609:Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1610:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1611:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
1612:Generated_Source\PSoC5/CapSense.c ****         #else
1613:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 406              		.loc 1 1613 0
 407 002e 064A     		ldr	r2, .L30+12
 408 0030 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 409 0032 43F00103 		orr	r3, r3, #1
 410 0036 1370     		strb	r3, [r2]
 411 0038 10BD     		pop	{r4, pc}
 412              	.L31:
 413 003a 00BF     		.align	2
 414              	.L30:
 415 003c 7B640040 		.word	1073767547
 416 0040 18650040 		.word	1073767704
 417 0044 00000000 		.word	CapSense_sensorRaw
 418 0048 72580040 		.word	1073764466
 419              		.cfi_endproc
 420              	.LFE14:
 421              		.size	CapSense_PostScan, .-CapSense_PostScan
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 37


 422              		.section	.text.CapSense_SetPrescaler,"ax",%progbits
 423              		.align	2
 424              		.global	CapSense_SetPrescaler
 425              		.thumb
 426              		.thumb_func
 427              		.type	CapSense_SetPrescaler, %function
 428              	CapSense_SetPrescaler:
 429              	.LFB15:
1614:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1615:Generated_Source\PSoC5/CapSense.c ****     }
1616:Generated_Source\PSoC5/CapSense.c ****     
1617:Generated_Source\PSoC5/CapSense.c **** #else
1618:Generated_Source\PSoC5/CapSense.c **** 
1619:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1620:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScan
1621:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1622:Generated_Source\PSoC5/CapSense.c ****     *
1623:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1624:Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1625:Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1626:Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1627:Generated_Source\PSoC5/CapSense.c ****     *  Only used for channel 0 in two channes designs.
1628:Generated_Source\PSoC5/CapSense.c ****     *
1629:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1630:Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1631:Generated_Source\PSoC5/CapSense.c ****     *
1632:Generated_Source\PSoC5/CapSense.c ****     * Return:
1633:Generated_Source\PSoC5/CapSense.c ****     *  None
1634:Generated_Source\PSoC5/CapSense.c ****     *
1635:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1636:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1637:Generated_Source\PSoC5/CapSense.c ****     *
1638:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1639:Generated_Source\PSoC5/CapSense.c ****     *  No
1640:Generated_Source\PSoC5/CapSense.c ****     *
1641:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1642:Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScanCh0(uint8 sensor) CYREENTRANT
1643:Generated_Source\PSoC5/CapSense.c ****     {
1644:Generated_Source\PSoC5/CapSense.c ****         if (((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) == 0u) && 
1645:Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) == 0u)) 
1646:Generated_Source\PSoC5/CapSense.c ****         {
1647:Generated_Source\PSoC5/CapSense.c ****             /* Stop Capsensing and rearm sync */
1648:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
1649:Generated_Source\PSoC5/CapSense.c ****         }
1650:Generated_Source\PSoC5/CapSense.c ****         
1651:Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1652:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
1653:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1654:Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH0_COUNTER_PTR);
1655:Generated_Source\PSoC5/CapSense.c ****         #else
1656:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH0_COUNTER_HI_REG << 8u);
1657:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH0_COUNTER_LO_REG;
1658:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1659:Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1660:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)*/
1661:Generated_Source\PSoC5/CapSense.c ****         
1662:Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 38


1663:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
1664:Generated_Source\PSoC5/CapSense.c ****         
1665:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
1666:Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1667:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
1668:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1669:Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1670:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_IDAC_CHANNEL);
1671:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1672:Generated_Source\PSoC5/CapSense.c ****         #else
1673:Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1674:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] &= ~CapSense_BYP_MASK; 
1675:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1676:Generated_Source\PSoC5/CapSense.c ****         
1677:Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1678:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1679:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
1680:Generated_Source\PSoC5/CapSense.c ****         #else
1681:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
1682:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1683:Generated_Source\PSoC5/CapSense.c ****     }
1684:Generated_Source\PSoC5/CapSense.c ****     
1685:Generated_Source\PSoC5/CapSense.c ****     
1686:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1687:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScanCh1
1688:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1689:Generated_Source\PSoC5/CapSense.c ****     *
1690:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1691:Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1692:Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC), 
1693:Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1694:Generated_Source\PSoC5/CapSense.c ****     *  Only used for channel 1 in two channes designs.
1695:Generated_Source\PSoC5/CapSense.c ****     *
1696:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1697:Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1698:Generated_Source\PSoC5/CapSense.c ****     *
1699:Generated_Source\PSoC5/CapSense.c ****     * Return:
1700:Generated_Source\PSoC5/CapSense.c ****     *  None
1701:Generated_Source\PSoC5/CapSense.c ****     *
1702:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1703:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1704:Generated_Source\PSoC5/CapSense.c ****     *
1705:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1706:Generated_Source\PSoC5/CapSense.c ****     *  No
1707:Generated_Source\PSoC5/CapSense.c ****     *
1708:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1709:Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScanCh1(uint8 sensor) CYREENTRANT
1710:Generated_Source\PSoC5/CapSense.c ****     {
1711:Generated_Source\PSoC5/CapSense.c ****         if (((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) == 0u) && 
1712:Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) == 0u))
1713:Generated_Source\PSoC5/CapSense.c ****         {
1714:Generated_Source\PSoC5/CapSense.c ****             /* Stop Capsensing and rearm sync */
1715:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
1716:Generated_Source\PSoC5/CapSense.c ****         }
1717:Generated_Source\PSoC5/CapSense.c ****         
1718:Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1719:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 39


1720:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1721:Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH1_COUNTER_PTR);
1722:Generated_Source\PSoC5/CapSense.c ****         #else
1723:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH1_COUNTER_HI_REG << 8u);
1724:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH1_COUNTER_LO_REG;
1725:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1726:Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1727:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)*/
1728:Generated_Source\PSoC5/CapSense.c ****         
1729:Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1730:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
1731:Generated_Source\PSoC5/CapSense.c ****         
1732:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
1733:Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1734:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetValue(CapSense_TURN_OFF_IDAC);
1735:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1736:Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1737:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(CapSense_AMuxCH1_IDAC_CHANNEL);
1738:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1739:Generated_Source\PSoC5/CapSense.c ****         #else
1740:Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1741:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh1Cur] &= ~CapSense_BYP_MASK; 
1742:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1743:Generated_Source\PSoC5/CapSense.c **** 
1744:Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1745:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1746:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_VREF_CHANNEL);
1747:Generated_Source\PSoC5/CapSense.c ****         #else
1748:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
1749:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1750:Generated_Source\PSoC5/CapSense.c ****     }
1751:Generated_Source\PSoC5/CapSense.c ****     
1752:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_DESIGN_TYPE */
1753:Generated_Source\PSoC5/CapSense.c **** 
1754:Generated_Source\PSoC5/CapSense.c **** 
1755:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
1756:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1757:Generated_Source\PSoC5/CapSense.c ****     * Function Name:  CapSense_InitRb
1758:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1759:Generated_Source\PSoC5/CapSense.c ****     *
1760:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1761:Generated_Source\PSoC5/CapSense.c ****     *  Sets all Rbleed resistor to High-Z mode. The first Rbleed resistor is active
1762:Generated_Source\PSoC5/CapSense.c ****     *  while next measure.
1763:Generated_Source\PSoC5/CapSense.c ****     *  This function is available only if Current Source is External Resistor.
1764:Generated_Source\PSoC5/CapSense.c ****     *
1765:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1766:Generated_Source\PSoC5/CapSense.c ****     *  None
1767:Generated_Source\PSoC5/CapSense.c ****     *
1768:Generated_Source\PSoC5/CapSense.c ****     * Return:
1769:Generated_Source\PSoC5/CapSense.c ****     *  None
1770:Generated_Source\PSoC5/CapSense.c ****     *
1771:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************/
1772:Generated_Source\PSoC5/CapSense.c ****     void CapSense_InitRb(void) 
1773:Generated_Source\PSoC5/CapSense.c ****     {
1774:Generated_Source\PSoC5/CapSense.c ****         uint8 i;
1775:Generated_Source\PSoC5/CapSense.c ****         
1776:Generated_Source\PSoC5/CapSense.c ****         /* Disable all Rb */
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 40


1777:Generated_Source\PSoC5/CapSense.c ****         for(i = 0u; i < CapSense_TOTAL_RB_NUMBER; i++)
1778:Generated_Source\PSoC5/CapSense.c ****         {
1779:Generated_Source\PSoC5/CapSense.c ****             /* Make High-Z */
1780:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[i] = CapSense_PRT_PC_HIGHZ;
1781:Generated_Source\PSoC5/CapSense.c ****         }
1782:Generated_Source\PSoC5/CapSense.c ****     }
1783:Generated_Source\PSoC5/CapSense.c ****     
1784:Generated_Source\PSoC5/CapSense.c ****     
1785:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1786:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetRBleed
1787:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1788:Generated_Source\PSoC5/CapSense.c ****     *
1789:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1790:Generated_Source\PSoC5/CapSense.c ****     *  Sets the pin to use for the bleed resistor (Rb) connection. This function
1791:Generated_Source\PSoC5/CapSense.c ****     *  can be called at runtime to select the current Rb pin setting from those 
1792:Generated_Source\PSoC5/CapSense.c ****     *  defined customizer. The function overwrites the component parameter setting. 
1793:Generated_Source\PSoC5/CapSense.c ****     *  This function is available only if Current Source is External Resistor.
1794:Generated_Source\PSoC5/CapSense.c ****     * 
1795:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1796:Generated_Source\PSoC5/CapSense.c ****     *  rbleed:  Ordering number for bleed resistor terminal defined in CapSense
1797:Generated_Source\PSoC5/CapSense.c ****     *  customizer.
1798:Generated_Source\PSoC5/CapSense.c ****     *
1799:Generated_Source\PSoC5/CapSense.c ****     * Return:
1800:Generated_Source\PSoC5/CapSense.c ****     *  None
1801:Generated_Source\PSoC5/CapSense.c ****     *
1802:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1803:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_extRbCh0Cur - used to store current number of active 
1804:Generated_Source\PSoC5/CapSense.c ****     *  bleed resistor (Rb) of channel 0.
1805:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_extRbCh1Cur - used to store current number of active 
1806:Generated_Source\PSoC5/CapSense.c ****     *  bleed resistor (Rb) of channel 1.
1807:Generated_Source\PSoC5/CapSense.c ****     *  The active bleed resistor (Rb) pin will be used while next measurement  
1808:Generated_Source\PSoC5/CapSense.c ****     *  cycle.
1809:Generated_Source\PSoC5/CapSense.c ****     *
1810:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1811:Generated_Source\PSoC5/CapSense.c ****     *  No
1812:Generated_Source\PSoC5/CapSense.c ****     *
1813:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1814:Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetRBleed(uint8 rbleed) 
1815:Generated_Source\PSoC5/CapSense.c ****     {
1816:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1817:Generated_Source\PSoC5/CapSense.c ****             CapSense_extRbCh0Cur = rbleed;
1818:Generated_Source\PSoC5/CapSense.c ****             
1819:Generated_Source\PSoC5/CapSense.c ****         #else
1820:Generated_Source\PSoC5/CapSense.c ****             if(rbleed < CapSense_TOTAL_RB_NUMBER__CH0)
1821:Generated_Source\PSoC5/CapSense.c ****             {
1822:Generated_Source\PSoC5/CapSense.c ****                 CapSense_extRbCh0Cur = rbleed;
1823:Generated_Source\PSoC5/CapSense.c ****             }
1824:Generated_Source\PSoC5/CapSense.c ****             else
1825:Generated_Source\PSoC5/CapSense.c ****             {
1826:Generated_Source\PSoC5/CapSense.c ****                 CapSense_extRbCh1Cur = (rbleed - CapSense_TOTAL_RB_NUMBER__CH0);   
1827:Generated_Source\PSoC5/CapSense.c ****             }
1828:Generated_Source\PSoC5/CapSense.c ****     
1829:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */ 
1830:Generated_Source\PSoC5/CapSense.c ****     }
1831:Generated_Source\PSoC5/CapSense.c **** #endif /* CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB */ 
1832:Generated_Source\PSoC5/CapSense.c **** 
1833:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_PRESCALER_OPTIONS)
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 41


1834:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1835:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetPrescaler
1836:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1837:Generated_Source\PSoC5/CapSense.c ****     *
1838:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1839:Generated_Source\PSoC5/CapSense.c ****     *  Sets analog switch divider.
1840:Generated_Source\PSoC5/CapSense.c ****     *
1841:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1842:Generated_Source\PSoC5/CapSense.c ****     *  prescaler:  Sets prescaler divider values.
1843:Generated_Source\PSoC5/CapSense.c ****     *
1844:Generated_Source\PSoC5/CapSense.c ****     * Return:
1845:Generated_Source\PSoC5/CapSense.c ****     *  None
1846:Generated_Source\PSoC5/CapSense.c ****     *
1847:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1848:Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetPrescaler(uint8 prescaler) CYREENTRANT
1849:Generated_Source\PSoC5/CapSense.c ****     {
 430              		.loc 1 1849 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              		@ link register save eliminated.
 435              	.LVL31:
1850:Generated_Source\PSoC5/CapSense.c ****         /* Set Prescaler */
1851:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
1852:Generated_Source\PSoC5/CapSense.c ****             CapSense_PRESCALER_PERIOD_REG = prescaler;
 436              		.loc 1 1852 0
 437 0000 024B     		ldr	r3, .L33
 438 0002 1870     		strb	r0, [r3]
1853:Generated_Source\PSoC5/CapSense.c ****             CapSense_PRESCALER_COMPARE_REG = (prescaler >> 1u);
 439              		.loc 1 1853 0
 440 0004 4008     		lsrs	r0, r0, #1
 441              	.LVL32:
 442 0006 1033     		adds	r3, r3, #16
 443              	.LVL33:
 444 0008 1870     		strb	r0, [r3]
 445              	.LVL34:
 446 000a 7047     		bx	lr
 447              	.L34:
 448              		.align	2
 449              	.L33:
 450 000c 2B640040 		.word	1073767467
 451              		.cfi_endproc
 452              	.LFE15:
 453              		.size	CapSense_SetPrescaler, .-CapSense_SetPrescaler
 454              		.section	.text.CapSense_SetScanSlotSettings,"ax",%progbits
 455              		.align	2
 456              		.global	CapSense_SetScanSlotSettings
 457              		.thumb
 458              		.thumb_func
 459              		.type	CapSense_SetScanSlotSettings, %function
 460              	CapSense_SetScanSlotSettings:
 461              	.LFB5:
 804:Generated_Source\PSoC5/CapSense.c ****     uint8 widget;
 462              		.loc 1 804 0
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 0
 465              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 42


 466              	.LVL35:
 467 0000 38B5     		push	{r3, r4, r5, lr}
 468              		.cfi_def_cfa_offset 16
 469              		.cfi_offset 3, -16
 470              		.cfi_offset 4, -12
 471              		.cfi_offset 5, -8
 472              		.cfi_offset 14, -4
 473 0002 0446     		mov	r4, r0
 474              	.LVL36:
 813:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 475              		.loc 1 813 0
 476 0004 064D     		ldr	r5, .L37
 477 0006 2B18     		adds	r3, r5, r0
 478 0008 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 479              	.LVL37:
 480 000a FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 481              	.LVL38:
 821:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 482              		.loc 1 821 0
 483 000e 2A7A     		ldrb	r2, [r5, #8]	@ zero_extendqisi2
 484 0010 044B     		ldr	r3, .L37+4
 485 0012 1A70     		strb	r2, [r3]
 826:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
 486              		.loc 1 826 0
 487 0014 044B     		ldr	r3, .L37+8
 488 0016 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 489 0018 FFF7FEFF 		bl	CapSense_SetPrescaler
 490              	.LVL39:
 491 001c 38BD     		pop	{r3, r4, r5, pc}
 492              	.L38:
 493 001e 00BF     		.align	2
 494              	.L37:
 495 0020 00000000 		.word	.LANCHOR0
 496 0024 5B650040 		.word	1073767771
 497 0028 00000000 		.word	CapSense_analogSwitchDivider
 498              		.cfi_endproc
 499              	.LFE5:
 500              		.size	CapSense_SetScanSlotSettings, .-CapSense_SetScanSlotSettings
 501              		.section	.text.CapSense_PreScan,"ax",%progbits
 502              		.align	2
 503              		.global	CapSense_PreScan
 504              		.thumb
 505              		.thumb_func
 506              		.type	CapSense_PreScan, %function
 507              	CapSense_PreScan:
 508              	.LFB13:
1411:Generated_Source\PSoC5/CapSense.c ****     /* Set Sensor Settings */
 509              		.loc 1 1411 0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 0
 512              		@ frame_needed = 0, uses_anonymous_args = 0
 513              	.LVL40:
 514 0000 38B5     		push	{r3, r4, r5, lr}
 515              		.cfi_def_cfa_offset 16
 516              		.cfi_offset 3, -16
 517              		.cfi_offset 4, -12
 518              		.cfi_offset 5, -8
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 43


 519              		.cfi_offset 14, -4
 520 0002 0546     		mov	r5, r0
1413:Generated_Source\PSoC5/CapSense.c ****     
 521              		.loc 1 1413 0
 522 0004 FFF7FEFF 		bl	CapSense_SetScanSlotSettings
 523              	.LVL41:
1425:Generated_Source\PSoC5/CapSense.c ****         
 524              		.loc 1 1425 0
 525 0008 084C     		ldr	r4, .L41
 526 000a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 527 000c 43F00103 		orr	r3, r3, #1
 528 0010 2370     		strb	r3, [r4]
1433:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
 529              		.loc 1 1433 0
 530 0012 074A     		ldr	r2, .L41+4
 531 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 532 0016 03F0FE03 		and	r3, r3, #254
 533 001a 1370     		strb	r3, [r2]
1437:Generated_Source\PSoC5/CapSense.c ****             
 534              		.loc 1 1437 0
 535 001c 2846     		mov	r0, r5
 536 001e FFF7FEFF 		bl	CapSense_EnableSensor
 537              	.LVL42:
1541:Generated_Source\PSoC5/CapSense.c ****     
 538              		.loc 1 1541 0
 539 0022 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 540 0024 43F00203 		orr	r3, r3, #2
 541 0028 2370     		strb	r3, [r4]
 542 002a 38BD     		pop	{r3, r4, r5, pc}
 543              	.L42:
 544              		.align	2
 545              	.L41:
 546 002c 7B640040 		.word	1073767547
 547 0030 72580040 		.word	1073764466
 548              		.cfi_endproc
 549              	.LFE13:
 550              		.size	CapSense_PreScan, .-CapSense_PreScan
 551              		.section	.text.CapSense_ScanSensor,"ax",%progbits
 552              		.align	2
 553              		.global	CapSense_ScanSensor
 554              		.thumb
 555              		.thumb_func
 556              		.type	CapSense_ScanSensor, %function
 557              	CapSense_ScanSensor:
 558              	.LFB6:
 916:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 559              		.loc 1 916 0
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 0
 562              		@ frame_needed = 0, uses_anonymous_args = 0
 563              	.LVL43:
 564 0000 08B5     		push	{r3, lr}
 565              		.cfi_def_cfa_offset 8
 566              		.cfi_offset 3, -8
 567              		.cfi_offset 14, -4
 918:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = sensor;
 568              		.loc 1 918 0
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 44


 569 0002 054B     		ldr	r3, .L45
 570 0004 0022     		movs	r2, #0
 571 0006 1A70     		strb	r2, [r3]
 919:Generated_Source\PSoC5/CapSense.c ****     
 572              		.loc 1 919 0
 573 0008 044A     		ldr	r2, .L45+4
 574 000a 1070     		strb	r0, [r2]
 923:Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan(sensor);
 575              		.loc 1 923 0
 576 000c 8122     		movs	r2, #129
 577 000e 1A70     		strb	r2, [r3]
 924:Generated_Source\PSoC5/CapSense.c ****         
 578              		.loc 1 924 0
 579 0010 FFF7FEFF 		bl	CapSense_PreScan
 580              	.LVL44:
 581 0014 08BD     		pop	{r3, pc}
 582              	.L46:
 583 0016 00BF     		.align	2
 584              	.L45:
 585 0018 00000000 		.word	CapSense_csv
 586 001c 00000000 		.word	CapSense_sensorIndex
 587              		.cfi_endproc
 588              	.LFE6:
 589              		.size	CapSense_ScanSensor, .-CapSense_ScanSensor
 590              		.section	.text.CapSense_ScanEnabledWidgets,"ax",%progbits
 591              		.align	2
 592              		.global	CapSense_ScanEnabledWidgets
 593              		.thumb
 594              		.thumb_func
 595              		.type	CapSense_ScanEnabledWidgets, %function
 596              	CapSense_ScanEnabledWidgets:
 597              	.LFB7:
 993:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 598              		.loc 1 993 0
 599              		.cfi_startproc
 600              		@ args = 0, pretend = 0, frame = 0
 601              		@ frame_needed = 0, uses_anonymous_args = 0
 602 0000 10B5     		push	{r4, lr}
 603              		.cfi_def_cfa_offset 8
 604              		.cfi_offset 4, -8
 605              		.cfi_offset 14, -4
 995:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = 0xFFu;
 606              		.loc 1 995 0
 607 0002 0022     		movs	r2, #0
 608 0004 0A4B     		ldr	r3, .L50
 609 0006 1A70     		strb	r2, [r3]
 996:Generated_Source\PSoC5/CapSense.c ****     
 610              		.loc 1 996 0
 611 0008 0A4C     		ldr	r4, .L50+4
 612 000a FF23     		movs	r3, #255
 613 000c 2370     		strb	r3, [r4]
1000:Generated_Source\PSoC5/CapSense.c **** 
 614              		.loc 1 1000 0
 615 000e 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 616 0010 FFF7FEFF 		bl	CapSense_FindNextSensor
 617              	.LVL45:
 618 0014 2070     		strb	r0, [r4]
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 45


1003:Generated_Source\PSoC5/CapSense.c ****         {
 619              		.loc 1 1003 0
 620 0016 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 621 0018 13F0FF0F 		tst	r3, #255
 622 001c 07D1     		bne	.L47
1005:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
 623              		.loc 1 1005 0
 624 001e 044A     		ldr	r2, .L50
 625 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 626 0022 43F00103 		orr	r3, r3, #1
 627 0026 1370     		strb	r3, [r2]
1006:Generated_Source\PSoC5/CapSense.c ****         }
 628              		.loc 1 1006 0
 629 0028 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 630 002a FFF7FEFF 		bl	CapSense_PreScan
 631              	.LVL46:
 632              	.L47:
 633 002e 10BD     		pop	{r4, pc}
 634              	.L51:
 635              		.align	2
 636              	.L50:
 637 0030 00000000 		.word	CapSense_csv
 638 0034 00000000 		.word	CapSense_sensorIndex
 639              		.cfi_endproc
 640              	.LFE7:
 641              		.size	CapSense_ScanEnabledWidgets, .-CapSense_ScanEnabledWidgets
 642              		.section	.text.CapSense_GetPrescaler,"ax",%progbits
 643              		.align	2
 644              		.global	CapSense_GetPrescaler
 645              		.thumb
 646              		.thumb_func
 647              		.type	CapSense_GetPrescaler, %function
 648              	CapSense_GetPrescaler:
 649              	.LFB16:
1854:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
1855:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PRESCALER_PERIOD_PTR, (uint16) prescaler);
1856:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PRESCALER_COMPARE_PTR, (uint16) (prescaler >> 1u));
1857:Generated_Source\PSoC5/CapSense.c ****         #else
1858:Generated_Source\PSoC5/CapSense.c ****             /* Do nothing = config without prescaler */
1859:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
1860:Generated_Source\PSoC5/CapSense.c ****     }
1861:Generated_Source\PSoC5/CapSense.c **** 
1862:Generated_Source\PSoC5/CapSense.c **** 
1863:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1864:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_GetPrescaler
1865:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1866:Generated_Source\PSoC5/CapSense.c ****     *
1867:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1868:Generated_Source\PSoC5/CapSense.c ****     *  Gets analog switch divider.
1869:Generated_Source\PSoC5/CapSense.c ****     *
1870:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1871:Generated_Source\PSoC5/CapSense.c ****     *  None
1872:Generated_Source\PSoC5/CapSense.c ****     *
1873:Generated_Source\PSoC5/CapSense.c ****     * Return:
1874:Generated_Source\PSoC5/CapSense.c ****     *   Returns the prescaler divider value.
1875:Generated_Source\PSoC5/CapSense.c ****     *
1876:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 46


1877:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_GetPrescaler(void) 
1878:Generated_Source\PSoC5/CapSense.c ****     {
 650              		.loc 1 1878 0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 0
 653              		@ frame_needed = 0, uses_anonymous_args = 0
 654              		@ link register save eliminated.
 655              	.LVL47:
1879:Generated_Source\PSoC5/CapSense.c ****         uint8 prescaler = 0u;
1880:Generated_Source\PSoC5/CapSense.c **** 
1881:Generated_Source\PSoC5/CapSense.c ****         /* Get Prescaler */
1882:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
1883:Generated_Source\PSoC5/CapSense.c ****             prescaler = CapSense_PRESCALER_PERIOD_REG;
 656              		.loc 1 1883 0
 657 0000 014B     		ldr	r3, .L53
 658 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 659              	.LVL48:
1884:Generated_Source\PSoC5/CapSense.c ****             
1885:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
1886:Generated_Source\PSoC5/CapSense.c ****             prescaler = (uint8) CY_GET_REG16(CapSense_PRESCALER_PERIOD_PTR);
1887:Generated_Source\PSoC5/CapSense.c ****             
1888:Generated_Source\PSoC5/CapSense.c ****         #else
1889:Generated_Source\PSoC5/CapSense.c ****             /* Do nothing = config without prescaler */
1890:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
1891:Generated_Source\PSoC5/CapSense.c ****         
1892:Generated_Source\PSoC5/CapSense.c ****         return (prescaler);
1893:Generated_Source\PSoC5/CapSense.c ****     }
 660              		.loc 1 1893 0
 661 0004 7047     		bx	lr
 662              	.L54:
 663 0006 00BF     		.align	2
 664              	.L53:
 665 0008 2B640040 		.word	1073767467
 666              		.cfi_endproc
 667              	.LFE16:
 668              		.size	CapSense_GetPrescaler, .-CapSense_GetPrescaler
 669              		.section	.text.CapSense_SetScanSpeed,"ax",%progbits
 670              		.align	2
 671              		.global	CapSense_SetScanSpeed
 672              		.thumb
 673              		.thumb_func
 674              		.type	CapSense_SetScanSpeed, %function
 675              	CapSense_SetScanSpeed:
 676              	.LFB17:
1894:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_PRESCALER_OPTIONS */
1895:Generated_Source\PSoC5/CapSense.c **** 
1896:Generated_Source\PSoC5/CapSense.c **** 
1897:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1898:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_SetScanSpeed
1899:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1900:Generated_Source\PSoC5/CapSense.c **** *
1901:Generated_Source\PSoC5/CapSense.c **** * Summary:
1902:Generated_Source\PSoC5/CapSense.c **** *  Sets ScanSpeed divider.
1903:Generated_Source\PSoC5/CapSense.c **** *
1904:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1905:Generated_Source\PSoC5/CapSense.c **** *  scanspeed:  Sets ScanSpeed divider.
1906:Generated_Source\PSoC5/CapSense.c **** *
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 47


1907:Generated_Source\PSoC5/CapSense.c **** * Return:
1908:Generated_Source\PSoC5/CapSense.c **** *  None
1909:Generated_Source\PSoC5/CapSense.c **** *
1910:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1911:Generated_Source\PSoC5/CapSense.c **** void CapSense_SetScanSpeed(uint8 scanSpeed) 
1912:Generated_Source\PSoC5/CapSense.c **** {
 677              		.loc 1 1912 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 0
 680              		@ frame_needed = 0, uses_anonymous_args = 0
 681              		@ link register save eliminated.
 682              	.LVL49:
1913:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_PERIOD_REG = scanSpeed; 
 683              		.loc 1 1913 0
 684 0000 014B     		ldr	r3, .L56
 685 0002 1870     		strb	r0, [r3]
 686 0004 7047     		bx	lr
 687              	.L57:
 688 0006 00BF     		.align	2
 689              	.L56:
 690 0008 8C640040 		.word	1073767564
 691              		.cfi_endproc
 692              	.LFE17:
 693              		.size	CapSense_SetScanSpeed, .-CapSense_SetScanSpeed
 694              		.section	.text.CapSense_SetAnalogSwitchesSource,"ax",%progbits
 695              		.align	2
 696              		.global	CapSense_SetAnalogSwitchesSource
 697              		.thumb
 698              		.thumb_func
 699              		.type	CapSense_SetAnalogSwitchesSource, %function
 700              	CapSense_SetAnalogSwitchesSource:
 701              	.LFB18:
1914:Generated_Source\PSoC5/CapSense.c **** }
1915:Generated_Source\PSoC5/CapSense.c **** 
1916:Generated_Source\PSoC5/CapSense.c **** 
1917:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_PRS_OPTIONS)
1918:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1919:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetAnalogSwitchesSource
1920:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1921:Generated_Source\PSoC5/CapSense.c ****     *
1922:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1923:Generated_Source\PSoC5/CapSense.c ****     *  Selects the Analog switches source between PRS and prescaler. It is useful
1924:Generated_Source\PSoC5/CapSense.c ****     *  for sensor capacitance determination for sensors with low self-capacitance.
1925:Generated_Source\PSoC5/CapSense.c ****     *  This function is used in auto-tuning procedure.
1926:Generated_Source\PSoC5/CapSense.c ****     *
1927:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1928:Generated_Source\PSoC5/CapSense.c ****     *  src:  analog switches source:
1929:Generated_Source\PSoC5/CapSense.c ****     *           CapSense_ANALOG_SWITCHES_SRC_PRESCALER - selects prescaler
1930:Generated_Source\PSoC5/CapSense.c ****     *           CapSense_ANALOG_SWITCHES_SRC_PRS - selects PRS
1931:Generated_Source\PSoC5/CapSense.c ****     *
1932:Generated_Source\PSoC5/CapSense.c ****     * Return:
1933:Generated_Source\PSoC5/CapSense.c ****     *  None
1934:Generated_Source\PSoC5/CapSense.c ****     *
1935:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1936:Generated_Source\PSoC5/CapSense.c ****     *  No
1937:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1938:Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetAnalogSwitchesSource(uint8 src)
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 48


1939:Generated_Source\PSoC5/CapSense.c ****                       
1940:Generated_Source\PSoC5/CapSense.c ****     {
 702              		.loc 1 1940 0
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 0
 705              		@ frame_needed = 0, uses_anonymous_args = 0
 706              		@ link register save eliminated.
 707              	.LVL50:
1941:Generated_Source\PSoC5/CapSense.c ****         if(src == CapSense_ANALOG_SWITCHES_SRC_PRESCALER)
 708              		.loc 1 1941 0
 709 0000 0128     		cmp	r0, #1
 710 0002 05D1     		bne	.L59
1942:Generated_Source\PSoC5/CapSense.c ****         {
1943:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= (uint8)~0x10u;
 711              		.loc 1 1943 0
 712 0004 054A     		ldr	r2, .L61
 713 0006 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 714 0008 03F0EF03 		and	r3, r3, #239
 715 000c 1370     		strb	r3, [r2]
 716 000e 7047     		bx	lr
 717              	.L59:
1944:Generated_Source\PSoC5/CapSense.c ****         }
1945:Generated_Source\PSoC5/CapSense.c ****         else
1946:Generated_Source\PSoC5/CapSense.c ****         {
1947:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= 0x10u;
 718              		.loc 1 1947 0
 719 0010 024A     		ldr	r2, .L61
 720 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 721 0014 43F01003 		orr	r3, r3, #16
 722 0018 1370     		strb	r3, [r2]
 723 001a 7047     		bx	lr
 724              	.L62:
 725              		.align	2
 726              	.L61:
 727 001c 7B640040 		.word	1073767547
 728              		.cfi_endproc
 729              	.LFE18:
 730              		.size	CapSense_SetAnalogSwitchesSource, .-CapSense_SetAnalogSwitchesSource
 731              		.section	.text.CapSense_Init,"ax",%progbits
 732              		.align	2
 733              		.global	CapSense_Init
 734              		.thumb
 735              		.thumb_func
 736              		.type	CapSense_Init, %function
 737              	CapSense_Init:
 738              	.LFB0:
  97:Generated_Source\PSoC5/CapSense.c ****     #if ( (CapSense_PRS_OPTIONS) || \
 739              		.loc 1 97 0
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 0
 742              		@ frame_needed = 0, uses_anonymous_args = 0
 743 0000 38B5     		push	{r3, r4, r5, lr}
 744              		.cfi_def_cfa_offset 16
 745              		.cfi_offset 3, -16
 746              		.cfi_offset 4, -12
 747              		.cfi_offset 5, -8
 748              		.cfi_offset 14, -4
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 49


 111:Generated_Source\PSoC5/CapSense.c **** 
 749              		.loc 1 111 0
 750 0002 FFF7FEFF 		bl	CapSense_ClearSensors
 751              	.LVL51:
 127:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_PRS_OPTIONS) */
 752              		.loc 1 127 0
 753 0006 0220     		movs	r0, #2
 754 0008 FFF7FEFF 		bl	CapSense_SetAnalogSwitchesSource
 755              	.LVL52:
 143:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 756              		.loc 1 143 0
 757 000c FFF7FEFF 		bl	CyEnterCriticalSection
 758              	.LVL53:
 144:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_B_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 759              		.loc 1 144 0
 760 0010 2E4A     		ldr	r2, .L65
 761 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 762 0014 43F00303 		orr	r3, r3, #3
 763 0018 1370     		strb	r3, [r2]
 145:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 764              		.loc 1 145 0
 765 001a 0132     		adds	r2, r2, #1
 766 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 767 001e 43F00303 		orr	r3, r3, #3
 768 0022 1370     		strb	r3, [r2]
 146:Generated_Source\PSoC5/CapSense.c ****         
 769              		.loc 1 146 0
 770 0024 FFF7FEFF 		bl	CyExitCriticalSection
 771              	.LVL54:
 149:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 772              		.loc 1 149 0
 773 0028 4FF43442 		mov	r2, #46080
 774 002c 284B     		ldr	r3, .L65+4
 775 002e 1A80     		strh	r2, [r3]	@ movhi
 151:Generated_Source\PSoC5/CapSense.c ****                 
 776              		.loc 1 151 0
 777 0030 4FF6FF74 		movw	r4, #65535
 778 0034 2033     		adds	r3, r3, #32
 779 0036 1C80     		strh	r4, [r3]	@ movhi
 171:Generated_Source\PSoC5/CapSense.c ****     
 780              		.loc 1 171 0
 781 0038 0725     		movs	r5, #7
 782 003a 4433     		adds	r3, r3, #68
 783 003c 1D70     		strb	r5, [r3]
 187:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 784              		.loc 1 187 0
 785 003e FFF7FEFF 		bl	CyEnterCriticalSection
 786              	.LVL55:
 188:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 787              		.loc 1 188 0
 788 0042 244A     		ldr	r2, .L65+8
 789 0044 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 790 0046 43F00303 		orr	r3, r3, #3
 791 004a 1370     		strb	r3, [r2]
 189:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 792              		.loc 1 189 0
 793 004c 033A     		subs	r2, r2, #3
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 50


 794 004e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 795 0050 43F00303 		orr	r3, r3, #3
 796 0054 1370     		strb	r3, [r2]
 190:Generated_Source\PSoC5/CapSense.c ****         
 797              		.loc 1 190 0
 798 0056 FFF7FEFF 		bl	CyExitCriticalSection
 799              	.LVL56:
 193:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 800              		.loc 1 193 0
 801 005a FF23     		movs	r3, #255
 802 005c 1E4A     		ldr	r2, .L65+12
 803 005e 1470     		strb	r4, [r2]
 194:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 804              		.loc 1 194 0
 805 0060 2032     		adds	r2, r2, #32
 806 0062 1370     		strb	r3, [r2]
 195:Generated_Source\PSoC5/CapSense.c ****         
 807              		.loc 1 195 0
 808 0064 403A     		subs	r2, r2, #64
 809 0066 1370     		strb	r3, [r2]
 198:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 810              		.loc 1 198 0
 811 0068 1D32     		adds	r2, r2, #29
 812 006a 1370     		strb	r3, [r2]
 199:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 813              		.loc 1 199 0
 814 006c 3032     		adds	r2, r2, #48
 815 006e 1370     		strb	r3, [r2]
 200:Generated_Source\PSoC5/CapSense.c ****         
 816              		.loc 1 200 0
 817 0070 103A     		subs	r2, r2, #16
 818 0072 1370     		strb	r3, [r2]
 239:Generated_Source\PSoC5/CapSense.c ****     (void)CyIntSetVector(CapSense_IsrCH0_ISR_NUMBER, &CapSense_IsrCH0_ISR);
 819              		.loc 1 239 0
 820 0074 0124     		movs	r4, #1
 821 0076 03F1E023 		add	r3, r3, #-536813568
 822 007a 8133     		adds	r3, r3, #129
 823 007c 1C60     		str	r4, [r3]
 240:Generated_Source\PSoC5/CapSense.c ****     CyIntSetPriority(CapSense_IsrCH0_ISR_NUMBER, CapSense_IsrCH0_ISR_PRIORITY);
 824              		.loc 1 240 0
 825 007e 1749     		ldr	r1, .L65+16
 826 0080 0020     		movs	r0, #0
 827 0082 FFF7FEFF 		bl	CyIntSetVector
 828              	.LVL57:
 241:Generated_Source\PSoC5/CapSense.c ****     
 829              		.loc 1 241 0
 830 0086 2946     		mov	r1, r5
 831 0088 0020     		movs	r0, #0
 832 008a FFF7FEFF 		bl	CyIntSetPriority
 833              	.LVL58:
 250:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMOD_CHANNEL);
 834              		.loc 1 250 0
 835 008e FFF7FEFF 		bl	CapSense_AMuxCH0_Init
 836              	.LVL59:
 251:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMP_VP_CHANNEL);
 837              		.loc 1 251 0
 838 0092 2046     		mov	r0, r4
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 51


 839 0094 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 840              	.LVL60:
 252:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 841              		.loc 1 252 0
 842 0098 0220     		movs	r0, #2
 843 009a FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 844              	.LVL61:
 254:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 845              		.loc 1 254 0
 846 009e 0320     		movs	r0, #3
 847 00a0 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 848              	.LVL62:
 272:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 849              		.loc 1 272 0
 850 00a4 0E4A     		ldr	r2, .L65+20
 851 00a6 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 852 00a8 43F00403 		orr	r3, r3, #4
 853 00ac 1370     		strb	r3, [r2]
 278:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 854              		.loc 1 278 0
 855 00ae FFF7FEFF 		bl	CapSense_CompCH0_Init
 856              	.LVL63:
 280:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetPolarity(CapSense_IdacCH0_IDIR);
 857              		.loc 1 280 0
 858 00b2 FFF7FEFF 		bl	CapSense_IdacCH0_Init
 859              	.LVL64:
 281:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetRange(CapSense_IDAC_RANGE_VALUE);
 860              		.loc 1 281 0
 861 00b6 0020     		movs	r0, #0
 862 00b8 FFF7FEFF 		bl	CapSense_IdacCH0_SetPolarity
 863              	.LVL65:
 282:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 864              		.loc 1 282 0
 865 00bc 0420     		movs	r0, #4
 866 00be FFF7FEFF 		bl	CapSense_IdacCH0_SetRange
 867              	.LVL66:
 283:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 868              		.loc 1 283 0
 869 00c2 0020     		movs	r0, #0
 870 00c4 FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 871              	.LVL67:
 872 00c8 38BD     		pop	{r3, r4, r5, pc}
 873              	.L66:
 874 00ca 00BF     		.align	2
 875              	.L65:
 876 00cc 98640040 		.word	1073767576
 877 00d0 28640040 		.word	1073767464
 878 00d4 9B650040 		.word	1073767835
 879 00d8 2B650040 		.word	1073767723
 880 00dc 00000000 		.word	CapSense_IsrCH0_ISR
 881 00e0 7B640040 		.word	1073767547
 882              		.cfi_endproc
 883              	.LFE0:
 884              		.size	CapSense_Init, .-CapSense_Init
 885              		.section	.text.CapSense_Start,"ax",%progbits
 886              		.align	2
 887              		.global	CapSense_Start
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 52


 888              		.thumb
 889              		.thumb_func
 890              		.type	CapSense_Start, %function
 891              	CapSense_Start:
 892              	.LFB2:
 475:Generated_Source\PSoC5/CapSense.c ****     if (CapSense_initVar == 0u)
 893              		.loc 1 475 0
 894              		.cfi_startproc
 895              		@ args = 0, pretend = 0, frame = 0
 896              		@ frame_needed = 0, uses_anonymous_args = 0
 897 0000 08B5     		push	{r3, lr}
 898              		.cfi_def_cfa_offset 8
 899              		.cfi_offset 3, -8
 900              		.cfi_offset 14, -4
 476:Generated_Source\PSoC5/CapSense.c ****     {
 901              		.loc 1 476 0
 902 0002 084B     		ldr	r3, .L70
 903 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 904 0006 23B9     		cbnz	r3, .L68
 478:Generated_Source\PSoC5/CapSense.c ****         CapSense_initVar = 1u;
 905              		.loc 1 478 0
 906 0008 FFF7FEFF 		bl	CapSense_Init
 907              	.LVL68:
 479:Generated_Source\PSoC5/CapSense.c ****     }
 908              		.loc 1 479 0
 909 000c 0122     		movs	r2, #1
 910 000e 054B     		ldr	r3, .L70
 911 0010 1A70     		strb	r2, [r3]
 912              	.L68:
 481:Generated_Source\PSoC5/CapSense.c ****     
 913              		.loc 1 481 0
 914 0012 FFF7FEFF 		bl	CapSense_Enable
 915              	.LVL69:
 486:Generated_Source\PSoC5/CapSense.c ****         CapSense_lowLevelTuningDone = 1u;
 916              		.loc 1 486 0
 917 0016 FFF7FEFF 		bl	CapSense_AutoTune
 918              	.LVL70:
 487:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
 919              		.loc 1 487 0
 920 001a 0122     		movs	r2, #1
 921 001c 024B     		ldr	r3, .L70+4
 922 001e 5A72     		strb	r2, [r3, #9]
 923 0020 08BD     		pop	{r3, pc}
 924              	.L71:
 925 0022 00BF     		.align	2
 926              	.L70:
 927 0024 00000000 		.word	.LANCHOR1
 928 0028 00000000 		.word	.LANCHOR0
 929              		.cfi_endproc
 930              	.LFE2:
 931              		.size	CapSense_Start, .-CapSense_Start
 932              		.global	CapSense_widgetNumber
 933              		.comm	CapSense_analogSwitchDivider,1,4
 934              		.global	CapSense_widgetResolution
 935              		.global	CapSense_idacSettings
 936              		.global	CapSense_csTable
 937              		.global	CapSense_maskTable
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 53


 938              		.global	CapSense_portTable
 939              		.global	CapSense_pcTable
 940              		.global	CapSense_sensorEnableMask
 941              		.comm	CapSense_sensorRaw,2,4
 942              		.global	CapSense_lowLevelTuningDone
 943              		.comm	CapSense_sensorIndex,1,1
 944              		.comm	CapSense_csv,1,1
 945              		.section	.rodata
 946              		.align	2
 947              		.type	CapSense_widgetNumber, %object
 948              		.size	CapSense_widgetNumber, 1
 949              	CapSense_widgetNumber:
 950 0000 00       		.space	1
 951 0001 000000   		.space	3
 952              		.type	CapSense_csTable, %object
 953              		.size	CapSense_csTable, 32
 954              	CapSense_csTable:
 955 0004 06520040 		.word	1073762822
 956 0008 0E520040 		.word	1073762830
 957 000c 16520040 		.word	1073762838
 958 0010 1E520040 		.word	1073762846
 959 0014 26520040 		.word	1073762854
 960 0018 2E520040 		.word	1073762862
 961 001c 36520040 		.word	1073762870
 962 0020 7E520040 		.word	1073762942
 963              		.type	CapSense_maskTable, %object
 964              		.size	CapSense_maskTable, 1
 965              	CapSense_maskTable:
 966 0024 00       		.space	1
 967 0025 000000   		.space	3
 968              		.type	CapSense_portTable, %object
 969              		.size	CapSense_portTable, 1
 970              	CapSense_portTable:
 971 0028 00       		.space	1
 972 0029 000000   		.space	3
 973              		.type	CapSense_pcTable, %object
 974              		.size	CapSense_pcTable, 4
 975              	CapSense_pcTable:
 976 002c 00000000 		.space	4
 977              		.data
 978              		.align	2
 979              		.set	.LANCHOR0,. + 0
 980              		.type	CapSense_sensorEnableMask, %object
 981              		.size	CapSense_sensorEnableMask, 1
 982              	CapSense_sensorEnableMask:
 983 0000 01       		.byte	1
 984 0001 000000   		.space	3
 985              		.type	CapSense_idacSettings, %object
 986              		.size	CapSense_idacSettings, 1
 987              	CapSense_idacSettings:
 988 0004 C8       		.byte	-56
 989 0005 000000   		.space	3
 990              		.type	CapSense_widgetResolution, %object
 991              		.size	CapSense_widgetResolution, 1
 992              	CapSense_widgetResolution:
 993 0008 03       		.byte	3
 994              		.type	CapSense_lowLevelTuningDone, %object
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 54


 995              		.size	CapSense_lowLevelTuningDone, 1
 996              	CapSense_lowLevelTuningDone:
 997 0009 01       		.byte	1
 998              		.bss
 999              		.set	.LANCHOR1,. + 0
 1000              		.type	CapSense_initVar, %object
 1001              		.size	CapSense_initVar, 1
 1002              	CapSense_initVar:
 1003 0000 00       		.space	1
 1004              		.text
 1005              	.Letext0:
 1006              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1007              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 1008              		.file 4 "Generated_Source\\PSoC5\\CapSense_IntClock.h"
 1009              		.file 5 "Generated_Source\\PSoC5\\CapSense_CompCH0.h"
 1010              		.file 6 "Generated_Source\\PSoC5\\CapSense_IdacCH0.h"
 1011              		.file 7 "Generated_Source\\PSoC5\\cyfitter_cfg.h"
 1012              		.file 8 "Generated_Source\\PSoC5\\CapSense_AMuxCH0.h"
 1013              		.file 9 "Generated_Source\\PSoC5\\CapSense.h"
 1014              		.section	.debug_info,"",%progbits
 1015              	.Ldebug_info0:
 1016 0000 16080000 		.4byte	0x816
 1017 0004 0400     		.2byte	0x4
 1018 0006 00000000 		.4byte	.Ldebug_abbrev0
 1019 000a 04       		.byte	0x4
 1020 000b 01       		.uleb128 0x1
 1021 000c D2040000 		.4byte	.LASF81
 1022 0010 0C       		.byte	0xc
 1023 0011 2A000000 		.4byte	.LASF82
 1024 0015 F5020000 		.4byte	.LASF83
 1025 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1026 001d 00000000 		.4byte	0
 1027 0021 00000000 		.4byte	.Ldebug_line0
 1028 0025 02       		.uleb128 0x2
 1029 0026 01       		.byte	0x1
 1030 0027 06       		.byte	0x6
 1031 0028 10010000 		.4byte	.LASF0
 1032 002c 02       		.uleb128 0x2
 1033 002d 01       		.byte	0x1
 1034 002e 08       		.byte	0x8
 1035 002f 50040000 		.4byte	.LASF1
 1036 0033 02       		.uleb128 0x2
 1037 0034 02       		.byte	0x2
 1038 0035 05       		.byte	0x5
 1039 0036 8E040000 		.4byte	.LASF2
 1040 003a 02       		.uleb128 0x2
 1041 003b 02       		.byte	0x2
 1042 003c 07       		.byte	0x7
 1043 003d CB020000 		.4byte	.LASF3
 1044 0041 02       		.uleb128 0x2
 1045 0042 04       		.byte	0x4
 1046 0043 05       		.byte	0x5
 1047 0044 3D010000 		.4byte	.LASF4
 1048 0048 02       		.uleb128 0x2
 1049 0049 04       		.byte	0x4
 1050 004a 07       		.byte	0x7
 1051 004b 64020000 		.4byte	.LASF5
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 55


 1052 004f 02       		.uleb128 0x2
 1053 0050 08       		.byte	0x8
 1054 0051 05       		.byte	0x5
 1055 0052 02010000 		.4byte	.LASF6
 1056 0056 02       		.uleb128 0x2
 1057 0057 08       		.byte	0x8
 1058 0058 07       		.byte	0x7
 1059 0059 AD000000 		.4byte	.LASF7
 1060 005d 03       		.uleb128 0x3
 1061 005e 04       		.byte	0x4
 1062 005f 05       		.byte	0x5
 1063 0060 696E7400 		.ascii	"int\000"
 1064 0064 02       		.uleb128 0x2
 1065 0065 04       		.byte	0x4
 1066 0066 07       		.byte	0x7
 1067 0067 27020000 		.4byte	.LASF8
 1068 006b 04       		.uleb128 0x4
 1069 006c 4C010000 		.4byte	.LASF9
 1070 0070 02       		.byte	0x2
 1071 0071 E901     		.2byte	0x1e9
 1072 0073 2C000000 		.4byte	0x2c
 1073 0077 04       		.uleb128 0x4
 1074 0078 00000000 		.4byte	.LASF10
 1075 007c 02       		.byte	0x2
 1076 007d EA01     		.2byte	0x1ea
 1077 007f 3A000000 		.4byte	0x3a
 1078 0083 04       		.uleb128 0x4
 1079 0084 C8010000 		.4byte	.LASF11
 1080 0088 02       		.byte	0x2
 1081 0089 EB01     		.2byte	0x1eb
 1082 008b 48000000 		.4byte	0x48
 1083 008f 02       		.uleb128 0x2
 1084 0090 04       		.byte	0x4
 1085 0091 04       		.byte	0x4
 1086 0092 23040000 		.4byte	.LASF12
 1087 0096 02       		.uleb128 0x2
 1088 0097 08       		.byte	0x8
 1089 0098 04       		.byte	0x4
 1090 0099 68010000 		.4byte	.LASF13
 1091 009d 02       		.uleb128 0x2
 1092 009e 01       		.byte	0x1
 1093 009f 08       		.byte	0x8
 1094 00a0 60050000 		.4byte	.LASF14
 1095 00a4 04       		.uleb128 0x4
 1096 00a5 33040000 		.4byte	.LASF15
 1097 00a9 02       		.byte	0x2
 1098 00aa 9302     		.2byte	0x293
 1099 00ac B0000000 		.4byte	0xb0
 1100 00b0 05       		.uleb128 0x5
 1101 00b1 6B000000 		.4byte	0x6b
 1102 00b5 04       		.uleb128 0x4
 1103 00b6 46010000 		.4byte	.LASF16
 1104 00ba 02       		.byte	0x2
 1105 00bb 9402     		.2byte	0x294
 1106 00bd C1000000 		.4byte	0xc1
 1107 00c1 05       		.uleb128 0x5
 1108 00c2 77000000 		.4byte	0x77
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 56


 1109 00c6 04       		.uleb128 0x4
 1110 00c7 77030000 		.4byte	.LASF17
 1111 00cb 02       		.byte	0x2
 1112 00cc 9502     		.2byte	0x295
 1113 00ce D2000000 		.4byte	0xd2
 1114 00d2 05       		.uleb128 0x5
 1115 00d3 83000000 		.4byte	0x83
 1116 00d7 02       		.uleb128 0x2
 1117 00d8 08       		.byte	0x8
 1118 00d9 04       		.byte	0x4
 1119 00da B4030000 		.4byte	.LASF18
 1120 00de 02       		.uleb128 0x2
 1121 00df 04       		.byte	0x4
 1122 00e0 07       		.byte	0x7
 1123 00e1 9A030000 		.4byte	.LASF19
 1124 00e5 06       		.uleb128 0x6
 1125 00e6 DC000000 		.4byte	.LASF26
 1126 00ea 01       		.byte	0x1
 1127 00eb 4101     		.2byte	0x141
 1128 00ed 00000000 		.4byte	.LFB1
 1129 00f1 68000000 		.4byte	.LFE1-.LFB1
 1130 00f5 01       		.uleb128 0x1
 1131 00f6 9C       		.byte	0x9c
 1132 00f7 40010000 		.4byte	0x140
 1133 00fb 07       		.uleb128 0x7
 1134 00fc C9050000 		.4byte	.LASF20
 1135 0100 01       		.byte	0x1
 1136 0101 4301     		.2byte	0x143
 1137 0103 6B000000 		.4byte	0x6b
 1138 0107 00000000 		.4byte	.LLST0
 1139 010b 08       		.uleb128 0x8
 1140 010c 06000000 		.4byte	.LVL0
 1141 0110 47070000 		.4byte	0x747
 1142 0114 08       		.uleb128 0x8
 1143 0115 16000000 		.4byte	.LVL2
 1144 0119 52070000 		.4byte	0x752
 1145 011d 08       		.uleb128 0x8
 1146 011e 1A000000 		.4byte	.LVL3
 1147 0122 5D070000 		.4byte	0x75d
 1148 0126 08       		.uleb128 0x8
 1149 0127 1E000000 		.4byte	.LVL4
 1150 012b 68070000 		.4byte	0x768
 1151 012f 09       		.uleb128 0x9
 1152 0130 46000000 		.4byte	.LVL5
 1153 0134 73070000 		.4byte	0x773
 1154 0138 0A       		.uleb128 0xa
 1155 0139 01       		.uleb128 0x1
 1156 013a 50       		.byte	0x50
 1157 013b 02       		.uleb128 0x2
 1158 013c 74       		.byte	0x74
 1159 013d 00       		.sleb128 0
 1160 013e 00       		.byte	0
 1161 013f 00       		.byte	0
 1162 0140 0B       		.uleb128 0xb
 1163 0141 38040000 		.4byte	.LASF22
 1164 0145 01       		.byte	0x1
 1165 0146 8902     		.2byte	0x289
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 57


 1166 0148 6B000000 		.4byte	0x6b
 1167 014c 00000000 		.4byte	.LFB4
 1168 0150 20000000 		.4byte	.LFE4-.LFB4
 1169 0154 01       		.uleb128 0x1
 1170 0155 9C       		.byte	0x9c
 1171 0156 89010000 		.4byte	0x189
 1172 015a 0C       		.uleb128 0xc
 1173 015b A4000000 		.4byte	.LASF24
 1174 015f 01       		.byte	0x1
 1175 0160 8902     		.2byte	0x289
 1176 0162 6B000000 		.4byte	0x6b
 1177 0166 13000000 		.4byte	.LLST1
 1178 016a 0D       		.uleb128 0xd
 1179 016b 706F7300 		.ascii	"pos\000"
 1180 016f 01       		.byte	0x1
 1181 0170 8B02     		.2byte	0x28b
 1182 0172 6B000000 		.4byte	0x6b
 1183 0176 01       		.uleb128 0x1
 1184 0177 52       		.byte	0x52
 1185 0178 07       		.uleb128 0x7
 1186 0179 D8030000 		.4byte	.LASF21
 1187 017d 01       		.byte	0x1
 1188 017e 8C02     		.2byte	0x28c
 1189 0180 6B000000 		.4byte	0x6b
 1190 0184 3F000000 		.4byte	.LLST2
 1191 0188 00       		.byte	0
 1192 0189 0E       		.uleb128 0xe
 1193 018a 6C060000 		.4byte	.LASF84
 1194 018e 01       		.byte	0x1
 1195 018f 1504     		.2byte	0x415
 1196 0191 6B000000 		.4byte	0x6b
 1197 0195 00000000 		.4byte	.LFB8
 1198 0199 10000000 		.4byte	.LFE8-.LFB8
 1199 019d 01       		.uleb128 0x1
 1200 019e 9C       		.byte	0x9c
 1201 019f 0B       		.uleb128 0xb
 1202 01a0 B1010000 		.4byte	.LASF23
 1203 01a4 01       		.byte	0x1
 1204 01a5 2E04     		.2byte	0x42e
 1205 01a7 77000000 		.4byte	0x77
 1206 01ab 00000000 		.4byte	.LFB9
 1207 01af 0C000000 		.4byte	.LFE9-.LFB9
 1208 01b3 01       		.uleb128 0x1
 1209 01b4 9C       		.byte	0x9c
 1210 01b5 CA010000 		.4byte	0x1ca
 1211 01b9 0C       		.uleb128 0xc
 1212 01ba 3F030000 		.4byte	.LASF25
 1213 01be 01       		.byte	0x1
 1214 01bf 2E04     		.2byte	0x42e
 1215 01c1 6B000000 		.4byte	0x6b
 1216 01c5 52000000 		.4byte	.LLST3
 1217 01c9 00       		.byte	0
 1218 01ca 06       		.uleb128 0x6
 1219 01cb 6F010000 		.4byte	.LASF27
 1220 01cf 01       		.byte	0x1
 1221 01d0 D904     		.2byte	0x4d9
 1222 01d2 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 58


 1223 01d6 0E000000 		.4byte	.LFE11-.LFB11
 1224 01da 01       		.uleb128 0x1
 1225 01db 9C       		.byte	0x9c
 1226 01dc 14020000 		.4byte	0x214
 1227 01e0 0C       		.uleb128 0xc
 1228 01e1 3F030000 		.4byte	.LASF25
 1229 01e5 01       		.byte	0x1
 1230 01e6 D904     		.2byte	0x4d9
 1231 01e8 6B000000 		.4byte	0x6b
 1232 01ec 73000000 		.4byte	.LLST4
 1233 01f0 0F       		.uleb128 0xf
 1234 01f1 F9010000 		.4byte	.LASF28
 1235 01f5 01       		.byte	0x1
 1236 01f6 DB04     		.2byte	0x4db
 1237 01f8 6B000000 		.4byte	0x6b
 1238 01fc 00       		.byte	0
 1239 01fd 0F       		.uleb128 0xf
 1240 01fe DE010000 		.4byte	.LASF29
 1241 0202 01       		.byte	0x1
 1242 0203 DC04     		.2byte	0x4dc
 1243 0205 6B000000 		.4byte	0x6b
 1244 0209 00       		.byte	0
 1245 020a 08       		.uleb128 0x8
 1246 020b 0C000000 		.4byte	.LVL15
 1247 020f 7E070000 		.4byte	0x77e
 1248 0213 00       		.byte	0
 1249 0214 06       		.uleb128 0x6
 1250 0215 F0050000 		.4byte	.LASF30
 1251 0219 01       		.byte	0x1
 1252 021a 2E05     		.2byte	0x52e
 1253 021c 00000000 		.4byte	.LFB12
 1254 0220 0E000000 		.4byte	.LFE12-.LFB12
 1255 0224 01       		.uleb128 0x1
 1256 0225 9C       		.byte	0x9c
 1257 0226 5E020000 		.4byte	0x25e
 1258 022a 0C       		.uleb128 0xc
 1259 022b 3F030000 		.4byte	.LASF25
 1260 022f 01       		.byte	0x1
 1261 0230 2E05     		.2byte	0x52e
 1262 0232 6B000000 		.4byte	0x6b
 1263 0236 94000000 		.4byte	.LLST5
 1264 023a 0F       		.uleb128 0xf
 1265 023b F9010000 		.4byte	.LASF28
 1266 023f 01       		.byte	0x1
 1267 0240 3005     		.2byte	0x530
 1268 0242 6B000000 		.4byte	0x6b
 1269 0246 00       		.byte	0
 1270 0247 0F       		.uleb128 0xf
 1271 0248 DE010000 		.4byte	.LASF29
 1272 024c 01       		.byte	0x1
 1273 024d 3105     		.2byte	0x531
 1274 024f 6B000000 		.4byte	0x6b
 1275 0253 00       		.byte	0
 1276 0254 08       		.uleb128 0x8
 1277 0255 06000000 		.4byte	.LVL18
 1278 0259 89070000 		.4byte	0x789
 1279 025d 00       		.byte	0
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 59


 1280 025e 06       		.uleb128 0x6
 1281 025f 34020000 		.4byte	.LASF31
 1282 0263 01       		.byte	0x1
 1283 0264 4304     		.2byte	0x443
 1284 0266 00000000 		.4byte	.LFB10
 1285 026a 16000000 		.4byte	.LFE10-.LFB10
 1286 026e 01       		.uleb128 0x1
 1287 026f 9C       		.byte	0x9c
 1288 0270 93020000 		.4byte	0x293
 1289 0274 10       		.uleb128 0x10
 1290 0275 6900     		.ascii	"i\000"
 1291 0277 01       		.byte	0x1
 1292 0278 4504     		.2byte	0x445
 1293 027a 6B000000 		.4byte	0x6b
 1294 027e B5000000 		.4byte	.LLST6
 1295 0282 09       		.uleb128 0x9
 1296 0283 0C000000 		.4byte	.LVL21
 1297 0287 14020000 		.4byte	0x214
 1298 028b 0A       		.uleb128 0xa
 1299 028c 01       		.uleb128 0x1
 1300 028d 50       		.byte	0x50
 1301 028e 02       		.uleb128 0x2
 1302 028f 74       		.byte	0x74
 1303 0290 00       		.sleb128 0
 1304 0291 00       		.byte	0
 1305 0292 00       		.byte	0
 1306 0293 06       		.uleb128 0x6
 1307 0294 C0030000 		.4byte	.LASF32
 1308 0298 01       		.byte	0x1
 1309 0299 FF01     		.2byte	0x1ff
 1310 029b 00000000 		.4byte	.LFB3
 1311 029f 68000000 		.4byte	.LFE3-.LFB3
 1312 02a3 01       		.uleb128 0x1
 1313 02a4 9C       		.byte	0x9c
 1314 02a5 CE020000 		.4byte	0x2ce
 1315 02a9 08       		.uleb128 0x8
 1316 02aa 16000000 		.4byte	.LVL24
 1317 02ae 5E020000 		.4byte	0x25e
 1318 02b2 08       		.uleb128 0x8
 1319 02b3 24000000 		.4byte	.LVL25
 1320 02b7 94070000 		.4byte	0x794
 1321 02bb 08       		.uleb128 0x8
 1322 02bc 28000000 		.4byte	.LVL26
 1323 02c0 9F070000 		.4byte	0x79f
 1324 02c4 08       		.uleb128 0x8
 1325 02c5 2C000000 		.4byte	.LVL27
 1326 02c9 AA070000 		.4byte	0x7aa
 1327 02cd 00       		.byte	0
 1328 02ce 06       		.uleb128 0x6
 1329 02cf B7050000 		.4byte	.LASF33
 1330 02d3 01       		.byte	0x1
 1331 02d4 2A06     		.2byte	0x62a
 1332 02d6 00000000 		.4byte	.LFB14
 1333 02da 4C000000 		.4byte	.LFE14-.LFB14
 1334 02de 01       		.uleb128 0x1
 1335 02df 9C       		.byte	0x9c
 1336 02e0 0D030000 		.4byte	0x30d
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 60


 1337 02e4 0C       		.uleb128 0xc
 1338 02e5 3F030000 		.4byte	.LASF25
 1339 02e9 01       		.byte	0x1
 1340 02ea 2A06     		.2byte	0x62a
 1341 02ec 6B000000 		.4byte	0x6b
 1342 02f0 DF000000 		.4byte	.LLST7
 1343 02f4 08       		.uleb128 0x8
 1344 02f5 28000000 		.4byte	.LVL29
 1345 02f9 14020000 		.4byte	0x214
 1346 02fd 09       		.uleb128 0x9
 1347 02fe 2E000000 		.4byte	.LVL30
 1348 0302 B5070000 		.4byte	0x7b5
 1349 0306 0A       		.uleb128 0xa
 1350 0307 01       		.uleb128 0x1
 1351 0308 50       		.byte	0x50
 1352 0309 01       		.uleb128 0x1
 1353 030a 30       		.byte	0x30
 1354 030b 00       		.byte	0
 1355 030c 00       		.byte	0
 1356 030d 06       		.uleb128 0x6
 1357 030e EC000000 		.4byte	.LASF34
 1358 0312 01       		.byte	0x1
 1359 0313 3807     		.2byte	0x738
 1360 0315 00000000 		.4byte	.LFB15
 1361 0319 10000000 		.4byte	.LFE15-.LFB15
 1362 031d 01       		.uleb128 0x1
 1363 031e 9C       		.byte	0x9c
 1364 031f 34030000 		.4byte	0x334
 1365 0323 0C       		.uleb128 0xc
 1366 0324 29040000 		.4byte	.LASF35
 1367 0328 01       		.byte	0x1
 1368 0329 3807     		.2byte	0x738
 1369 032b 6B000000 		.4byte	0x6b
 1370 032f 00010000 		.4byte	.LLST8
 1371 0333 00       		.byte	0
 1372 0334 06       		.uleb128 0x6
 1373 0335 9F040000 		.4byte	.LASF36
 1374 0339 01       		.byte	0x1
 1375 033a 2303     		.2byte	0x323
 1376 033c 00000000 		.4byte	.LFB5
 1377 0340 2C000000 		.4byte	.LFE5-.LFB5
 1378 0344 01       		.uleb128 0x1
 1379 0345 9C       		.byte	0x9c
 1380 0346 7A030000 		.4byte	0x37a
 1381 034a 0C       		.uleb128 0xc
 1382 034b 60030000 		.4byte	.LASF37
 1383 034f 01       		.byte	0x1
 1384 0350 2303     		.2byte	0x323
 1385 0352 6B000000 		.4byte	0x6b
 1386 0356 3C010000 		.4byte	.LLST9
 1387 035a 0F       		.uleb128 0xf
 1388 035b 98040000 		.4byte	.LASF38
 1389 035f 01       		.byte	0x1
 1390 0360 2503     		.2byte	0x325
 1391 0362 6B000000 		.4byte	0x6b
 1392 0366 00       		.byte	0
 1393 0367 08       		.uleb128 0x8
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 61


 1394 0368 0E000000 		.4byte	.LVL38
 1395 036c B5070000 		.4byte	0x7b5
 1396 0370 08       		.uleb128 0x8
 1397 0371 1C000000 		.4byte	.LVL39
 1398 0375 0D030000 		.4byte	0x30d
 1399 0379 00       		.byte	0
 1400 037a 06       		.uleb128 0x6
 1401 037b 07060000 		.4byte	.LASF39
 1402 037f 01       		.byte	0x1
 1403 0380 8205     		.2byte	0x582
 1404 0382 00000000 		.4byte	.LFB13
 1405 0386 34000000 		.4byte	.LFE13-.LFB13
 1406 038a 01       		.uleb128 0x1
 1407 038b 9C       		.byte	0x9c
 1408 038c C5030000 		.4byte	0x3c5
 1409 0390 0C       		.uleb128 0xc
 1410 0391 3F030000 		.4byte	.LASF25
 1411 0395 01       		.byte	0x1
 1412 0396 8205     		.2byte	0x582
 1413 0398 6B000000 		.4byte	0x6b
 1414 039c 5D010000 		.4byte	.LLST10
 1415 03a0 11       		.uleb128 0x11
 1416 03a1 08000000 		.4byte	.LVL41
 1417 03a5 34030000 		.4byte	0x334
 1418 03a9 B4030000 		.4byte	0x3b4
 1419 03ad 0A       		.uleb128 0xa
 1420 03ae 01       		.uleb128 0x1
 1421 03af 50       		.byte	0x50
 1422 03b0 02       		.uleb128 0x2
 1423 03b1 75       		.byte	0x75
 1424 03b2 00       		.sleb128 0
 1425 03b3 00       		.byte	0
 1426 03b4 09       		.uleb128 0x9
 1427 03b5 22000000 		.4byte	.LVL42
 1428 03b9 CA010000 		.4byte	0x1ca
 1429 03bd 0A       		.uleb128 0xa
 1430 03be 01       		.uleb128 0x1
 1431 03bf 50       		.byte	0x50
 1432 03c0 02       		.uleb128 0x2
 1433 03c1 75       		.byte	0x75
 1434 03c2 00       		.sleb128 0
 1435 03c3 00       		.byte	0
 1436 03c4 00       		.byte	0
 1437 03c5 06       		.uleb128 0x6
 1438 03c6 13020000 		.4byte	.LASF40
 1439 03ca 01       		.byte	0x1
 1440 03cb 9303     		.2byte	0x393
 1441 03cd 00000000 		.4byte	.LFB6
 1442 03d1 20000000 		.4byte	.LFE6-.LFB6
 1443 03d5 01       		.uleb128 0x1
 1444 03d6 9C       		.byte	0x9c
 1445 03d7 F5030000 		.4byte	0x3f5
 1446 03db 0C       		.uleb128 0xc
 1447 03dc 3F030000 		.4byte	.LASF25
 1448 03e0 01       		.byte	0x1
 1449 03e1 9303     		.2byte	0x393
 1450 03e3 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 62


 1451 03e7 7E010000 		.4byte	.LLST11
 1452 03eb 08       		.uleb128 0x8
 1453 03ec 14000000 		.4byte	.LVL44
 1454 03f0 7A030000 		.4byte	0x37a
 1455 03f4 00       		.byte	0
 1456 03f5 06       		.uleb128 0x6
 1457 03f6 39060000 		.4byte	.LASF41
 1458 03fa 01       		.byte	0x1
 1459 03fb E003     		.2byte	0x3e0
 1460 03fd 00000000 		.4byte	.LFB7
 1461 0401 38000000 		.4byte	.LFE7-.LFB7
 1462 0405 01       		.uleb128 0x1
 1463 0406 9C       		.byte	0x9c
 1464 0407 1E040000 		.4byte	0x41e
 1465 040b 08       		.uleb128 0x8
 1466 040c 14000000 		.4byte	.LVL45
 1467 0410 40010000 		.4byte	0x140
 1468 0414 08       		.uleb128 0x8
 1469 0415 2E000000 		.4byte	.LVL46
 1470 0419 7A030000 		.4byte	0x37a
 1471 041d 00       		.byte	0
 1472 041e 0B       		.uleb128 0xb
 1473 041f BC040000 		.4byte	.LASF42
 1474 0423 01       		.byte	0x1
 1475 0424 5507     		.2byte	0x755
 1476 0426 6B000000 		.4byte	0x6b
 1477 042a 00000000 		.4byte	.LFB16
 1478 042e 0C000000 		.4byte	.LFE16-.LFB16
 1479 0432 01       		.uleb128 0x1
 1480 0433 9C       		.byte	0x9c
 1481 0434 49040000 		.4byte	0x449
 1482 0438 07       		.uleb128 0x7
 1483 0439 29040000 		.4byte	.LASF35
 1484 043d 01       		.byte	0x1
 1485 043e 5707     		.2byte	0x757
 1486 0440 6B000000 		.4byte	0x6b
 1487 0444 9F010000 		.4byte	.LLST12
 1488 0448 00       		.byte	0
 1489 0449 06       		.uleb128 0x6
 1490 044a 7D050000 		.4byte	.LASF43
 1491 044e 01       		.byte	0x1
 1492 044f 7707     		.2byte	0x777
 1493 0451 00000000 		.4byte	.LFB17
 1494 0455 0C000000 		.4byte	.LFE17-.LFB17
 1495 0459 01       		.uleb128 0x1
 1496 045a 9C       		.byte	0x9c
 1497 045b 6E040000 		.4byte	0x46e
 1498 045f 12       		.uleb128 0x12
 1499 0460 CE030000 		.4byte	.LASF44
 1500 0464 01       		.byte	0x1
 1501 0465 7707     		.2byte	0x777
 1502 0467 6B000000 		.4byte	0x6b
 1503 046b 01       		.uleb128 0x1
 1504 046c 50       		.byte	0x50
 1505 046d 00       		.byte	0
 1506 046e 06       		.uleb128 0x6
 1507 046f 1C010000 		.4byte	.LASF45
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 63


 1508 0473 01       		.byte	0x1
 1509 0474 9207     		.2byte	0x792
 1510 0476 00000000 		.4byte	.LFB18
 1511 047a 20000000 		.4byte	.LFE18-.LFB18
 1512 047e 01       		.uleb128 0x1
 1513 047f 9C       		.byte	0x9c
 1514 0480 93040000 		.4byte	0x493
 1515 0484 13       		.uleb128 0x13
 1516 0485 73726300 		.ascii	"src\000"
 1517 0489 01       		.byte	0x1
 1518 048a 9207     		.2byte	0x792
 1519 048c 6B000000 		.4byte	0x6b
 1520 0490 01       		.uleb128 0x1
 1521 0491 50       		.byte	0x50
 1522 0492 00       		.byte	0
 1523 0493 14       		.uleb128 0x14
 1524 0494 18060000 		.4byte	.LASF46
 1525 0498 01       		.byte	0x1
 1526 0499 60       		.byte	0x60
 1527 049a 00000000 		.4byte	.LFB0
 1528 049e E4000000 		.4byte	.LFE0-.LFB0
 1529 04a2 01       		.uleb128 0x1
 1530 04a3 9C       		.byte	0x9c
 1531 04a4 AE050000 		.4byte	0x5ae
 1532 04a8 15       		.uleb128 0x15
 1533 04a9 C9050000 		.4byte	.LASF20
 1534 04ad 01       		.byte	0x1
 1535 04ae 67       		.byte	0x67
 1536 04af 6B000000 		.4byte	0x6b
 1537 04b3 BE010000 		.4byte	.LLST13
 1538 04b7 08       		.uleb128 0x8
 1539 04b8 06000000 		.4byte	.LVL51
 1540 04bc 5E020000 		.4byte	0x25e
 1541 04c0 11       		.uleb128 0x11
 1542 04c1 0C000000 		.4byte	.LVL52
 1543 04c5 6E040000 		.4byte	0x46e
 1544 04c9 D3040000 		.4byte	0x4d3
 1545 04cd 0A       		.uleb128 0xa
 1546 04ce 01       		.uleb128 0x1
 1547 04cf 50       		.byte	0x50
 1548 04d0 01       		.uleb128 0x1
 1549 04d1 32       		.byte	0x32
 1550 04d2 00       		.byte	0
 1551 04d3 08       		.uleb128 0x8
 1552 04d4 10000000 		.4byte	.LVL53
 1553 04d8 47070000 		.4byte	0x747
 1554 04dc 08       		.uleb128 0x8
 1555 04dd 28000000 		.4byte	.LVL54
 1556 04e1 73070000 		.4byte	0x773
 1557 04e5 08       		.uleb128 0x8
 1558 04e6 42000000 		.4byte	.LVL55
 1559 04ea 47070000 		.4byte	0x747
 1560 04ee 08       		.uleb128 0x8
 1561 04ef 5A000000 		.4byte	.LVL56
 1562 04f3 73070000 		.4byte	0x773
 1563 04f7 11       		.uleb128 0x11
 1564 04f8 86000000 		.4byte	.LVL57
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 64


 1565 04fc C0070000 		.4byte	0x7c0
 1566 0500 0A050000 		.4byte	0x50a
 1567 0504 0A       		.uleb128 0xa
 1568 0505 01       		.uleb128 0x1
 1569 0506 50       		.byte	0x50
 1570 0507 01       		.uleb128 0x1
 1571 0508 30       		.byte	0x30
 1572 0509 00       		.byte	0
 1573 050a 11       		.uleb128 0x11
 1574 050b 8E000000 		.4byte	.LVL58
 1575 050f CB070000 		.4byte	0x7cb
 1576 0513 23050000 		.4byte	0x523
 1577 0517 0A       		.uleb128 0xa
 1578 0518 01       		.uleb128 0x1
 1579 0519 50       		.byte	0x50
 1580 051a 01       		.uleb128 0x1
 1581 051b 30       		.byte	0x30
 1582 051c 0A       		.uleb128 0xa
 1583 051d 01       		.uleb128 0x1
 1584 051e 51       		.byte	0x51
 1585 051f 02       		.uleb128 0x2
 1586 0520 75       		.byte	0x75
 1587 0521 00       		.sleb128 0
 1588 0522 00       		.byte	0
 1589 0523 08       		.uleb128 0x8
 1590 0524 92000000 		.4byte	.LVL59
 1591 0528 D6070000 		.4byte	0x7d6
 1592 052c 11       		.uleb128 0x11
 1593 052d 98000000 		.4byte	.LVL60
 1594 0531 7E070000 		.4byte	0x77e
 1595 0535 40050000 		.4byte	0x540
 1596 0539 0A       		.uleb128 0xa
 1597 053a 01       		.uleb128 0x1
 1598 053b 50       		.byte	0x50
 1599 053c 02       		.uleb128 0x2
 1600 053d 74       		.byte	0x74
 1601 053e 00       		.sleb128 0
 1602 053f 00       		.byte	0
 1603 0540 11       		.uleb128 0x11
 1604 0541 9E000000 		.4byte	.LVL61
 1605 0545 7E070000 		.4byte	0x77e
 1606 0549 53050000 		.4byte	0x553
 1607 054d 0A       		.uleb128 0xa
 1608 054e 01       		.uleb128 0x1
 1609 054f 50       		.byte	0x50
 1610 0550 01       		.uleb128 0x1
 1611 0551 32       		.byte	0x32
 1612 0552 00       		.byte	0
 1613 0553 11       		.uleb128 0x11
 1614 0554 A4000000 		.4byte	.LVL62
 1615 0558 7E070000 		.4byte	0x77e
 1616 055c 66050000 		.4byte	0x566
 1617 0560 0A       		.uleb128 0xa
 1618 0561 01       		.uleb128 0x1
 1619 0562 50       		.byte	0x50
 1620 0563 01       		.uleb128 0x1
 1621 0564 33       		.byte	0x33
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 65


 1622 0565 00       		.byte	0
 1623 0566 08       		.uleb128 0x8
 1624 0567 B2000000 		.4byte	.LVL63
 1625 056b E1070000 		.4byte	0x7e1
 1626 056f 08       		.uleb128 0x8
 1627 0570 B6000000 		.4byte	.LVL64
 1628 0574 EC070000 		.4byte	0x7ec
 1629 0578 11       		.uleb128 0x11
 1630 0579 BC000000 		.4byte	.LVL65
 1631 057d F7070000 		.4byte	0x7f7
 1632 0581 8B050000 		.4byte	0x58b
 1633 0585 0A       		.uleb128 0xa
 1634 0586 01       		.uleb128 0x1
 1635 0587 50       		.byte	0x50
 1636 0588 01       		.uleb128 0x1
 1637 0589 30       		.byte	0x30
 1638 058a 00       		.byte	0
 1639 058b 11       		.uleb128 0x11
 1640 058c C2000000 		.4byte	.LVL66
 1641 0590 02080000 		.4byte	0x802
 1642 0594 9E050000 		.4byte	0x59e
 1643 0598 0A       		.uleb128 0xa
 1644 0599 01       		.uleb128 0x1
 1645 059a 50       		.byte	0x50
 1646 059b 01       		.uleb128 0x1
 1647 059c 34       		.byte	0x34
 1648 059d 00       		.byte	0
 1649 059e 09       		.uleb128 0x9
 1650 059f C8000000 		.4byte	.LVL67
 1651 05a3 B5070000 		.4byte	0x7b5
 1652 05a7 0A       		.uleb128 0xa
 1653 05a8 01       		.uleb128 0x1
 1654 05a9 50       		.byte	0x50
 1655 05aa 01       		.uleb128 0x1
 1656 05ab 30       		.byte	0x30
 1657 05ac 00       		.byte	0
 1658 05ad 00       		.byte	0
 1659 05ae 06       		.uleb128 0x6
 1660 05af A8050000 		.4byte	.LASF47
 1661 05b3 01       		.byte	0x1
 1662 05b4 DA01     		.2byte	0x1da
 1663 05b6 00000000 		.4byte	.LFB2
 1664 05ba 2C000000 		.4byte	.LFE2-.LFB2
 1665 05be 01       		.uleb128 0x1
 1666 05bf 9C       		.byte	0x9c
 1667 05c0 E0050000 		.4byte	0x5e0
 1668 05c4 08       		.uleb128 0x8
 1669 05c5 0C000000 		.4byte	.LVL68
 1670 05c9 93040000 		.4byte	0x493
 1671 05cd 08       		.uleb128 0x8
 1672 05ce 16000000 		.4byte	.LVL69
 1673 05d2 E5000000 		.4byte	0xe5
 1674 05d6 08       		.uleb128 0x8
 1675 05d7 1A000000 		.4byte	.LVL70
 1676 05db 0D080000 		.4byte	0x80d
 1677 05df 00       		.byte	0
 1678 05e0 16       		.uleb128 0x16
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 66


 1679 05e1 4C000000 		.4byte	.LASF48
 1680 05e5 01       		.byte	0x1
 1681 05e6 16       		.byte	0x16
 1682 05e7 6B000000 		.4byte	0x6b
 1683 05eb 05       		.uleb128 0x5
 1684 05ec 03       		.byte	0x3
 1685 05ed 00000000 		.4byte	CapSense_initVar
 1686 05f1 17       		.uleb128 0x17
 1687 05f2 6E000000 		.4byte	.LASF49
 1688 05f6 01       		.byte	0x1
 1689 05f7 1E       		.byte	0x1e
 1690 05f8 6B000000 		.4byte	0x6b
 1691 05fc 05       		.uleb128 0x5
 1692 05fd 03       		.byte	0x3
 1693 05fe 00000000 		.4byte	CapSense_lowLevelTuningDone
 1694 0602 17       		.uleb128 0x17
 1695 0603 07000000 		.4byte	.LASF50
 1696 0607 01       		.byte	0x1
 1697 0608 19       		.byte	0x19
 1698 0609 B0000000 		.4byte	0xb0
 1699 060d 05       		.uleb128 0x5
 1700 060e 03       		.byte	0x3
 1701 060f 00000000 		.4byte	CapSense_csv
 1702 0613 17       		.uleb128 0x17
 1703 0614 FE010000 		.4byte	.LASF51
 1704 0618 01       		.byte	0x1
 1705 0619 1A       		.byte	0x1a
 1706 061a B0000000 		.4byte	0xb0
 1707 061e 05       		.uleb128 0x5
 1708 061f 03       		.byte	0x3
 1709 0620 00000000 		.4byte	CapSense_sensorIndex
 1710 0624 18       		.uleb128 0x18
 1711 0625 77000000 		.4byte	0x77
 1712 0629 34060000 		.4byte	0x634
 1713 062d 19       		.uleb128 0x19
 1714 062e DE000000 		.4byte	0xde
 1715 0632 00       		.byte	0
 1716 0633 00       		.byte	0
 1717 0634 17       		.uleb128 0x17
 1718 0635 26060000 		.4byte	.LASF52
 1719 0639 01       		.byte	0x1
 1720 063a 29       		.byte	0x29
 1721 063b 24060000 		.4byte	0x624
 1722 063f 05       		.uleb128 0x5
 1723 0640 03       		.byte	0x3
 1724 0641 00000000 		.4byte	CapSense_sensorRaw
 1725 0645 18       		.uleb128 0x18
 1726 0646 6B000000 		.4byte	0x6b
 1727 064a 55060000 		.4byte	0x655
 1728 064e 19       		.uleb128 0x19
 1729 064f DE000000 		.4byte	0xde
 1730 0653 00       		.byte	0
 1731 0654 00       		.byte	0
 1732 0655 17       		.uleb128 0x17
 1733 0656 46030000 		.4byte	.LASF53
 1734 065a 01       		.byte	0x1
 1735 065b 2B       		.byte	0x2b
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 67


 1736 065c 45060000 		.4byte	0x645
 1737 0660 05       		.uleb128 0x5
 1738 0661 03       		.byte	0x3
 1739 0662 00000000 		.4byte	CapSense_sensorEnableMask
 1740 0666 18       		.uleb128 0x18
 1741 0667 7C060000 		.4byte	0x67c
 1742 066b 76060000 		.4byte	0x676
 1743 066f 19       		.uleb128 0x19
 1744 0670 DE000000 		.4byte	0xde
 1745 0674 00       		.byte	0
 1746 0675 00       		.byte	0
 1747 0676 1A       		.uleb128 0x1a
 1748 0677 04       		.byte	0x4
 1749 0678 6B000000 		.4byte	0x6b
 1750 067c 1B       		.uleb128 0x1b
 1751 067d 76060000 		.4byte	0x676
 1752 0681 17       		.uleb128 0x17
 1753 0682 5D000000 		.4byte	.LASF54
 1754 0686 01       		.byte	0x1
 1755 0687 2E       		.byte	0x2e
 1756 0688 92060000 		.4byte	0x692
 1757 068c 05       		.uleb128 0x5
 1758 068d 03       		.byte	0x3
 1759 068e 00000000 		.4byte	CapSense_pcTable
 1760 0692 1B       		.uleb128 0x1b
 1761 0693 66060000 		.4byte	0x666
 1762 0697 18       		.uleb128 0x18
 1763 0698 A7060000 		.4byte	0x6a7
 1764 069c A7060000 		.4byte	0x6a7
 1765 06a0 19       		.uleb128 0x19
 1766 06a1 DE000000 		.4byte	0xde
 1767 06a5 00       		.byte	0
 1768 06a6 00       		.byte	0
 1769 06a7 1B       		.uleb128 0x1b
 1770 06a8 6B000000 		.4byte	0x6b
 1771 06ac 17       		.uleb128 0x17
 1772 06ad 89020000 		.4byte	.LASF55
 1773 06b1 01       		.byte	0x1
 1774 06b2 32       		.byte	0x32
 1775 06b3 BD060000 		.4byte	0x6bd
 1776 06b7 05       		.uleb128 0x5
 1777 06b8 03       		.byte	0x3
 1778 06b9 00000000 		.4byte	CapSense_portTable
 1779 06bd 1B       		.uleb128 0x1b
 1780 06be 97060000 		.4byte	0x697
 1781 06c2 17       		.uleb128 0x17
 1782 06c3 76020000 		.4byte	.LASF56
 1783 06c7 01       		.byte	0x1
 1784 06c8 36       		.byte	0x36
 1785 06c9 D3060000 		.4byte	0x6d3
 1786 06cd 05       		.uleb128 0x5
 1787 06ce 03       		.byte	0x3
 1788 06cf 00000000 		.4byte	CapSense_maskTable
 1789 06d3 1B       		.uleb128 0x1b
 1790 06d4 97060000 		.4byte	0x697
 1791 06d8 18       		.uleb128 0x18
 1792 06d9 7C060000 		.4byte	0x67c
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 68


 1793 06dd E8060000 		.4byte	0x6e8
 1794 06e1 19       		.uleb128 0x19
 1795 06e2 DE000000 		.4byte	0xde
 1796 06e6 07       		.byte	0x7
 1797 06e7 00       		.byte	0
 1798 06e8 17       		.uleb128 0x17
 1799 06e9 A3030000 		.4byte	.LASF57
 1800 06ed 01       		.byte	0x1
 1801 06ee 3A       		.byte	0x3a
 1802 06ef F9060000 		.4byte	0x6f9
 1803 06f3 05       		.uleb128 0x5
 1804 06f4 03       		.byte	0x3
 1805 06f5 00000000 		.4byte	CapSense_csTable
 1806 06f9 1B       		.uleb128 0x1b
 1807 06fa D8060000 		.4byte	0x6d8
 1808 06fe 17       		.uleb128 0x17
 1809 06ff 0D040000 		.4byte	.LASF58
 1810 0703 01       		.byte	0x1
 1811 0704 40       		.byte	0x40
 1812 0705 45060000 		.4byte	0x645
 1813 0709 05       		.uleb128 0x5
 1814 070a 03       		.byte	0x3
 1815 070b 00000000 		.4byte	CapSense_idacSettings
 1816 070f 17       		.uleb128 0x17
 1817 0710 74040000 		.4byte	.LASF59
 1818 0714 01       		.byte	0x1
 1819 0715 44       		.byte	0x44
 1820 0716 45060000 		.4byte	0x645
 1821 071a 05       		.uleb128 0x5
 1822 071b 03       		.byte	0x3
 1823 071c 00000000 		.4byte	CapSense_widgetResolution
 1824 0720 17       		.uleb128 0x17
 1825 0721 7D030000 		.4byte	.LASF60
 1826 0725 01       		.byte	0x1
 1827 0726 48       		.byte	0x48
 1828 0727 45060000 		.4byte	0x645
 1829 072b 05       		.uleb128 0x5
 1830 072c 03       		.byte	0x3
 1831 072d 00000000 		.4byte	CapSense_analogSwitchDivider
 1832 0731 17       		.uleb128 0x17
 1833 0732 9B010000 		.4byte	.LASF61
 1834 0736 01       		.byte	0x1
 1835 0737 49       		.byte	0x49
 1836 0738 42070000 		.4byte	0x742
 1837 073c 05       		.uleb128 0x5
 1838 073d 03       		.byte	0x3
 1839 073e 00000000 		.4byte	CapSense_widgetNumber
 1840 0742 1B       		.uleb128 0x1b
 1841 0743 97060000 		.4byte	0x697
 1842 0747 1C       		.uleb128 0x1c
 1843 0748 B4020000 		.4byte	.LASF62
 1844 074c B4020000 		.4byte	.LASF62
 1845 0750 03       		.byte	0x3
 1846 0751 7D       		.byte	0x7d
 1847 0752 1C       		.uleb128 0x1c
 1848 0753 9C020000 		.4byte	.LASF63
 1849 0757 9C020000 		.4byte	.LASF63
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 69


 1850 075b 04       		.byte	0x4
 1851 075c 27       		.byte	0x27
 1852 075d 1C       		.uleb128 0x1c
 1853 075e C4000000 		.4byte	.LASF64
 1854 0762 C4000000 		.4byte	.LASF64
 1855 0766 05       		.byte	0x5
 1856 0767 46       		.byte	0x46
 1857 0768 1C       		.uleb128 0x1c
 1858 0769 65050000 		.4byte	.LASF65
 1859 076d 65050000 		.4byte	.LASF65
 1860 0771 06       		.byte	0x6
 1861 0772 46       		.byte	0x46
 1862 0773 1C       		.uleb128 0x1c
 1863 0774 14000000 		.4byte	.LASF66
 1864 0778 14000000 		.4byte	.LASF66
 1865 077c 03       		.byte	0x3
 1866 077d 7E       		.byte	0x7e
 1867 077e 1C       		.uleb128 0x1c
 1868 077f 93050000 		.4byte	.LASF67
 1869 0783 93050000 		.4byte	.LASF67
 1870 0787 07       		.byte	0x7
 1871 0788 1A       		.byte	0x1a
 1872 0789 1C       		.uleb128 0x1c
 1873 078a 55060000 		.4byte	.LASF68
 1874 078e 55060000 		.4byte	.LASF68
 1875 0792 07       		.byte	0x7
 1876 0793 1B       		.byte	0x1b
 1877 0794 1C       		.uleb128 0x1c
 1878 0795 DE020000 		.4byte	.LASF69
 1879 0799 DE020000 		.4byte	.LASF69
 1880 079d 04       		.byte	0x4
 1881 079e 28       		.byte	0x28
 1882 079f 1C       		.uleb128 0x1c
 1883 07a0 DA050000 		.4byte	.LASF70
 1884 07a4 DA050000 		.4byte	.LASF70
 1885 07a8 05       		.byte	0x5
 1886 07a9 40       		.byte	0x40
 1887 07aa 1C       		.uleb128 0x1c
 1888 07ab 85010000 		.4byte	.LASF71
 1889 07af 85010000 		.4byte	.LASF71
 1890 07b3 06       		.byte	0x6
 1891 07b4 3D       		.byte	0x3d
 1892 07b5 1C       		.uleb128 0x1c
 1893 07b6 8A000000 		.4byte	.LASF72
 1894 07ba 8A000000 		.4byte	.LASF72
 1895 07be 06       		.byte	0x6
 1896 07bf 41       		.byte	0x41
 1897 07c0 1C       		.uleb128 0x1c
 1898 07c1 CF010000 		.4byte	.LASF73
 1899 07c5 CF010000 		.4byte	.LASF73
 1900 07c9 03       		.byte	0x3
 1901 07ca 88       		.byte	0x88
 1902 07cb 1C       		.uleb128 0x1c
 1903 07cc FC030000 		.4byte	.LASF74
 1904 07d0 FC030000 		.4byte	.LASF74
 1905 07d4 03       		.byte	0x3
 1906 07d5 8B       		.byte	0x8b
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 70


 1907 07d6 1C       		.uleb128 0x1c
 1908 07d7 52010000 		.4byte	.LASF75
 1909 07db 52010000 		.4byte	.LASF75
 1910 07df 08       		.byte	0x8
 1911 07e0 1F       		.byte	0x1f
 1912 07e1 1C       		.uleb128 0x1c
 1913 07e2 E3010000 		.4byte	.LASF76
 1914 07e6 E3010000 		.4byte	.LASF76
 1915 07ea 05       		.byte	0x5
 1916 07eb 45       		.byte	0x45
 1917 07ec 1C       		.uleb128 0x1c
 1918 07ed 5E040000 		.4byte	.LASF77
 1919 07f1 5E040000 		.4byte	.LASF77
 1920 07f5 06       		.byte	0x6
 1921 07f6 45       		.byte	0x45
 1922 07f7 1C       		.uleb128 0x1c
 1923 07f8 DF030000 		.4byte	.LASF78
 1924 07fc DF030000 		.4byte	.LASF78
 1925 0800 06       		.byte	0x6
 1926 0801 3F       		.byte	0x3f
 1927 0802 1C       		.uleb128 0x1c
 1928 0803 4A020000 		.4byte	.LASF79
 1929 0807 4A020000 		.4byte	.LASF79
 1930 080b 06       		.byte	0x6
 1931 080c 40       		.byte	0x40
 1932 080d 1D       		.uleb128 0x1d
 1933 080e 65030000 		.4byte	.LASF80
 1934 0812 65030000 		.4byte	.LASF80
 1935 0816 09       		.byte	0x9
 1936 0817 AA02     		.2byte	0x2aa
 1937 0819 00       		.byte	0
 1938              		.section	.debug_abbrev,"",%progbits
 1939              	.Ldebug_abbrev0:
 1940 0000 01       		.uleb128 0x1
 1941 0001 11       		.uleb128 0x11
 1942 0002 01       		.byte	0x1
 1943 0003 25       		.uleb128 0x25
 1944 0004 0E       		.uleb128 0xe
 1945 0005 13       		.uleb128 0x13
 1946 0006 0B       		.uleb128 0xb
 1947 0007 03       		.uleb128 0x3
 1948 0008 0E       		.uleb128 0xe
 1949 0009 1B       		.uleb128 0x1b
 1950 000a 0E       		.uleb128 0xe
 1951 000b 55       		.uleb128 0x55
 1952 000c 17       		.uleb128 0x17
 1953 000d 11       		.uleb128 0x11
 1954 000e 01       		.uleb128 0x1
 1955 000f 10       		.uleb128 0x10
 1956 0010 17       		.uleb128 0x17
 1957 0011 00       		.byte	0
 1958 0012 00       		.byte	0
 1959 0013 02       		.uleb128 0x2
 1960 0014 24       		.uleb128 0x24
 1961 0015 00       		.byte	0
 1962 0016 0B       		.uleb128 0xb
 1963 0017 0B       		.uleb128 0xb
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 71


 1964 0018 3E       		.uleb128 0x3e
 1965 0019 0B       		.uleb128 0xb
 1966 001a 03       		.uleb128 0x3
 1967 001b 0E       		.uleb128 0xe
 1968 001c 00       		.byte	0
 1969 001d 00       		.byte	0
 1970 001e 03       		.uleb128 0x3
 1971 001f 24       		.uleb128 0x24
 1972 0020 00       		.byte	0
 1973 0021 0B       		.uleb128 0xb
 1974 0022 0B       		.uleb128 0xb
 1975 0023 3E       		.uleb128 0x3e
 1976 0024 0B       		.uleb128 0xb
 1977 0025 03       		.uleb128 0x3
 1978 0026 08       		.uleb128 0x8
 1979 0027 00       		.byte	0
 1980 0028 00       		.byte	0
 1981 0029 04       		.uleb128 0x4
 1982 002a 16       		.uleb128 0x16
 1983 002b 00       		.byte	0
 1984 002c 03       		.uleb128 0x3
 1985 002d 0E       		.uleb128 0xe
 1986 002e 3A       		.uleb128 0x3a
 1987 002f 0B       		.uleb128 0xb
 1988 0030 3B       		.uleb128 0x3b
 1989 0031 05       		.uleb128 0x5
 1990 0032 49       		.uleb128 0x49
 1991 0033 13       		.uleb128 0x13
 1992 0034 00       		.byte	0
 1993 0035 00       		.byte	0
 1994 0036 05       		.uleb128 0x5
 1995 0037 35       		.uleb128 0x35
 1996 0038 00       		.byte	0
 1997 0039 49       		.uleb128 0x49
 1998 003a 13       		.uleb128 0x13
 1999 003b 00       		.byte	0
 2000 003c 00       		.byte	0
 2001 003d 06       		.uleb128 0x6
 2002 003e 2E       		.uleb128 0x2e
 2003 003f 01       		.byte	0x1
 2004 0040 3F       		.uleb128 0x3f
 2005 0041 19       		.uleb128 0x19
 2006 0042 03       		.uleb128 0x3
 2007 0043 0E       		.uleb128 0xe
 2008 0044 3A       		.uleb128 0x3a
 2009 0045 0B       		.uleb128 0xb
 2010 0046 3B       		.uleb128 0x3b
 2011 0047 05       		.uleb128 0x5
 2012 0048 27       		.uleb128 0x27
 2013 0049 19       		.uleb128 0x19
 2014 004a 11       		.uleb128 0x11
 2015 004b 01       		.uleb128 0x1
 2016 004c 12       		.uleb128 0x12
 2017 004d 06       		.uleb128 0x6
 2018 004e 40       		.uleb128 0x40
 2019 004f 18       		.uleb128 0x18
 2020 0050 9742     		.uleb128 0x2117
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 72


 2021 0052 19       		.uleb128 0x19
 2022 0053 01       		.uleb128 0x1
 2023 0054 13       		.uleb128 0x13
 2024 0055 00       		.byte	0
 2025 0056 00       		.byte	0
 2026 0057 07       		.uleb128 0x7
 2027 0058 34       		.uleb128 0x34
 2028 0059 00       		.byte	0
 2029 005a 03       		.uleb128 0x3
 2030 005b 0E       		.uleb128 0xe
 2031 005c 3A       		.uleb128 0x3a
 2032 005d 0B       		.uleb128 0xb
 2033 005e 3B       		.uleb128 0x3b
 2034 005f 05       		.uleb128 0x5
 2035 0060 49       		.uleb128 0x49
 2036 0061 13       		.uleb128 0x13
 2037 0062 02       		.uleb128 0x2
 2038 0063 17       		.uleb128 0x17
 2039 0064 00       		.byte	0
 2040 0065 00       		.byte	0
 2041 0066 08       		.uleb128 0x8
 2042 0067 898201   		.uleb128 0x4109
 2043 006a 00       		.byte	0
 2044 006b 11       		.uleb128 0x11
 2045 006c 01       		.uleb128 0x1
 2046 006d 31       		.uleb128 0x31
 2047 006e 13       		.uleb128 0x13
 2048 006f 00       		.byte	0
 2049 0070 00       		.byte	0
 2050 0071 09       		.uleb128 0x9
 2051 0072 898201   		.uleb128 0x4109
 2052 0075 01       		.byte	0x1
 2053 0076 11       		.uleb128 0x11
 2054 0077 01       		.uleb128 0x1
 2055 0078 31       		.uleb128 0x31
 2056 0079 13       		.uleb128 0x13
 2057 007a 00       		.byte	0
 2058 007b 00       		.byte	0
 2059 007c 0A       		.uleb128 0xa
 2060 007d 8A8201   		.uleb128 0x410a
 2061 0080 00       		.byte	0
 2062 0081 02       		.uleb128 0x2
 2063 0082 18       		.uleb128 0x18
 2064 0083 9142     		.uleb128 0x2111
 2065 0085 18       		.uleb128 0x18
 2066 0086 00       		.byte	0
 2067 0087 00       		.byte	0
 2068 0088 0B       		.uleb128 0xb
 2069 0089 2E       		.uleb128 0x2e
 2070 008a 01       		.byte	0x1
 2071 008b 3F       		.uleb128 0x3f
 2072 008c 19       		.uleb128 0x19
 2073 008d 03       		.uleb128 0x3
 2074 008e 0E       		.uleb128 0xe
 2075 008f 3A       		.uleb128 0x3a
 2076 0090 0B       		.uleb128 0xb
 2077 0091 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 73


 2078 0092 05       		.uleb128 0x5
 2079 0093 27       		.uleb128 0x27
 2080 0094 19       		.uleb128 0x19
 2081 0095 49       		.uleb128 0x49
 2082 0096 13       		.uleb128 0x13
 2083 0097 11       		.uleb128 0x11
 2084 0098 01       		.uleb128 0x1
 2085 0099 12       		.uleb128 0x12
 2086 009a 06       		.uleb128 0x6
 2087 009b 40       		.uleb128 0x40
 2088 009c 18       		.uleb128 0x18
 2089 009d 9742     		.uleb128 0x2117
 2090 009f 19       		.uleb128 0x19
 2091 00a0 01       		.uleb128 0x1
 2092 00a1 13       		.uleb128 0x13
 2093 00a2 00       		.byte	0
 2094 00a3 00       		.byte	0
 2095 00a4 0C       		.uleb128 0xc
 2096 00a5 05       		.uleb128 0x5
 2097 00a6 00       		.byte	0
 2098 00a7 03       		.uleb128 0x3
 2099 00a8 0E       		.uleb128 0xe
 2100 00a9 3A       		.uleb128 0x3a
 2101 00aa 0B       		.uleb128 0xb
 2102 00ab 3B       		.uleb128 0x3b
 2103 00ac 05       		.uleb128 0x5
 2104 00ad 49       		.uleb128 0x49
 2105 00ae 13       		.uleb128 0x13
 2106 00af 02       		.uleb128 0x2
 2107 00b0 17       		.uleb128 0x17
 2108 00b1 00       		.byte	0
 2109 00b2 00       		.byte	0
 2110 00b3 0D       		.uleb128 0xd
 2111 00b4 34       		.uleb128 0x34
 2112 00b5 00       		.byte	0
 2113 00b6 03       		.uleb128 0x3
 2114 00b7 08       		.uleb128 0x8
 2115 00b8 3A       		.uleb128 0x3a
 2116 00b9 0B       		.uleb128 0xb
 2117 00ba 3B       		.uleb128 0x3b
 2118 00bb 05       		.uleb128 0x5
 2119 00bc 49       		.uleb128 0x49
 2120 00bd 13       		.uleb128 0x13
 2121 00be 02       		.uleb128 0x2
 2122 00bf 18       		.uleb128 0x18
 2123 00c0 00       		.byte	0
 2124 00c1 00       		.byte	0
 2125 00c2 0E       		.uleb128 0xe
 2126 00c3 2E       		.uleb128 0x2e
 2127 00c4 00       		.byte	0
 2128 00c5 3F       		.uleb128 0x3f
 2129 00c6 19       		.uleb128 0x19
 2130 00c7 03       		.uleb128 0x3
 2131 00c8 0E       		.uleb128 0xe
 2132 00c9 3A       		.uleb128 0x3a
 2133 00ca 0B       		.uleb128 0xb
 2134 00cb 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 74


 2135 00cc 05       		.uleb128 0x5
 2136 00cd 27       		.uleb128 0x27
 2137 00ce 19       		.uleb128 0x19
 2138 00cf 49       		.uleb128 0x49
 2139 00d0 13       		.uleb128 0x13
 2140 00d1 11       		.uleb128 0x11
 2141 00d2 01       		.uleb128 0x1
 2142 00d3 12       		.uleb128 0x12
 2143 00d4 06       		.uleb128 0x6
 2144 00d5 40       		.uleb128 0x40
 2145 00d6 18       		.uleb128 0x18
 2146 00d7 9742     		.uleb128 0x2117
 2147 00d9 19       		.uleb128 0x19
 2148 00da 00       		.byte	0
 2149 00db 00       		.byte	0
 2150 00dc 0F       		.uleb128 0xf
 2151 00dd 34       		.uleb128 0x34
 2152 00de 00       		.byte	0
 2153 00df 03       		.uleb128 0x3
 2154 00e0 0E       		.uleb128 0xe
 2155 00e1 3A       		.uleb128 0x3a
 2156 00e2 0B       		.uleb128 0xb
 2157 00e3 3B       		.uleb128 0x3b
 2158 00e4 05       		.uleb128 0x5
 2159 00e5 49       		.uleb128 0x49
 2160 00e6 13       		.uleb128 0x13
 2161 00e7 1C       		.uleb128 0x1c
 2162 00e8 0B       		.uleb128 0xb
 2163 00e9 00       		.byte	0
 2164 00ea 00       		.byte	0
 2165 00eb 10       		.uleb128 0x10
 2166 00ec 34       		.uleb128 0x34
 2167 00ed 00       		.byte	0
 2168 00ee 03       		.uleb128 0x3
 2169 00ef 08       		.uleb128 0x8
 2170 00f0 3A       		.uleb128 0x3a
 2171 00f1 0B       		.uleb128 0xb
 2172 00f2 3B       		.uleb128 0x3b
 2173 00f3 05       		.uleb128 0x5
 2174 00f4 49       		.uleb128 0x49
 2175 00f5 13       		.uleb128 0x13
 2176 00f6 02       		.uleb128 0x2
 2177 00f7 17       		.uleb128 0x17
 2178 00f8 00       		.byte	0
 2179 00f9 00       		.byte	0
 2180 00fa 11       		.uleb128 0x11
 2181 00fb 898201   		.uleb128 0x4109
 2182 00fe 01       		.byte	0x1
 2183 00ff 11       		.uleb128 0x11
 2184 0100 01       		.uleb128 0x1
 2185 0101 31       		.uleb128 0x31
 2186 0102 13       		.uleb128 0x13
 2187 0103 01       		.uleb128 0x1
 2188 0104 13       		.uleb128 0x13
 2189 0105 00       		.byte	0
 2190 0106 00       		.byte	0
 2191 0107 12       		.uleb128 0x12
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 75


 2192 0108 05       		.uleb128 0x5
 2193 0109 00       		.byte	0
 2194 010a 03       		.uleb128 0x3
 2195 010b 0E       		.uleb128 0xe
 2196 010c 3A       		.uleb128 0x3a
 2197 010d 0B       		.uleb128 0xb
 2198 010e 3B       		.uleb128 0x3b
 2199 010f 05       		.uleb128 0x5
 2200 0110 49       		.uleb128 0x49
 2201 0111 13       		.uleb128 0x13
 2202 0112 02       		.uleb128 0x2
 2203 0113 18       		.uleb128 0x18
 2204 0114 00       		.byte	0
 2205 0115 00       		.byte	0
 2206 0116 13       		.uleb128 0x13
 2207 0117 05       		.uleb128 0x5
 2208 0118 00       		.byte	0
 2209 0119 03       		.uleb128 0x3
 2210 011a 08       		.uleb128 0x8
 2211 011b 3A       		.uleb128 0x3a
 2212 011c 0B       		.uleb128 0xb
 2213 011d 3B       		.uleb128 0x3b
 2214 011e 05       		.uleb128 0x5
 2215 011f 49       		.uleb128 0x49
 2216 0120 13       		.uleb128 0x13
 2217 0121 02       		.uleb128 0x2
 2218 0122 18       		.uleb128 0x18
 2219 0123 00       		.byte	0
 2220 0124 00       		.byte	0
 2221 0125 14       		.uleb128 0x14
 2222 0126 2E       		.uleb128 0x2e
 2223 0127 01       		.byte	0x1
 2224 0128 3F       		.uleb128 0x3f
 2225 0129 19       		.uleb128 0x19
 2226 012a 03       		.uleb128 0x3
 2227 012b 0E       		.uleb128 0xe
 2228 012c 3A       		.uleb128 0x3a
 2229 012d 0B       		.uleb128 0xb
 2230 012e 3B       		.uleb128 0x3b
 2231 012f 0B       		.uleb128 0xb
 2232 0130 27       		.uleb128 0x27
 2233 0131 19       		.uleb128 0x19
 2234 0132 11       		.uleb128 0x11
 2235 0133 01       		.uleb128 0x1
 2236 0134 12       		.uleb128 0x12
 2237 0135 06       		.uleb128 0x6
 2238 0136 40       		.uleb128 0x40
 2239 0137 18       		.uleb128 0x18
 2240 0138 9742     		.uleb128 0x2117
 2241 013a 19       		.uleb128 0x19
 2242 013b 01       		.uleb128 0x1
 2243 013c 13       		.uleb128 0x13
 2244 013d 00       		.byte	0
 2245 013e 00       		.byte	0
 2246 013f 15       		.uleb128 0x15
 2247 0140 34       		.uleb128 0x34
 2248 0141 00       		.byte	0
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 76


 2249 0142 03       		.uleb128 0x3
 2250 0143 0E       		.uleb128 0xe
 2251 0144 3A       		.uleb128 0x3a
 2252 0145 0B       		.uleb128 0xb
 2253 0146 3B       		.uleb128 0x3b
 2254 0147 0B       		.uleb128 0xb
 2255 0148 49       		.uleb128 0x49
 2256 0149 13       		.uleb128 0x13
 2257 014a 02       		.uleb128 0x2
 2258 014b 17       		.uleb128 0x17
 2259 014c 00       		.byte	0
 2260 014d 00       		.byte	0
 2261 014e 16       		.uleb128 0x16
 2262 014f 34       		.uleb128 0x34
 2263 0150 00       		.byte	0
 2264 0151 03       		.uleb128 0x3
 2265 0152 0E       		.uleb128 0xe
 2266 0153 3A       		.uleb128 0x3a
 2267 0154 0B       		.uleb128 0xb
 2268 0155 3B       		.uleb128 0x3b
 2269 0156 0B       		.uleb128 0xb
 2270 0157 49       		.uleb128 0x49
 2271 0158 13       		.uleb128 0x13
 2272 0159 02       		.uleb128 0x2
 2273 015a 18       		.uleb128 0x18
 2274 015b 00       		.byte	0
 2275 015c 00       		.byte	0
 2276 015d 17       		.uleb128 0x17
 2277 015e 34       		.uleb128 0x34
 2278 015f 00       		.byte	0
 2279 0160 03       		.uleb128 0x3
 2280 0161 0E       		.uleb128 0xe
 2281 0162 3A       		.uleb128 0x3a
 2282 0163 0B       		.uleb128 0xb
 2283 0164 3B       		.uleb128 0x3b
 2284 0165 0B       		.uleb128 0xb
 2285 0166 49       		.uleb128 0x49
 2286 0167 13       		.uleb128 0x13
 2287 0168 3F       		.uleb128 0x3f
 2288 0169 19       		.uleb128 0x19
 2289 016a 02       		.uleb128 0x2
 2290 016b 18       		.uleb128 0x18
 2291 016c 00       		.byte	0
 2292 016d 00       		.byte	0
 2293 016e 18       		.uleb128 0x18
 2294 016f 01       		.uleb128 0x1
 2295 0170 01       		.byte	0x1
 2296 0171 49       		.uleb128 0x49
 2297 0172 13       		.uleb128 0x13
 2298 0173 01       		.uleb128 0x1
 2299 0174 13       		.uleb128 0x13
 2300 0175 00       		.byte	0
 2301 0176 00       		.byte	0
 2302 0177 19       		.uleb128 0x19
 2303 0178 21       		.uleb128 0x21
 2304 0179 00       		.byte	0
 2305 017a 49       		.uleb128 0x49
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 77


 2306 017b 13       		.uleb128 0x13
 2307 017c 2F       		.uleb128 0x2f
 2308 017d 0B       		.uleb128 0xb
 2309 017e 00       		.byte	0
 2310 017f 00       		.byte	0
 2311 0180 1A       		.uleb128 0x1a
 2312 0181 0F       		.uleb128 0xf
 2313 0182 00       		.byte	0
 2314 0183 0B       		.uleb128 0xb
 2315 0184 0B       		.uleb128 0xb
 2316 0185 49       		.uleb128 0x49
 2317 0186 13       		.uleb128 0x13
 2318 0187 00       		.byte	0
 2319 0188 00       		.byte	0
 2320 0189 1B       		.uleb128 0x1b
 2321 018a 26       		.uleb128 0x26
 2322 018b 00       		.byte	0
 2323 018c 49       		.uleb128 0x49
 2324 018d 13       		.uleb128 0x13
 2325 018e 00       		.byte	0
 2326 018f 00       		.byte	0
 2327 0190 1C       		.uleb128 0x1c
 2328 0191 2E       		.uleb128 0x2e
 2329 0192 00       		.byte	0
 2330 0193 3F       		.uleb128 0x3f
 2331 0194 19       		.uleb128 0x19
 2332 0195 3C       		.uleb128 0x3c
 2333 0196 19       		.uleb128 0x19
 2334 0197 6E       		.uleb128 0x6e
 2335 0198 0E       		.uleb128 0xe
 2336 0199 03       		.uleb128 0x3
 2337 019a 0E       		.uleb128 0xe
 2338 019b 3A       		.uleb128 0x3a
 2339 019c 0B       		.uleb128 0xb
 2340 019d 3B       		.uleb128 0x3b
 2341 019e 0B       		.uleb128 0xb
 2342 019f 00       		.byte	0
 2343 01a0 00       		.byte	0
 2344 01a1 1D       		.uleb128 0x1d
 2345 01a2 2E       		.uleb128 0x2e
 2346 01a3 00       		.byte	0
 2347 01a4 3F       		.uleb128 0x3f
 2348 01a5 19       		.uleb128 0x19
 2349 01a6 3C       		.uleb128 0x3c
 2350 01a7 19       		.uleb128 0x19
 2351 01a8 6E       		.uleb128 0x6e
 2352 01a9 0E       		.uleb128 0xe
 2353 01aa 03       		.uleb128 0x3
 2354 01ab 0E       		.uleb128 0xe
 2355 01ac 3A       		.uleb128 0x3a
 2356 01ad 0B       		.uleb128 0xb
 2357 01ae 3B       		.uleb128 0x3b
 2358 01af 05       		.uleb128 0x5
 2359 01b0 00       		.byte	0
 2360 01b1 00       		.byte	0
 2361 01b2 00       		.byte	0
 2362              		.section	.debug_loc,"",%progbits
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 78


 2363              	.Ldebug_loc0:
 2364              	.LLST0:
 2365 0000 08000000 		.4byte	.LVL1
 2366 0004 58000000 		.4byte	.LVL6
 2367 0008 0100     		.2byte	0x1
 2368 000a 54       		.byte	0x54
 2369 000b 00000000 		.4byte	0
 2370 000f 00000000 		.4byte	0
 2371              	.LLST1:
 2372 0013 00000000 		.4byte	.LVL7
 2373 0017 00000000 		.4byte	.LVL7
 2374 001b 0100     		.2byte	0x1
 2375 001d 50       		.byte	0x50
 2376 001e 00000000 		.4byte	.LVL7
 2377 0022 04000000 		.4byte	.LVL8
 2378 0026 0400     		.2byte	0x4
 2379 0028 F3       		.byte	0xf3
 2380 0029 01       		.uleb128 0x1
 2381 002a 50       		.byte	0x50
 2382 002b 9F       		.byte	0x9f
 2383 002c 04000000 		.4byte	.LVL8
 2384 0030 20000000 		.4byte	.LFE4
 2385 0034 0100     		.2byte	0x1
 2386 0036 50       		.byte	0x50
 2387 0037 00000000 		.4byte	0
 2388 003b 00000000 		.4byte	0
 2389              	.LLST2:
 2390 003f 12000000 		.4byte	.LVL9
 2391 0043 1A000000 		.4byte	.LVL10
 2392 0047 0100     		.2byte	0x1
 2393 0049 53       		.byte	0x53
 2394 004a 00000000 		.4byte	0
 2395 004e 00000000 		.4byte	0
 2396              	.LLST3:
 2397 0052 00000000 		.4byte	.LVL11
 2398 0056 06000000 		.4byte	.LVL12
 2399 005a 0100     		.2byte	0x1
 2400 005c 50       		.byte	0x50
 2401 005d 06000000 		.4byte	.LVL12
 2402 0061 0C000000 		.4byte	.LFE9
 2403 0065 0400     		.2byte	0x4
 2404 0067 F3       		.byte	0xf3
 2405 0068 01       		.uleb128 0x1
 2406 0069 50       		.byte	0x50
 2407 006a 9F       		.byte	0x9f
 2408 006b 00000000 		.4byte	0
 2409 006f 00000000 		.4byte	0
 2410              	.LLST4:
 2411 0073 00000000 		.4byte	.LVL13
 2412 0077 0B000000 		.4byte	.LVL15-1
 2413 007b 0100     		.2byte	0x1
 2414 007d 50       		.byte	0x50
 2415 007e 0B000000 		.4byte	.LVL15-1
 2416 0082 0E000000 		.4byte	.LFE11
 2417 0086 0400     		.2byte	0x4
 2418 0088 F3       		.byte	0xf3
 2419 0089 01       		.uleb128 0x1
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 79


 2420 008a 50       		.byte	0x50
 2421 008b 9F       		.byte	0x9f
 2422 008c 00000000 		.4byte	0
 2423 0090 00000000 		.4byte	0
 2424              	.LLST5:
 2425 0094 00000000 		.4byte	.LVL16
 2426 0098 05000000 		.4byte	.LVL18-1
 2427 009c 0100     		.2byte	0x1
 2428 009e 50       		.byte	0x50
 2429 009f 05000000 		.4byte	.LVL18-1
 2430 00a3 0E000000 		.4byte	.LFE12
 2431 00a7 0400     		.2byte	0x4
 2432 00a9 F3       		.byte	0xf3
 2433 00aa 01       		.uleb128 0x1
 2434 00ab 50       		.byte	0x50
 2435 00ac 9F       		.byte	0x9f
 2436 00ad 00000000 		.4byte	0
 2437 00b1 00000000 		.4byte	0
 2438              	.LLST6:
 2439 00b5 02000000 		.4byte	.LVL19
 2440 00b9 06000000 		.4byte	.LVL20
 2441 00bd 0200     		.2byte	0x2
 2442 00bf 30       		.byte	0x30
 2443 00c0 9F       		.byte	0x9f
 2444 00c1 06000000 		.4byte	.LVL20
 2445 00c5 0E000000 		.4byte	.LVL22
 2446 00c9 0100     		.2byte	0x1
 2447 00cb 54       		.byte	0x54
 2448 00cc 10000000 		.4byte	.LVL23
 2449 00d0 16000000 		.4byte	.LFE10
 2450 00d4 0100     		.2byte	0x1
 2451 00d6 54       		.byte	0x54
 2452 00d7 00000000 		.4byte	0
 2453 00db 00000000 		.4byte	0
 2454              	.LLST7:
 2455 00df 00000000 		.4byte	.LVL28
 2456 00e3 27000000 		.4byte	.LVL29-1
 2457 00e7 0100     		.2byte	0x1
 2458 00e9 50       		.byte	0x50
 2459 00ea 27000000 		.4byte	.LVL29-1
 2460 00ee 4C000000 		.4byte	.LFE14
 2461 00f2 0400     		.2byte	0x4
 2462 00f4 F3       		.byte	0xf3
 2463 00f5 01       		.uleb128 0x1
 2464 00f6 50       		.byte	0x50
 2465 00f7 9F       		.byte	0x9f
 2466 00f8 00000000 		.4byte	0
 2467 00fc 00000000 		.4byte	0
 2468              	.LLST8:
 2469 0100 00000000 		.4byte	.LVL31
 2470 0104 06000000 		.4byte	.LVL32
 2471 0108 0100     		.2byte	0x1
 2472 010a 50       		.byte	0x50
 2473 010b 06000000 		.4byte	.LVL32
 2474 010f 08000000 		.4byte	.LVL33
 2475 0113 0200     		.2byte	0x2
 2476 0115 73       		.byte	0x73
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 80


 2477 0116 00       		.sleb128 0
 2478 0117 08000000 		.4byte	.LVL33
 2479 011b 0A000000 		.4byte	.LVL34
 2480 011f 0500     		.2byte	0x5
 2481 0121 0C       		.byte	0xc
 2482 0122 2B640040 		.4byte	0x4000642b
 2483 0126 0A000000 		.4byte	.LVL34
 2484 012a 10000000 		.4byte	.LFE15
 2485 012e 0400     		.2byte	0x4
 2486 0130 F3       		.byte	0xf3
 2487 0131 01       		.uleb128 0x1
 2488 0132 50       		.byte	0x50
 2489 0133 9F       		.byte	0x9f
 2490 0134 00000000 		.4byte	0
 2491 0138 00000000 		.4byte	0
 2492              	.LLST9:
 2493 013c 00000000 		.4byte	.LVL35
 2494 0140 0A000000 		.4byte	.LVL37
 2495 0144 0100     		.2byte	0x1
 2496 0146 50       		.byte	0x50
 2497 0147 0A000000 		.4byte	.LVL37
 2498 014b 2C000000 		.4byte	.LFE5
 2499 014f 0400     		.2byte	0x4
 2500 0151 F3       		.byte	0xf3
 2501 0152 01       		.uleb128 0x1
 2502 0153 50       		.byte	0x50
 2503 0154 9F       		.byte	0x9f
 2504 0155 00000000 		.4byte	0
 2505 0159 00000000 		.4byte	0
 2506              	.LLST10:
 2507 015d 00000000 		.4byte	.LVL40
 2508 0161 07000000 		.4byte	.LVL41-1
 2509 0165 0100     		.2byte	0x1
 2510 0167 50       		.byte	0x50
 2511 0168 07000000 		.4byte	.LVL41-1
 2512 016c 34000000 		.4byte	.LFE13
 2513 0170 0400     		.2byte	0x4
 2514 0172 F3       		.byte	0xf3
 2515 0173 01       		.uleb128 0x1
 2516 0174 50       		.byte	0x50
 2517 0175 9F       		.byte	0x9f
 2518 0176 00000000 		.4byte	0
 2519 017a 00000000 		.4byte	0
 2520              	.LLST11:
 2521 017e 00000000 		.4byte	.LVL43
 2522 0182 13000000 		.4byte	.LVL44-1
 2523 0186 0100     		.2byte	0x1
 2524 0188 50       		.byte	0x50
 2525 0189 13000000 		.4byte	.LVL44-1
 2526 018d 20000000 		.4byte	.LFE6
 2527 0191 0400     		.2byte	0x4
 2528 0193 F3       		.byte	0xf3
 2529 0194 01       		.uleb128 0x1
 2530 0195 50       		.byte	0x50
 2531 0196 9F       		.byte	0x9f
 2532 0197 00000000 		.4byte	0
 2533 019b 00000000 		.4byte	0
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 81


 2534              	.LLST12:
 2535 019f 00000000 		.4byte	.LVL47
 2536 01a3 04000000 		.4byte	.LVL48
 2537 01a7 0200     		.2byte	0x2
 2538 01a9 30       		.byte	0x30
 2539 01aa 9F       		.byte	0x9f
 2540 01ab 04000000 		.4byte	.LVL48
 2541 01af 0C000000 		.4byte	.LFE16
 2542 01b3 0100     		.2byte	0x1
 2543 01b5 50       		.byte	0x50
 2544 01b6 00000000 		.4byte	0
 2545 01ba 00000000 		.4byte	0
 2546              	.LLST13:
 2547 01be 10000000 		.4byte	.LVL53
 2548 01c2 27000000 		.4byte	.LVL54-1
 2549 01c6 0100     		.2byte	0x1
 2550 01c8 50       		.byte	0x50
 2551 01c9 42000000 		.4byte	.LVL55
 2552 01cd 59000000 		.4byte	.LVL56-1
 2553 01d1 0100     		.2byte	0x1
 2554 01d3 50       		.byte	0x50
 2555 01d4 00000000 		.4byte	0
 2556 01d8 00000000 		.4byte	0
 2557              		.section	.debug_aranges,"",%progbits
 2558 0000 AC000000 		.4byte	0xac
 2559 0004 0200     		.2byte	0x2
 2560 0006 00000000 		.4byte	.Ldebug_info0
 2561 000a 04       		.byte	0x4
 2562 000b 00       		.byte	0
 2563 000c 0000     		.2byte	0
 2564 000e 0000     		.2byte	0
 2565 0010 00000000 		.4byte	.LFB1
 2566 0014 68000000 		.4byte	.LFE1-.LFB1
 2567 0018 00000000 		.4byte	.LFB4
 2568 001c 20000000 		.4byte	.LFE4-.LFB4
 2569 0020 00000000 		.4byte	.LFB8
 2570 0024 10000000 		.4byte	.LFE8-.LFB8
 2571 0028 00000000 		.4byte	.LFB9
 2572 002c 0C000000 		.4byte	.LFE9-.LFB9
 2573 0030 00000000 		.4byte	.LFB11
 2574 0034 0E000000 		.4byte	.LFE11-.LFB11
 2575 0038 00000000 		.4byte	.LFB12
 2576 003c 0E000000 		.4byte	.LFE12-.LFB12
 2577 0040 00000000 		.4byte	.LFB10
 2578 0044 16000000 		.4byte	.LFE10-.LFB10
 2579 0048 00000000 		.4byte	.LFB3
 2580 004c 68000000 		.4byte	.LFE3-.LFB3
 2581 0050 00000000 		.4byte	.LFB14
 2582 0054 4C000000 		.4byte	.LFE14-.LFB14
 2583 0058 00000000 		.4byte	.LFB15
 2584 005c 10000000 		.4byte	.LFE15-.LFB15
 2585 0060 00000000 		.4byte	.LFB5
 2586 0064 2C000000 		.4byte	.LFE5-.LFB5
 2587 0068 00000000 		.4byte	.LFB13
 2588 006c 34000000 		.4byte	.LFE13-.LFB13
 2589 0070 00000000 		.4byte	.LFB6
 2590 0074 20000000 		.4byte	.LFE6-.LFB6
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 82


 2591 0078 00000000 		.4byte	.LFB7
 2592 007c 38000000 		.4byte	.LFE7-.LFB7
 2593 0080 00000000 		.4byte	.LFB16
 2594 0084 0C000000 		.4byte	.LFE16-.LFB16
 2595 0088 00000000 		.4byte	.LFB17
 2596 008c 0C000000 		.4byte	.LFE17-.LFB17
 2597 0090 00000000 		.4byte	.LFB18
 2598 0094 20000000 		.4byte	.LFE18-.LFB18
 2599 0098 00000000 		.4byte	.LFB0
 2600 009c E4000000 		.4byte	.LFE0-.LFB0
 2601 00a0 00000000 		.4byte	.LFB2
 2602 00a4 2C000000 		.4byte	.LFE2-.LFB2
 2603 00a8 00000000 		.4byte	0
 2604 00ac 00000000 		.4byte	0
 2605              		.section	.debug_ranges,"",%progbits
 2606              	.Ldebug_ranges0:
 2607 0000 00000000 		.4byte	.LFB1
 2608 0004 68000000 		.4byte	.LFE1
 2609 0008 00000000 		.4byte	.LFB4
 2610 000c 20000000 		.4byte	.LFE4
 2611 0010 00000000 		.4byte	.LFB8
 2612 0014 10000000 		.4byte	.LFE8
 2613 0018 00000000 		.4byte	.LFB9
 2614 001c 0C000000 		.4byte	.LFE9
 2615 0020 00000000 		.4byte	.LFB11
 2616 0024 0E000000 		.4byte	.LFE11
 2617 0028 00000000 		.4byte	.LFB12
 2618 002c 0E000000 		.4byte	.LFE12
 2619 0030 00000000 		.4byte	.LFB10
 2620 0034 16000000 		.4byte	.LFE10
 2621 0038 00000000 		.4byte	.LFB3
 2622 003c 68000000 		.4byte	.LFE3
 2623 0040 00000000 		.4byte	.LFB14
 2624 0044 4C000000 		.4byte	.LFE14
 2625 0048 00000000 		.4byte	.LFB15
 2626 004c 10000000 		.4byte	.LFE15
 2627 0050 00000000 		.4byte	.LFB5
 2628 0054 2C000000 		.4byte	.LFE5
 2629 0058 00000000 		.4byte	.LFB13
 2630 005c 34000000 		.4byte	.LFE13
 2631 0060 00000000 		.4byte	.LFB6
 2632 0064 20000000 		.4byte	.LFE6
 2633 0068 00000000 		.4byte	.LFB7
 2634 006c 38000000 		.4byte	.LFE7
 2635 0070 00000000 		.4byte	.LFB16
 2636 0074 0C000000 		.4byte	.LFE16
 2637 0078 00000000 		.4byte	.LFB17
 2638 007c 0C000000 		.4byte	.LFE17
 2639 0080 00000000 		.4byte	.LFB18
 2640 0084 20000000 		.4byte	.LFE18
 2641 0088 00000000 		.4byte	.LFB0
 2642 008c E4000000 		.4byte	.LFE0
 2643 0090 00000000 		.4byte	.LFB2
 2644 0094 2C000000 		.4byte	.LFE2
 2645 0098 00000000 		.4byte	0
 2646 009c 00000000 		.4byte	0
 2647              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 83


 2648              	.Ldebug_line0:
 2649 0000 AE020000 		.section	.debug_str,"MS",%progbits,1
 2649      0200C900 
 2649      00000201 
 2649      FB0E0D00 
 2649      01010101 
 2650              	.LASF10:
 2651 0000 75696E74 		.ascii	"uint16\000"
 2651      313600
 2652              	.LASF50:
 2653 0007 43617053 		.ascii	"CapSense_csv\000"
 2653      656E7365 
 2653      5F637376 
 2653      00
 2654              	.LASF66:
 2655 0014 43794578 		.ascii	"CyExitCriticalSection\000"
 2655      69744372 
 2655      69746963 
 2655      616C5365 
 2655      6374696F 
 2656              	.LASF82:
 2657 002a 47656E65 		.ascii	"Generated_Source\\PSoC5\\CapSense.c\000"
 2657      72617465 
 2657      645F536F 
 2657      75726365 
 2657      5C50536F 
 2658              	.LASF48:
 2659 004c 43617053 		.ascii	"CapSense_initVar\000"
 2659      656E7365 
 2659      5F696E69 
 2659      74566172 
 2659      00
 2660              	.LASF54:
 2661 005d 43617053 		.ascii	"CapSense_pcTable\000"
 2661      656E7365 
 2661      5F706354 
 2661      61626C65 
 2661      00
 2662              	.LASF49:
 2663 006e 43617053 		.ascii	"CapSense_lowLevelTuningDone\000"
 2663      656E7365 
 2663      5F6C6F77 
 2663      4C657665 
 2663      6C54756E 
 2664              	.LASF72:
 2665 008a 43617053 		.ascii	"CapSense_IdacCH0_SetValue\000"
 2665      656E7365 
 2665      5F496461 
 2665      63434830 
 2665      5F536574 
 2666              	.LASF24:
 2667 00a4 736E7349 		.ascii	"snsIndex\000"
 2667      6E646578 
 2667      00
 2668              	.LASF7:
 2669 00ad 6C6F6E67 		.ascii	"long long unsigned int\000"
 2669      206C6F6E 
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 84


 2669      6720756E 
 2669      7369676E 
 2669      65642069 
 2670              	.LASF64:
 2671 00c4 43617053 		.ascii	"CapSense_CompCH0_Enable\000"
 2671      656E7365 
 2671      5F436F6D 
 2671      70434830 
 2671      5F456E61 
 2672              	.LASF26:
 2673 00dc 43617053 		.ascii	"CapSense_Enable\000"
 2673      656E7365 
 2673      5F456E61 
 2673      626C6500 
 2674              	.LASF34:
 2675 00ec 43617053 		.ascii	"CapSense_SetPrescaler\000"
 2675      656E7365 
 2675      5F536574 
 2675      50726573 
 2675      63616C65 
 2676              	.LASF6:
 2677 0102 6C6F6E67 		.ascii	"long long int\000"
 2677      206C6F6E 
 2677      6720696E 
 2677      7400
 2678              	.LASF0:
 2679 0110 7369676E 		.ascii	"signed char\000"
 2679      65642063 
 2679      68617200 
 2680              	.LASF45:
 2681 011c 43617053 		.ascii	"CapSense_SetAnalogSwitchesSource\000"
 2681      656E7365 
 2681      5F536574 
 2681      416E616C 
 2681      6F675377 
 2682              	.LASF4:
 2683 013d 6C6F6E67 		.ascii	"long int\000"
 2683      20696E74 
 2683      00
 2684              	.LASF16:
 2685 0146 72656731 		.ascii	"reg16\000"
 2685      3600
 2686              	.LASF9:
 2687 014c 75696E74 		.ascii	"uint8\000"
 2687      3800
 2688              	.LASF75:
 2689 0152 43617053 		.ascii	"CapSense_AMuxCH0_Init\000"
 2689      656E7365 
 2689      5F414D75 
 2689      78434830 
 2689      5F496E69 
 2690              	.LASF13:
 2691 0168 646F7562 		.ascii	"double\000"
 2691      6C6500
 2692              	.LASF27:
 2693 016f 43617053 		.ascii	"CapSense_EnableSensor\000"
 2693      656E7365 
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 85


 2693      5F456E61 
 2693      626C6553 
 2693      656E736F 
 2694              	.LASF71:
 2695 0185 43617053 		.ascii	"CapSense_IdacCH0_Stop\000"
 2695      656E7365 
 2695      5F496461 
 2695      63434830 
 2695      5F53746F 
 2696              	.LASF61:
 2697 019b 43617053 		.ascii	"CapSense_widgetNumber\000"
 2697      656E7365 
 2697      5F776964 
 2697      6765744E 
 2697      756D6265 
 2698              	.LASF23:
 2699 01b1 43617053 		.ascii	"CapSense_ReadSensorRaw\000"
 2699      656E7365 
 2699      5F526561 
 2699      6453656E 
 2699      736F7252 
 2700              	.LASF11:
 2701 01c8 75696E74 		.ascii	"uint32\000"
 2701      333200
 2702              	.LASF73:
 2703 01cf 4379496E 		.ascii	"CyIntSetVector\000"
 2703      74536574 
 2703      56656374 
 2703      6F7200
 2704              	.LASF29:
 2705 01de 6D61736B 		.ascii	"mask\000"
 2705      00
 2706              	.LASF76:
 2707 01e3 43617053 		.ascii	"CapSense_CompCH0_Init\000"
 2707      656E7365 
 2707      5F436F6D 
 2707      70434830 
 2707      5F496E69 
 2708              	.LASF28:
 2709 01f9 706F7274 		.ascii	"port\000"
 2709      00
 2710              	.LASF51:
 2711 01fe 43617053 		.ascii	"CapSense_sensorIndex\000"
 2711      656E7365 
 2711      5F73656E 
 2711      736F7249 
 2711      6E646578 
 2712              	.LASF40:
 2713 0213 43617053 		.ascii	"CapSense_ScanSensor\000"
 2713      656E7365 
 2713      5F536361 
 2713      6E53656E 
 2713      736F7200 
 2714              	.LASF8:
 2715 0227 756E7369 		.ascii	"unsigned int\000"
 2715      676E6564 
 2715      20696E74 
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 86


 2715      00
 2716              	.LASF31:
 2717 0234 43617053 		.ascii	"CapSense_ClearSensors\000"
 2717      656E7365 
 2717      5F436C65 
 2717      61725365 
 2717      6E736F72 
 2718              	.LASF79:
 2719 024a 43617053 		.ascii	"CapSense_IdacCH0_SetRange\000"
 2719      656E7365 
 2719      5F496461 
 2719      63434830 
 2719      5F536574 
 2720              	.LASF5:
 2721 0264 6C6F6E67 		.ascii	"long unsigned int\000"
 2721      20756E73 
 2721      69676E65 
 2721      6420696E 
 2721      7400
 2722              	.LASF56:
 2723 0276 43617053 		.ascii	"CapSense_maskTable\000"
 2723      656E7365 
 2723      5F6D6173 
 2723      6B546162 
 2723      6C6500
 2724              	.LASF55:
 2725 0289 43617053 		.ascii	"CapSense_portTable\000"
 2725      656E7365 
 2725      5F706F72 
 2725      74546162 
 2725      6C6500
 2726              	.LASF63:
 2727 029c 43617053 		.ascii	"CapSense_IntClock_Start\000"
 2727      656E7365 
 2727      5F496E74 
 2727      436C6F63 
 2727      6B5F5374 
 2728              	.LASF62:
 2729 02b4 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2729      74657243 
 2729      72697469 
 2729      63616C53 
 2729      65637469 
 2730              	.LASF3:
 2731 02cb 73686F72 		.ascii	"short unsigned int\000"
 2731      7420756E 
 2731      7369676E 
 2731      65642069 
 2731      6E7400
 2732              	.LASF69:
 2733 02de 43617053 		.ascii	"CapSense_IntClock_Stop\000"
 2733      656E7365 
 2733      5F496E74 
 2733      436C6F63 
 2733      6B5F5374 
 2734              	.LASF83:
 2735 02f5 433A5C55 		.ascii	"C:\\Users\\Arold\\Documents\\GitHub\\Green-House\\G"
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 87


 2735      73657273 
 2735      5C41726F 
 2735      6C645C44 
 2735      6F63756D 
 2736 0322 7265656E 		.ascii	"reen_House\\Green_House.cydsn\000"
 2736      5F486F75 
 2736      73655C47 
 2736      7265656E 
 2736      5F486F75 
 2737              	.LASF25:
 2738 033f 73656E73 		.ascii	"sensor\000"
 2738      6F7200
 2739              	.LASF53:
 2740 0346 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 2740      656E7365 
 2740      5F73656E 
 2740      736F7245 
 2740      6E61626C 
 2741              	.LASF37:
 2742 0360 736C6F74 		.ascii	"slot\000"
 2742      00
 2743              	.LASF80:
 2744 0365 43617053 		.ascii	"CapSense_AutoTune\000"
 2744      656E7365 
 2744      5F417574 
 2744      6F54756E 
 2744      6500
 2745              	.LASF17:
 2746 0377 72656733 		.ascii	"reg32\000"
 2746      3200
 2747              	.LASF60:
 2748 037d 43617053 		.ascii	"CapSense_analogSwitchDivider\000"
 2748      656E7365 
 2748      5F616E61 
 2748      6C6F6753 
 2748      77697463 
 2749              	.LASF19:
 2750 039a 73697A65 		.ascii	"sizetype\000"
 2750      74797065 
 2750      00
 2751              	.LASF57:
 2752 03a3 43617053 		.ascii	"CapSense_csTable\000"
 2752      656E7365 
 2752      5F637354 
 2752      61626C65 
 2752      00
 2753              	.LASF18:
 2754 03b4 6C6F6E67 		.ascii	"long double\000"
 2754      20646F75 
 2754      626C6500 
 2755              	.LASF32:
 2756 03c0 43617053 		.ascii	"CapSense_Stop\000"
 2756      656E7365 
 2756      5F53746F 
 2756      7000
 2757              	.LASF44:
 2758 03ce 7363616E 		.ascii	"scanSpeed\000"
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 88


 2758      53706565 
 2758      6400
 2759              	.LASF21:
 2760 03d8 656E4D61 		.ascii	"enMask\000"
 2760      736B00
 2761              	.LASF78:
 2762 03df 43617053 		.ascii	"CapSense_IdacCH0_SetPolarity\000"
 2762      656E7365 
 2762      5F496461 
 2762      63434830 
 2762      5F536574 
 2763              	.LASF74:
 2764 03fc 4379496E 		.ascii	"CyIntSetPriority\000"
 2764      74536574 
 2764      5072696F 
 2764      72697479 
 2764      00
 2765              	.LASF58:
 2766 040d 43617053 		.ascii	"CapSense_idacSettings\000"
 2766      656E7365 
 2766      5F696461 
 2766      63536574 
 2766      74696E67 
 2767              	.LASF12:
 2768 0423 666C6F61 		.ascii	"float\000"
 2768      7400
 2769              	.LASF35:
 2770 0429 70726573 		.ascii	"prescaler\000"
 2770      63616C65 
 2770      7200
 2771              	.LASF15:
 2772 0433 72656738 		.ascii	"reg8\000"
 2772      00
 2773              	.LASF22:
 2774 0438 43617053 		.ascii	"CapSense_FindNextSensor\000"
 2774      656E7365 
 2774      5F46696E 
 2774      644E6578 
 2774      7453656E 
 2775              	.LASF1:
 2776 0450 756E7369 		.ascii	"unsigned char\000"
 2776      676E6564 
 2776      20636861 
 2776      7200
 2777              	.LASF77:
 2778 045e 43617053 		.ascii	"CapSense_IdacCH0_Init\000"
 2778      656E7365 
 2778      5F496461 
 2778      63434830 
 2778      5F496E69 
 2779              	.LASF59:
 2780 0474 43617053 		.ascii	"CapSense_widgetResolution\000"
 2780      656E7365 
 2780      5F776964 
 2780      67657452 
 2780      65736F6C 
 2781              	.LASF2:
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 89


 2782 048e 73686F72 		.ascii	"short int\000"
 2782      7420696E 
 2782      7400
 2783              	.LASF38:
 2784 0498 77696467 		.ascii	"widget\000"
 2784      657400
 2785              	.LASF36:
 2786 049f 43617053 		.ascii	"CapSense_SetScanSlotSettings\000"
 2786      656E7365 
 2786      5F536574 
 2786      5363616E 
 2786      536C6F74 
 2787              	.LASF42:
 2788 04bc 43617053 		.ascii	"CapSense_GetPrescaler\000"
 2788      656E7365 
 2788      5F476574 
 2788      50726573 
 2788      63616C65 
 2789              	.LASF81:
 2790 04d2 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2790      43313120 
 2790      352E342E 
 2790      31203230 
 2790      31363036 
 2791 0505 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2791      20726576 
 2791      6973696F 
 2791      6E203233 
 2791      37373135 
 2792 0538 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2792      66756E63 
 2792      74696F6E 
 2792      2D736563 
 2792      74696F6E 
 2793              	.LASF14:
 2794 0560 63686172 		.ascii	"char\000"
 2794      00
 2795              	.LASF65:
 2796 0565 43617053 		.ascii	"CapSense_IdacCH0_Enable\000"
 2796      656E7365 
 2796      5F496461 
 2796      63434830 
 2796      5F456E61 
 2797              	.LASF43:
 2798 057d 43617053 		.ascii	"CapSense_SetScanSpeed\000"
 2798      656E7365 
 2798      5F536574 
 2798      5363616E 
 2798      53706565 
 2799              	.LASF67:
 2800 0593 43617053 		.ascii	"CapSense_AMuxCH0_Set\000"
 2800      656E7365 
 2800      5F414D75 
 2800      78434830 
 2800      5F536574 
 2801              	.LASF47:
 2802 05a8 43617053 		.ascii	"CapSense_Start\000"
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 90


 2802      656E7365 
 2802      5F537461 
 2802      727400
 2803              	.LASF33:
 2804 05b7 43617053 		.ascii	"CapSense_PostScan\000"
 2804      656E7365 
 2804      5F506F73 
 2804      74536361 
 2804      6E00
 2805              	.LASF20:
 2806 05c9 656E6162 		.ascii	"enableInterrupts\000"
 2806      6C65496E 
 2806      74657272 
 2806      75707473 
 2806      00
 2807              	.LASF70:
 2808 05da 43617053 		.ascii	"CapSense_CompCH0_Stop\000"
 2808      656E7365 
 2808      5F436F6D 
 2808      70434830 
 2808      5F53746F 
 2809              	.LASF30:
 2810 05f0 43617053 		.ascii	"CapSense_DisableSensor\000"
 2810      656E7365 
 2810      5F446973 
 2810      61626C65 
 2810      53656E73 
 2811              	.LASF39:
 2812 0607 43617053 		.ascii	"CapSense_PreScan\000"
 2812      656E7365 
 2812      5F507265 
 2812      5363616E 
 2812      00
 2813              	.LASF46:
 2814 0618 43617053 		.ascii	"CapSense_Init\000"
 2814      656E7365 
 2814      5F496E69 
 2814      7400
 2815              	.LASF52:
 2816 0626 43617053 		.ascii	"CapSense_sensorRaw\000"
 2816      656E7365 
 2816      5F73656E 
 2816      736F7252 
 2816      617700
 2817              	.LASF41:
 2818 0639 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 2818      656E7365 
 2818      5F536361 
 2818      6E456E61 
 2818      626C6564 
 2819              	.LASF68:
 2820 0655 43617053 		.ascii	"CapSense_AMuxCH0_Unset\000"
 2820      656E7365 
 2820      5F414D75 
 2820      78434830 
 2820      5F556E73 
 2821              	.LASF84:
ARM GAS  C:\Users\Arold\AppData\Local\Temp\cczJZgXc.s 			page 91


 2822 066c 43617053 		.ascii	"CapSense_IsBusy\000"
 2822      656E7365 
 2822      5F497342 
 2822      75737900 
 2823              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
